/* Generated by Cython 3.0.11 */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"

    #if PY_MAJOR_VERSION >= 3
      #define __Pyx_PyFloat_FromString(obj)  PyFloat_FromString(obj)
    #else
      #define __Pyx_PyFloat_FromString(obj)  PyFloat_FromString(obj, NULL)
    #endif
    

    #if PY_MAJOR_VERSION <= 2
    #define PyDict_GetItemWithError _PyDict_GetItemWithError
    #endif
    

    #if (PY_VERSION_HEX < 0x030700b1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM < 0x07030600)) && !defined(PyContextVar_Get)
    #define PyContextVar_Get(var, d, v)         ((d) ?             ((void)(var), Py_INCREF(d), (v)[0] = (d), 0) :             ((v)[0] = NULL, 0)         )
    #endif
    
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#if defined(CYTHON_LIMITED_API) && CYTHON_LIMITED_API
#define __PYX_EXTRA_ABI_MODULE_NAME "limited"
#else
#define __PYX_EXTRA_ABI_MODULE_NAME ""
#endif
#define CYTHON_ABI "3_0_11" __PYX_EXTRA_ABI_MODULE_NAME
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x03000BF0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(Py_GIL_DISABLED) || defined(Py_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 0
  #endif
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    static CYTHON_INLINE PyObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030B0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030B0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
    #ifndef CO_OPTIMIZED
    #define CO_OPTIMIZED 0x0001
    #endif
    #ifndef CO_NEWLOCALS
    #define CO_NEWLOCALS 0x0002
    #endif
    #ifndef CO_VARARGS
    #define CO_VARARGS 0x0004
    #endif
    #ifndef CO_VARKEYWORDS
    #define CO_VARKEYWORDS 0x0008
    #endif
    #ifndef CO_ASYNC_GENERATOR
    #define CO_ASYNC_GENERATOR 0x0200
    #endif
    #ifndef CO_GENERATOR
    #define CO_GENERATOR 0x0020
    #endif
    #ifndef CO_COROUTINE
    #define CO_COROUTINE 0x0080
    #endif
#elif PY_VERSION_HEX >= 0x030B0000
  static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);
    if (!empty_bytes) return NULL;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, empty_bytes);
    Py_DECREF(empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_MAJOR_VERSION >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void *cfunc) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000 || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && PY_VERSION_HEX < 0x030d0000 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyObject_GenericSetAttr((PyObject*)tp, k, v)
#else
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyDict_SetItem(tp->tp_dict, k, v)
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__;  (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__pylivox
#define __PYX_HAVE_API__pylivox
/* Early includes */
#include <stdint.h>
#include <string.h>
#include <stdio.h>
#include <stddef.h>
#include "pythread.h"

    #if CYTHON_COMPILING_IN_PYPY
    #ifdef _MSC_VER
    #pragma message ("This module uses CPython specific internals of 'array.array', which are not available in PyPy.")
    #else
    #warning This module uses CPython specific internals of 'array.array', which are not available in PyPy.
    #endif
    #endif
    
#include "../sdk_core/include/livox_sdk.h"
#include "../sdk_core/include/livox_def.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
#include <string.h>
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#include <string.h>
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "pylivox.pyx",
  "<stringsource>",
  "livox_sdk_venv/lib/python3.7/site-packages/Cython/Includes/cpython/contextvars.pxd",
  "livox_sdk_venv/lib/python3.7/site-packages/Cython/Includes/cpython/array.pxd",
  "livox_sdk_venv/lib/python3.7/site-packages/Cython/Includes/cpython/type.pxd",
  "livox_sdk_venv/lib/python3.7/site-packages/Cython/Includes/cpython/bool.pxd",
  "livox_sdk_venv/lib/python3.7/site-packages/Cython/Includes/cpython/complex.pxd",
};
/* #### Code section: utility_code_proto_before_types ### */
/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* #### Code section: numeric_typedefs ### */

/* "pylivox.pyx":15
 * kBroadcastCodeSize = 16
 * 
 * ctypedef int32_t livox_status             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "../sdk_core/include/livox_sdk.h":
 */
typedef int32_t __pyx_t_7pylivox_livox_status;
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
#ifndef _ARRAYARRAY_H
struct arrayobject;
typedef struct arrayobject arrayobject;
#endif
struct __pyx_obj_7pylivox_PyDeviceType;
struct __pyx_obj_7pylivox_PyLidarState;
struct __pyx_obj_7pylivox_PyLidarMode;
struct __pyx_obj_7pylivox_PyLidarFeature;
struct __pyx_obj_7pylivox_PyLidarIpMode;
struct __pyx_obj_7pylivox_PyLidarScanPattern;
struct __pyx_obj_7pylivox_PyLivoxStatus;
struct __pyx_obj_7pylivox_PyDeviceEvent;
struct __pyx_obj_7pylivox_PyTimestampType;
struct __pyx_obj_7pylivox_PyPointDataType;
struct __pyx_obj_7pylivox_PyPointCloudReturnMode;
struct __pyx_obj_7pylivox_PyImuFreq;
struct __pyx_obj_7pylivox_PyLivoxSdkVersion;
struct __pyx_obj_7pylivox_PyLivoxRawPoint;
struct __pyx_obj_7pylivox_PyLivoxSpherPoint;
struct __pyx_obj_7pylivox_PyLivoxPoint;
struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint;
struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint;
struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint;
struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint;
struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint;
struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint;
struct __pyx_obj_7pylivox_PyLivoxImuPoint;
struct __pyx_obj_7pylivox_PyLidarErrorCode;
struct __pyx_obj_7pylivox_PyHubErrorCode;
struct __pyx_obj_7pylivox_PyErrorMessage;
struct __pyx_obj_7pylivox_PyLivoxEthPacket;
struct __pyx_obj_7pylivox_PyStatusUnion;
struct __pyx_obj_7pylivox_PyDeviceInfo;
struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo;
struct __pyx_obj_7pylivox_PyConnectedLidarInfo;
struct __pyx_obj_7pylivox_PyLidarModeRequestItem;
struct __pyx_obj_7pylivox_PyReturnCode;
struct __pyx_obj_7pylivox_PyDeviceBroadcastCode;
struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem;
struct __pyx_opt_args_7cpython_11contextvars_get_value;
struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default;

/* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */
struct __pyx_opt_args_7cpython_11contextvars_get_value {
  int __pyx_n;
  PyObject *default_value;
};

/* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */
struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default {
  int __pyx_n;
  PyObject *default_value;
};

/* "pylivox.pyx":432
 *         uint8_t feature # Close or open the rain and fog feature.
 * 
 * cdef class PyDeviceType:             # <<<<<<<<<<<<<<
 *     '''
 *     Device type.
 */
struct __pyx_obj_7pylivox_PyDeviceType {
  PyObject_HEAD
};


/* "pylivox.pyx":460
 *         return DeviceType.kDeviceTypeLidarAvia
 * 
 * cdef class PyLidarState:             # <<<<<<<<<<<<<<
 *     '''
 *     Lidar state.
 */
struct __pyx_obj_7pylivox_PyLidarState {
  PyObject_HEAD
};


/* "pylivox.pyx":489
 * 
 * 
 * cdef class PyLidarMode:             # <<<<<<<<<<<<<<
 *     '''
 *     Lidar mode.
 */
struct __pyx_obj_7pylivox_PyLidarMode {
  PyObject_HEAD
};


/* "pylivox.pyx":505
 *         return LidarMode.kLidarModeStandby
 * 
 * cdef class PyLidarFeature:             # <<<<<<<<<<<<<<
 *     '''
 *     Lidar feature.
 */
struct __pyx_obj_7pylivox_PyLidarFeature {
  PyObject_HEAD
};


/* "pylivox.pyx":517
 *         return LidarFeature.kLidarFeatureRainFog
 * 
 * cdef class PyLidarIpMode:             # <<<<<<<<<<<<<<
 *     '''
 *     Lidar IP mode.
 */
struct __pyx_obj_7pylivox_PyLidarIpMode {
  PyObject_HEAD
};


/* "pylivox.pyx":529
 *         return LidarIpMode.kLidarStaticIpMode
 * 
 * cdef class PyLidarScanPattern:             # <<<<<<<<<<<<<<
 *     '''
 *     Lidar Scan Pattern.
 */
struct __pyx_obj_7pylivox_PyLidarScanPattern {
  PyObject_HEAD
};


/* "pylivox.pyx":541
 *         return LidarScanPattern.kRepetitiveScanPattern
 * 
 * cdef class PyLivoxStatus:             # <<<<<<<<<<<<<<
 *     '''
 *     Function return value definition.
 */
struct __pyx_obj_7pylivox_PyLivoxStatus {
  PyObject_HEAD
};


/* "pylivox.pyx":585
 *         return LivoxStatus.kStatusSuccess
 * 
 * cdef class PyDeviceEvent:             # <<<<<<<<<<<<<<
 *     '''
 *     Device update type, indicating the change of device connection or working state.
 */
struct __pyx_obj_7pylivox_PyDeviceEvent {
  PyObject_HEAD
};


/* "pylivox.pyx":605
 *         return DeviceEvent.kEventHubConnectionChange
 * 
 * cdef class PyTimestampType:             # <<<<<<<<<<<<<<
 *     '''
 *     Timestamp sync mode define.
 */
struct __pyx_obj_7pylivox_PyTimestampType {
  PyObject_HEAD
};


/* "pylivox.pyx":633
 *         return TimestampType.kTimestampTypeUnknown
 * 
 * cdef class PyPointDataType:             # <<<<<<<<<<<<<<
 *     '''
 *     Point data type.
 */
struct __pyx_obj_7pylivox_PyPointDataType {
  PyObject_HEAD
};


/* "pylivox.pyx":677
 *         return PointDataType.kMaxPointDataType
 * 
 * cdef class PyPointCloudReturnMode:             # <<<<<<<<<<<<<<
 *     '''
 *     Point cloud return mode.
 */
struct __pyx_obj_7pylivox_PyPointCloudReturnMode {
  PyObject_HEAD
};


/* "pylivox.pyx":697
 *         return PointCloudReturnMode.kTripleReturn
 * 
 * cdef class PyImuFreq:             # <<<<<<<<<<<<<<
 *     '''
 *     IMU push frequency.
 */
struct __pyx_obj_7pylivox_PyImuFreq {
  PyObject_HEAD
};


/* "pylivox.pyx":709
 *         return ImuFreq.kImuFreq200Hz
 * 
 * cdef class PyLivoxSdkVersion:             # <<<<<<<<<<<<<<
 *     '''
 *     The numeric version information struct.
 */
struct __pyx_obj_7pylivox_PyLivoxSdkVersion {
  PyObject_HEAD
  LivoxSdkVersion core;
};


/* "pylivox.pyx":742
 *         self.core.patch = patch
 * 
 * cdef class PyLivoxRawPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Cartesian coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxRawPoint {
  PyObject_HEAD
  LivoxRawPoint core;
};


/* "pylivox.pyx":783
 *         self.core.reflectivity = reflectivity
 * 
 * cdef class PyLivoxSpherPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Spherical coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxSpherPoint {
  PyObject_HEAD
  LivoxSpherPoint core;
};


/* "pylivox.pyx":824
 *         self.core.reflectivity = reflectivity
 * 
 * cdef class PyLivoxPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Standard point cloud format.
 */
struct __pyx_obj_7pylivox_PyLivoxPoint {
  PyObject_HEAD
  LivoxPoint core;
};


/* "pylivox.pyx":866
 * 
 * # Class to wrap the LivoxExtendRawPoint struct
 * cdef class PyLivoxExtendRawPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Extend cartesian coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint {
  PyObject_HEAD
  LivoxExtendRawPoint core;
};


/* "pylivox.pyx":916
 * 
 * # Class to wrap the LivoxExtendSpherPoint struct
 * cdef class PyLivoxExtendSpherPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Extend spherical coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint {
  PyObject_HEAD
  LivoxExtendSpherPoint core;
};


/* "pylivox.pyx":966
 * 
 * # Class to wrap the LivoxDualExtendRawPoint struct
 * cdef class PyLivoxDualExtendRawPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Dual extend cartesian coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint {
  PyObject_HEAD
  LivoxDualExtendRawPoint core;
};


/* "pylivox.pyx":1057
 * 
 * # Class to wrap the LivoxDualExtendSpherPoint struct
 * cdef class PyLivoxDualExtendSpherPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Dual extend spherical coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint {
  PyObject_HEAD
  LivoxDualExtendSpherPoint core;
};


/* "pylivox.pyx":1132
 * 
 * # Class to wrap the LivoxTripleExtendRawPoint struct
 * cdef class PyLivoxTripleExtendRawPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Triple extend cartesian coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint {
  PyObject_HEAD
  LivoxTripleExtendRawPoint core;
};


/* "pylivox.pyx":1266
 * 
 * # Class to wrap the LivoxTripleExtendSpherPoint struct
 * cdef class PyLivoxTripleExtendSpherPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     Triple extend spherical coordinate format.
 */
struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint {
  PyObject_HEAD
  LivoxTripleExtendSpherPoint core;
};


/* "pylivox.pyx":1367
 *         self.core.tag3 = tag3
 * 
 * cdef class PyLivoxImuPoint:             # <<<<<<<<<<<<<<
 *     '''
 *     IMU data format.
 */
struct __pyx_obj_7pylivox_PyLivoxImuPoint {
  PyObject_HEAD
  LivoxImuPoint core;
};


/* "pylivox.pyx":1426
 * 
 * # Class to wrap the LidarErrorCode struct
 * cdef class PyLidarErrorCode:             # <<<<<<<<<<<<<<
 *     '''
 *     LiDAR error code.
 */
struct __pyx_obj_7pylivox_PyLidarErrorCode {
  PyObject_HEAD
  LidarErrorCode core;
};


/* "pylivox.pyx":1547
 * 
 * # Class to wrap the HubErrorCode struct
 * cdef class PyHubErrorCode:             # <<<<<<<<<<<<<<
 *     '''
 *     Hub error code.
 */
struct __pyx_obj_7pylivox_PyHubErrorCode {
  PyObject_HEAD
  HubErrorCode core;
};


/* "pylivox.pyx":1616
 * 
 * # Class to wrap the ErrorMessage union
 * cdef class PyErrorMessage:             # <<<<<<<<<<<<<<
 *     '''
 *     Device error message.
 */
struct __pyx_obj_7pylivox_PyErrorMessage {
  PyObject_HEAD
  ErrorMessage core;
};


/* "pylivox.pyx":1656
 * 
 * # Class to wrap LivoxEthPacket
 * cdef class PyLivoxEthPacket:             # <<<<<<<<<<<<<<
 *     '''
 *     Point cloud packet.
 */
struct __pyx_obj_7pylivox_PyLivoxEthPacket {
  PyObject_HEAD
  LivoxEthPacket core;
};


/* "pylivox.pyx":1739
 * 
 * # Class to wrap StatusUnion
 * cdef class PyStatusUnion:             # <<<<<<<<<<<<<<
 *     '''
 *     Information of LiDAR work state.
 */
struct __pyx_obj_7pylivox_PyStatusUnion {
  PyObject_HEAD
  StatusUnion core;
};


/* "pylivox.pyx":1766
 * 
 * # Class to wrap DeviceInfo
 * cdef class PyDeviceInfo:             # <<<<<<<<<<<<<<
 *     '''
 *     Information of the connected LiDAR or hub.
 */
struct __pyx_obj_7pylivox_PyDeviceInfo {
  PyObject_HEAD
  DeviceInfo core;
};


/* "pylivox.pyx":1897
 * 
 * # Class to wrap BroadcastDeviceInfo
 * cdef class PyBroadcastDeviceInfo:             # <<<<<<<<<<<<<<
 *     '''
 *     The information of broadcast device.
 */
struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo {
  PyObject_HEAD
  BroadcastDeviceInfo core;
};


/* "pylivox.pyx":1942
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 * 
 * cdef class PyConnectedLidarInfo:             # <<<<<<<<<<<<<<
 *     '''
 *     The information of LiDAR units that are connected to the Livox Hub.
 */
struct __pyx_obj_7pylivox_PyConnectedLidarInfo {
  PyObject_HEAD
  ConnectedLidarInfo core;
};


/* "pylivox.pyx":1996
 *         self.core.id = value
 * 
 * cdef class PyLidarModeRequestItem:             # <<<<<<<<<<<<<<
 *     '''
 *     LiDAR mode configuration information.
 */
struct __pyx_obj_7pylivox_PyLidarModeRequestItem {
  PyObject_HEAD
  LidarModeRequestItem core;
};


/* "pylivox.pyx":2022
 *         self.core.state = value
 * 
 * cdef class PyReturnCode:             # <<<<<<<<<<<<<<
 *     '''
 *     '''
 */
struct __pyx_obj_7pylivox_PyReturnCode {
  PyObject_HEAD
  ReturnCode core;
};


/* "pylivox.pyx":2047
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 * cdef class PyDeviceBroadcastCode:             # <<<<<<<<<<<<<<
 *     '''
 *     '''
 */
struct __pyx_obj_7pylivox_PyDeviceBroadcastCode {
  PyObject_HEAD
  DeviceBroadcastCode core;
};


/* "pylivox.pyx":2063
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 * cdef class PyRainFogSuppressRequestItem:             # <<<<<<<<<<<<<<
 *     '''
 *     '''
 */
struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem {
  PyObject_HEAD
  RainFogSuppressRequestItem core;
};

/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_VARARGS(args, i) PySequence_GetItem(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#else
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GetItem(args, i)
#endif
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_NewRef_VARARGS(arg) __Pyx_NewRef(arg)
    #define __Pyx_Arg_XDECREF_VARARGS(arg) Py_XDECREF(arg)
#else
    #define __Pyx_Arg_NewRef_VARARGS(arg) arg
    #define __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg  /* no-op, __Pyx_Arg_FASTCALL is direct and this needs
                                                   to have the same reference counting */
    #define __Pyx_Arg_XDECREF_FASTCALL(arg)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
    #define __Pyx_Arg_NewRef_FASTCALL(arg) __Pyx_Arg_NewRef_VARARGS(arg)
    #define __Pyx_Arg_XDECREF_FASTCALL(arg) __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kw, const char* function_name, int kw_allowed);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* RaiseUnexpectedTypeError.proto */
static int __Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetupReduce.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce(PyObject* type_obj);
#endif

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_3_0_11
#define __PYX_HAVE_RT_ImportType_proto_3_0_11
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_11(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_11(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_0_11 {
   __Pyx_ImportType_CheckSize_Error_3_0_11 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_0_11 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_0_11 = 2
};
static PyTypeObject *__Pyx_ImportType_3_0_11(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_11 check_size);
#endif

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *typesModule=NULL, *methodType=NULL, *result=NULL;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    typesModule = PyImport_ImportModule("types");
    if (!typesModule) return NULL;
    methodType = PyObject_GetAttrString(typesModule, "MethodType");
    Py_DECREF(typesModule);
    if (!methodType) return NULL;
    result = PyObject_CallFunctionObjArgs(methodType, func, self, NULL);
    Py_DECREF(methodType);
    return result;
}
#elif PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc);
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* ArrayAPI.proto */
#ifndef _ARRAYARRAY_H
#define _ARRAYARRAY_H
typedef struct arraydescr {
    int typecode;
    int itemsize;
    PyObject * (*getitem)(struct arrayobject *, Py_ssize_t);
    int (*setitem)(struct arrayobject *, Py_ssize_t, PyObject *);
#if PY_MAJOR_VERSION >= 3
    char *formats;
#endif
} arraydescr;
struct arrayobject {
    PyObject_HEAD
    Py_ssize_t ob_size;
    union {
        char *ob_item;
        float *as_floats;
        double *as_doubles;
        int *as_ints;
        unsigned int *as_uints;
        unsigned char *as_uchars;
        signed char *as_schars;
        char *as_chars;
        unsigned long *as_ulongs;
        long *as_longs;
#if PY_MAJOR_VERSION >= 3
        unsigned long long *as_ulonglongs;
        long long *as_longlongs;
#endif
        short *as_shorts;
        unsigned short *as_ushorts;
        Py_UNICODE *as_pyunicodes;
        void *as_voidptr;
    } data;
    Py_ssize_t allocated;
    struct arraydescr *ob_descr;
    PyObject *weakreflist;
#if PY_MAJOR_VERSION >= 3
        int ob_exports;
#endif
};
#ifndef NO_NEWARRAY_INLINE
static CYTHON_INLINE PyObject * newarrayobject(PyTypeObject *type, Py_ssize_t size,
    struct arraydescr *descr) {
    arrayobject *op;
    size_t nbytes;
    if (size < 0) {
        PyErr_BadInternalCall();
        return NULL;
    }
    nbytes = size * descr->itemsize;
    if (nbytes / descr->itemsize != (size_t)size) {
        return PyErr_NoMemory();
    }
    op = (arrayobject *) type->tp_alloc(type, 0);
    if (op == NULL) {
        return NULL;
    }
    op->ob_descr = descr;
    op->allocated = size;
    op->weakreflist = NULL;
    __Pyx_SET_SIZE(op, size);
    if (size <= 0) {
        op->data.ob_item = NULL;
    }
    else {
        op->data.ob_item = PyMem_NEW(char, nbytes);
        if (op->data.ob_item == NULL) {
            Py_DECREF(op);
            return PyErr_NoMemory();
        }
    }
    return (PyObject *) op;
}
#else
PyObject* newarrayobject(PyTypeObject *type, Py_ssize_t size,
    struct arraydescr *descr);
#endif
static CYTHON_INLINE int resize(arrayobject *self, Py_ssize_t n) {
    void *items = (void*) self->data.ob_item;
    PyMem_Resize(items, char, (size_t)(n * self->ob_descr->itemsize));
    if (items == NULL) {
        PyErr_NoMemory();
        return -1;
    }
    self->data.ob_item = (char*) items;
    __Pyx_SET_SIZE(self, n);
    self->allocated = n;
    return 0;
}
static CYTHON_INLINE int resize_smart(arrayobject *self, Py_ssize_t n) {
    void *items = (void*) self->data.ob_item;
    Py_ssize_t newsize;
    if (n < self->allocated && n*4 > self->allocated) {
        __Pyx_SET_SIZE(self, n);
        return 0;
    }
    newsize = n + (n / 2) + 1;
    if (newsize <= n) {
        PyErr_NoMemory();
        return -1;
    }
    PyMem_Resize(items, char, (size_t)(newsize * self->ob_descr->itemsize));
    if (items == NULL) {
        PyErr_NoMemory();
        return -1;
    }
    self->data.ob_item = (char*) items;
    __Pyx_SET_SIZE(self, n);
    self->allocated = newsize;
    return 0;
}
#endif

/* None.proto */
#include <new>

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

static PyObject* __pyx_convert__to_py_LidarErrorCode(LidarErrorCode s);
static PyObject* __pyx_convert__to_py_HubErrorCode(HubErrorCode s);
static PyObject* __pyx_convert__to_py_ErrorMessage(ErrorMessage s);
static PyObject* __pyx_convert__to_py_StatusUnion(StatusUnion s);
/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE uint32_t __Pyx_PyInt_As_uint32_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE uint16_t __Pyx_PyInt_As_uint16_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE uint8_t __Pyx_PyInt_As_uint8_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int32_t(int32_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint8_t(uint8_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_DeviceType(DeviceType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarState(LidarState value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarMode(LidarMode value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarFeature(LidarFeature value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarIpMode(LidarIpMode value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarScanPattern(LidarScanPattern value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LivoxStatus(LivoxStatus value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_DeviceEvent(DeviceEvent value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_TimestampType(TimestampType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_PointDataType(PointDataType value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_PointCloudReturnMode(PointCloudReturnMode value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_ImuFreq(ImuFreq value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int32_t __Pyx_PyInt_As_int32_t(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint32_t(uint32_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint16_t(uint16_t value);

/* CIntFromPy.proto */
static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE LidarState __Pyx_PyInt_As_LidarState(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE LidarFeature __Pyx_PyInt_As_LidarFeature(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CheckBinaryVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */
static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4real_real(PyComplexObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4imag_imag(PyComplexObject *__pyx_v_self); /* proto*/

/* Module declarations from "cython" */

/* Module declarations from "libcpp" */

/* Module declarations from "libc.stdint" */

/* Module declarations from "cpython.version" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.type" */

/* Module declarations from "libc.string" */

/* Module declarations from "libc.stdio" */

/* Module declarations from "cpython.object" */

/* Module declarations from "cpython.ref" */

/* Module declarations from "cpython.exc" */

/* Module declarations from "cpython.module" */

/* Module declarations from "cpython.mem" */

/* Module declarations from "cpython.tuple" */

/* Module declarations from "cpython.list" */

/* Module declarations from "cpython.sequence" */

/* Module declarations from "cpython.mapping" */

/* Module declarations from "cpython.iterator" */

/* Module declarations from "cpython.number" */

/* Module declarations from "cpython.int" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.bool" */

/* Module declarations from "cpython.long" */

/* Module declarations from "cpython.float" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.complex" */

/* Module declarations from "cpython.string" */

/* Module declarations from "libc.stddef" */

/* Module declarations from "cpython.unicode" */

/* Module declarations from "cpython.pyport" */

/* Module declarations from "cpython.dict" */

/* Module declarations from "cpython.instance" */

/* Module declarations from "cpython.function" */

/* Module declarations from "cpython.method" */

/* Module declarations from "cpython.weakref" */

/* Module declarations from "cpython.getargs" */

/* Module declarations from "cpython.pythread" */

/* Module declarations from "cpython.pystate" */

/* Module declarations from "cpython.cobject" */

/* Module declarations from "cpython.oldbuffer" */

/* Module declarations from "cpython.set" */

/* Module declarations from "cpython.buffer" */

/* Module declarations from "cpython.bytes" */

/* Module declarations from "cpython.pycapsule" */

/* Module declarations from "cpython.contextvars" */

/* Module declarations from "cpython" */

/* Module declarations from "array" */

/* Module declarations from "cpython.array" */
static CYTHON_INLINE int __pyx_f_7cpython_5array_extend_buffer(arrayobject *, char *, Py_ssize_t); /*proto*/

/* Module declarations from "pylivox" */
static PyObject *__pyx_7genexpr__pyx_v_7pylivox__;
static PyObject *__pyx_8genexpr1__pyx_v_7pylivox__;
static PyObject *__pyx_8genexpr2__pyx_v_7pylivox__;
static void __pyx_f_7pylivox_callCommonCommandCallback(__pyx_t_7pylivox_livox_status, uint8_t, uint8_t, void *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyDeviceType__set_state(struct __pyx_obj_7pylivox_PyDeviceType *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarState__set_state(struct __pyx_obj_7pylivox_PyLidarState *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarMode__set_state(struct __pyx_obj_7pylivox_PyLidarMode *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarFeature__set_state(struct __pyx_obj_7pylivox_PyLidarFeature *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarIpMode__set_state(struct __pyx_obj_7pylivox_PyLidarIpMode *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarScanPattern__set_state(struct __pyx_obj_7pylivox_PyLidarScanPattern *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLivoxStatus__set_state(struct __pyx_obj_7pylivox_PyLivoxStatus *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyDeviceEvent__set_state(struct __pyx_obj_7pylivox_PyDeviceEvent *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyTimestampType__set_state(struct __pyx_obj_7pylivox_PyTimestampType *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyPointDataType__set_state(struct __pyx_obj_7pylivox_PyPointDataType *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyPointCloudReturnMode__set_state(struct __pyx_obj_7pylivox_PyPointCloudReturnMode *, PyObject *); /*proto*/
static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyImuFreq__set_state(struct __pyx_obj_7pylivox_PyImuFreq *, PyObject *); /*proto*/
static LidarErrorCode __pyx_convert__from_py_LidarErrorCode(PyObject *); /*proto*/
static HubErrorCode __pyx_convert__from_py_HubErrorCode(PyObject *); /*proto*/
static int __Pyx_carray_from_py_uint8_t(PyObject *, uint8_t *, Py_ssize_t); /*proto*/
static ErrorMessage __pyx_convert__from_py_ErrorMessage(PyObject *); /*proto*/
static int __Pyx_carray_from_py_char(PyObject *, char *, Py_ssize_t); /*proto*/
static StatusUnion __pyx_convert__from_py_StatusUnion(PyObject *); /*proto*/
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "pylivox"
extern int __pyx_module_is_main_pylivox;
int __pyx_module_is_main_pylivox = 0;

/* Implementation of "pylivox" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_OverflowError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_IndexError;
static PyObject *__pyx_builtin_MemoryError;
/* #### Code section: string_decls ### */
static const char __pyx_k_0[] = "0";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_cb[] = "cb";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_ip[] = "ip";
static const char __pyx_k_x1[] = "x1";
static const char __pyx_k_x2[] = "x2";
static const char __pyx_k_x3[] = "x3";
static const char __pyx_k_y1[] = "y1";
static const char __pyx_k_y2[] = "y2";
static const char __pyx_k_y3[] = "y3";
static const char __pyx_k_z1[] = "z1";
static const char __pyx_k_z2[] = "z2";
static const char __pyx_k_z3[] = "z3";
static const char __pyx_k__39[] = ".";
static const char __pyx_k__40[] = "*";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_phi[] = "phi";
static const char __pyx_k_tag[] = "tag";
static const char __pyx_k__205[] = "?";
static const char __pyx_k_core[] = "core";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_rsvd[] = "rsvd";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_slot[] = "slot";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_tag1[] = "tag1";
static const char __pyx_k_tag2[] = "tag2";
static const char __pyx_k_tag3[] = "tag3";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_type[] = "type";
static const char __pyx_k_acc_x[] = "acc_x";
static const char __pyx_k_acc_y[] = "acc_y";
static const char __pyx_k_acc_z[] = "acc_z";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_depth[] = "depth";
static const char __pyx_k_major[] = "major";
static const char __pyx_k_minor[] = "minor";
static const char __pyx_k_patch[] = "patch";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_theta[] = "theta";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_PyInit[] = "PyInit";
static const char __pyx_k_depth1[] = "depth1";
static const char __pyx_k_depth2[] = "depth2";
static const char __pyx_k_depth3[] = "depth3";
static const char __pyx_k_dict_2[] = "_dict";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_gyro_x[] = "gyro_x";
static const char __pyx_k_gyro_y[] = "gyro_y";
static const char __pyx_k_gyro_z[] = "gyro_z";
static const char __pyx_k_handle[] = "handle";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_status[] = "status";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_PyStart[] = "PyStart";
static const char __pyx_k_devices[] = "devices";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_feature[] = "feature";
static const char __pyx_k_pylivox[] = "pylivox";
static const char __pyx_k_version[] = "version";
static const char __pyx_k_KeyError[] = "KeyError";
static const char __pyx_k_PyUninit[] = "PyUninit";
static const char __pyx_k_cmd_port[] = "cmd_port";
static const char __pyx_k_dev_type[] = "dev_type";
static const char __pyx_k_err_code[] = "err_code";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_progress[] = "progress";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_reserved[] = "reserved";
static const char __pyx_k_ret_code[] = "ret_code";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_PyImuFreq[] = "PyImuFreq";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_data_port[] = "data_port";
static const char __pyx_k_data_type[] = "data_type";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_timestamp[] = "timestamp";
static const char __pyx_k_ImuFreq0Hz[] = "ImuFreq0Hz";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_dirty_warn[] = "dirty_warn";
static const char __pyx_k_error_code[] = "error_code";
static const char __pyx_k_fan_status[] = "fan_status";
static const char __pyx_k_pps_status[] = "pps_status";
static const char __pyx_k_ptp_status[] = "ptp_status";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_MemoryError[] = "MemoryError";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_PyLidarMode[] = "PyLidarMode";
static const char __pyx_k_pylivox_pyx[] = "pylivox.pyx";
static const char __pyx_k_sensor_port[] = "sensor_port";
static const char __pyx_k_status_code[] = "status_code";
static const char __pyx_k_sync_status[] = "sync_status";
static const char __pyx_k_temp_status[] = "temp_status";
static const char __pyx_k_volt_status[] = "volt_status";
static const char __pyx_k_EventConnect[] = "EventConnect";
static const char __pyx_k_ImuFreq200Hz[] = "ImuFreq200Hz";
static const char __pyx_k_PyDeviceInfo[] = "PyDeviceInfo";
static const char __pyx_k_PyDeviceType[] = "PyDeviceType";
static const char __pyx_k_PyLidarState[] = "PyLidarState";
static const char __pyx_k_PyLivoxPoint[] = "PyLivoxPoint";
static const char __pyx_k_PyReturnCode[] = "PyReturnCode";
static const char __pyx_k_firmware_err[] = "firmware_err";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_lidar_status[] = "lidar_status";
static const char __pyx_k_motor_status[] = "motor_status";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_reflectivity[] = "reflectivity";
static const char __pyx_k_self_heating[] = "self_heating";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_use_setstate[] = "use_setstate";
static const char __pyx_k_DeviceTypeHub[] = "DeviceTypeHub";
static const char __pyx_k_OverflowError[] = "OverflowError";
static const char __pyx_k_PyDeviceEvent[] = "PyDeviceEvent";
static const char __pyx_k_PyLidarIpMode[] = "PyLidarIpMode";
static const char __pyx_k_PyLivoxStatus[] = "PyLivoxStatus";
static const char __pyx_k_PyStatusUnion[] = "PyStatusUnion";
static const char __pyx_k_StatusFailure[] = "StatusFailure";
static const char __pyx_k_StatusSuccess[] = "StatusSuccess";
static const char __pyx_k_StatusTimeout[] = "StatusTimeout";
static const char __pyx_k_device_status[] = "device_status";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_reflectivity1[] = "reflectivity1";
static const char __pyx_k_reflectivity2[] = "reflectivity2";
static const char __pyx_k_reflectivity3[] = "reflectivity3";
static const char __pyx_k_system_status[] = "system_status";
static const char __pyx_k_LidarStateInit[] = "LidarStateInit";
static const char __pyx_k_PyErrorMessage[] = "PyErrorMessage";
static const char __pyx_k_PyHubErrorCode[] = "PyHubErrorCode";
static const char __pyx_k_PyLidarFeature[] = "PyLidarFeature";
static const char __pyx_k_broadcast_code[] = "broadcast_code";
static const char __pyx_k_hub_error_code[] = "hub_error_code";
static const char __pyx_k_kMaxLidarCount[] = "kMaxLidarCount";
static const char __pyx_k_timestamp_type[] = "timestamp_type";
static const char __pyx_k_EventDisconnect[] = "EventDisconnect";
static const char __pyx_k_LidarModeNormal[] = "LidarModeNormal";
static const char __pyx_k_LidarStateError[] = "LidarStateError";
static const char __pyx_k_PyLivoxImuPoint[] = "PyLivoxImuPoint";
static const char __pyx_k_PyLivoxRawPoint[] = "PyLivoxRawPoint";
static const char __pyx_k_PyPointDataType[] = "PyPointDataType";
static const char __pyx_k_PyTimestampType[] = "PyTimestampType";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_0000000000000000[] = "0000000000000000";
static const char __pyx_k_EventStateChange[] = "EventStateChange";
static const char __pyx_k_LidarFeatureNone[] = "LidarFeatureNone";
static const char __pyx_k_LidarModeStandby[] = "LidarModeStandby";
static const char __pyx_k_LidarStateNormal[] = "LidarStateNormal";
static const char __pyx_k_PointDataTypeImu[] = "PointDataTypeImu";
static const char __pyx_k_PointDataTypeMax[] = "PointDataTypeMax";
static const char __pyx_k_PyLidarErrorCode[] = "PyLidarErrorCode";
static const char __pyx_k_PyLivoxEthPacket[] = "PyLivoxEthPacket";
static const char __pyx_k_PySaveLoggerFile[] = "PySaveLoggerFile";
static const char __pyx_k_StatusSendFailed[] = "StatusSendFailed";
static const char __pyx_k_TimestampTypePps[] = "TimestampTypePps";
static const char __pyx_k_TimestampTypePtp[] = "TimestampTypePtp";
static const char __pyx_k_firmware_version[] = "firmware_version";
static const char __pyx_k_lidar_error_code[] = "lidar_error_code";
static const char __pyx_k_time_sync_status[] = "time_sync_status";
static const char __pyx_k_LidarStateStandBy[] = "LidarStateStandBy";
static const char __pyx_k_LidarStateUnknown[] = "LidarStateUnknown";
static const char __pyx_k_LidarStaticIpMode[] = "LidarStaticIpMode";
static const char __pyx_k_PyAddHubToConnect[] = "PyAddHubToConnect";
static const char __pyx_k_PyHubStopSampling[] = "PyHubStopSampling";
static const char __pyx_k_PyLivoxSdkVersion[] = "PyLivoxSdkVersion";
static const char __pyx_k_PyLivoxSpherPoint[] = "PyLivoxSpherPoint";
static const char __pyx_k_TimestampTypeRsvd[] = "TimestampTypeRsvd";
static const char __pyx_k_lidar_link_status[] = "lidar_link_status";
static const char __pyx_k_LidarDynamicIpMode[] = "LidarDynamicIpMode";
static const char __pyx_k_PyDisconnectDevice[] = "PyDisconnectDevice";
static const char __pyx_k_PyHubStartSampling[] = "PyHubStartSampling";
static const char __pyx_k_PyLidarScanPattern[] = "PyLidarScanPattern";
static const char __pyx_k_StatusNotConnected[] = "StatusNotConnected";
static const char __pyx_k_StatusNotSupported[] = "StatusNotSupported";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_kBroadcastCodeSize[] = "kBroadcastCodeSize";
static const char __pyx_k_DeviceTypeLidarAvia[] = "DeviceTypeLidarAvia";
static const char __pyx_k_DeviceTypeLidarTele[] = "DeviceTypeLidarTele";
static const char __pyx_k_LidarFeatureRainFog[] = "LidarFeatureRainFog";
static const char __pyx_k_PyAddLidarToConnect[] = "PyAddLidarToConnect";
static const char __pyx_k_PyHubGetLidarHandle[] = "PyHubGetLidarHandle";
static const char __pyx_k_StatusInvalidHandle[] = "StatusInvalidHandle";
static const char __pyx_k_TimestampTypeNoSync[] = "TimestampTypeNoSync";
static const char __pyx_k_TimestampTypePpsGps[] = "TimestampTypePpsGps";
static const char __pyx_k_DeviceTypeLidarMid40[] = "DeviceTypeLidarMid40";
static const char __pyx_k_DeviceTypeLidarMid70[] = "DeviceTypeLidarMid70";
static const char __pyx_k_LidarModePowerSaving[] = "LidarModePowerSaving";
static const char __pyx_k_PointCloudReturnDual[] = "PointCloudReturnDual";
static const char __pyx_k_PyConnectedLidarInfo[] = "PyConnectedLidarInfo";
static const char __pyx_k_PyGetLivoxSdkVersion[] = "PyGetLivoxSdkVersion";
static const char __pyx_k_PyImuFreq_ImuFreq0Hz[] = "PyImuFreq.ImuFreq0Hz";
static const char __pyx_k_TimestampTypeUnknown[] = "TimestampTypeUnknown";
static const char __pyx_k_progress_status_code[] = "progress, status_code";
static const char __pyx_k_LidarStatePowerSaving[] = "LidarStatePowerSaving";
static const char __pyx_k_PointCloudReturnFirst[] = "PointCloudReturnFirst";
static const char __pyx_k_PyBroadcastDeviceInfo[] = "PyBroadcastDeviceInfo";
static const char __pyx_k_PyDeviceBroadcastCode[] = "PyDeviceBroadcastCode";
static const char __pyx_k_PyGetConnectedDevices[] = "PyGetConnectedDevices";
static const char __pyx_k_PyLivoxExtendRawPoint[] = "PyLivoxExtendRawPoint";
static const char __pyx_k_RepetitiveScanPattern[] = "RepetitiveScanPattern";
static const char __pyx_k_StatusChannelNotExist[] = "StatusChannelNotExist";
static const char __pyx_k_StatusNotEnoughMemory[] = "StatusNotEnoughMemory";
static const char __pyx_k_DeviceTypeLidarHorizon[] = "DeviceTypeLidarHorizon";
static const char __pyx_k_PointCloudReturnTriple[] = "PointCloudReturnTriple";
static const char __pyx_k_PointDataTypeCartesian[] = "PointDataTypeCartesian";
static const char __pyx_k_PointDataTypeSpherical[] = "PointDataTypeSpherical";
static const char __pyx_k_PyDisableConsoleLogger[] = "PyDisableConsoleLogger";
static const char __pyx_k_PyImuFreq_ImuFreq200Hz[] = "PyImuFreq.ImuFreq200Hz";
static const char __pyx_k_PyLidarModeRequestItem[] = "PyLidarModeRequestItem";
static const char __pyx_k_PyPointCloudReturnMode[] = "PyPointCloudReturnMode";
static const char __pyx_k_pyx_unpickle_PyImuFreq[] = "__pyx_unpickle_PyImuFreq";
static const char __pyx_k_LIVOX_SDK_MAJOR_VERSION[] = "LIVOX_SDK_MAJOR_VERSION";
static const char __pyx_k_LIVOX_SDK_MINOR_VERSION[] = "LIVOX_SDK_MINOR_VERSION";
static const char __pyx_k_LIVOX_SDK_PATCH_VERSION[] = "LIVOX_SDK_PATCH_VERSION";
static const char __pyx_k_PyLivoxExtendSpherPoint[] = "PyLivoxExtendSpherPoint";
static const char __pyx_k_EventHubConnectionChange[] = "EventHubConnectionChange";
static const char __pyx_k_PySetCartesianCoordinate[] = "PySetCartesianCoordinate";
static const char __pyx_k_PySetSphericalCoordinate[] = "PySetSphericalCoordinate";
static const char __pyx_k_pyx_unpickle_PyLidarMode[] = "__pyx_unpickle_PyLidarMode";
static const char __pyx_k_NoneRepetitiveScanPattern[] = "NoneRepetitiveScanPattern";
static const char __pyx_k_PointCloudReturnStrongest[] = "PointCloudReturnStrongest";
static const char __pyx_k_PyImuFreq___reduce_cython[] = "PyImuFreq.__reduce_cython__";
static const char __pyx_k_PyLivoxDualExtendRawPoint[] = "PyLivoxDualExtendRawPoint";
static const char __pyx_k_StatusHandlerImplNotExist[] = "StatusHandlerImplNotExist";
static const char __pyx_k_pyx_unpickle_PyDeviceType[] = "__pyx_unpickle_PyDeviceType";
static const char __pyx_k_pyx_unpickle_PyLidarState[] = "__pyx_unpickle_PyLidarState";
static const char __pyx_k_PyDeviceEvent_EventConnect[] = "PyDeviceEvent.EventConnect";
static const char __pyx_k_PyDeviceType_DeviceTypeHub[] = "PyDeviceType.DeviceTypeHub";
static const char __pyx_k_pyx_unpickle_PyDeviceEvent[] = "__pyx_unpickle_PyDeviceEvent";
static const char __pyx_k_pyx_unpickle_PyLidarIpMode[] = "__pyx_unpickle_PyLidarIpMode";
static const char __pyx_k_pyx_unpickle_PyLivoxStatus[] = "__pyx_unpickle_PyLivoxStatus";
static const char __pyx_k_PyImuFreq___setstate_cython[] = "PyImuFreq.__setstate_cython__";
static const char __pyx_k_PyLidarMode_LidarModeNormal[] = "PyLidarMode.LidarModeNormal";
static const char __pyx_k_PyLidarMode___reduce_cython[] = "PyLidarMode.__reduce_cython__";
static const char __pyx_k_PyLidarState_LidarStateInit[] = "PyLidarState.LidarStateInit";
static const char __pyx_k_PyLivoxDualExtendSpherPoint[] = "PyLivoxDualExtendSpherPoint";
static const char __pyx_k_PyLivoxStatus_StatusFailure[] = "PyLivoxStatus.StatusFailure";
static const char __pyx_k_PyLivoxStatus_StatusSuccess[] = "PyLivoxStatus.StatusSuccess";
static const char __pyx_k_PyLivoxStatus_StatusTimeout[] = "PyLivoxStatus.StatusTimeout";
static const char __pyx_k_PyLivoxTripleExtendRawPoint[] = "PyLivoxTripleExtendRawPoint";
static const char __pyx_k_pyx_unpickle_PyLidarFeature[] = "__pyx_unpickle_PyLidarFeature";
static const char __pyx_k_PointDataTypeExtendCartesian[] = "PointDataTypeExtendCartesian";
static const char __pyx_k_PointDataTypeExtendSpherical[] = "PointDataTypeExtendSpherical";
static const char __pyx_k_PyDeviceInfo___reduce_cython[] = "PyDeviceInfo.__reduce_cython__";
static const char __pyx_k_PyDeviceType___reduce_cython[] = "PyDeviceType.__reduce_cython__";
static const char __pyx_k_PyLidarMode_LidarModeStandby[] = "PyLidarMode.LidarModeStandby";
static const char __pyx_k_PyLidarState_LidarStateError[] = "PyLidarState.LidarStateError";
static const char __pyx_k_PyLidarState___reduce_cython[] = "PyLidarState.__reduce_cython__";
static const char __pyx_k_PyLivoxPoint___reduce_cython[] = "PyLivoxPoint.__reduce_cython__";
static const char __pyx_k_PyRainFogSuppressRequestItem[] = "PyRainFogSuppressRequestItem";
static const char __pyx_k_PyReturnCode___reduce_cython[] = "PyReturnCode.__reduce_cython__";
static const char __pyx_k_pyx_unpickle_PyPointDataType[] = "__pyx_unpickle_PyPointDataType";
static const char __pyx_k_pyx_unpickle_PyTimestampType[] = "__pyx_unpickle_PyTimestampType";
static const char __pyx_k_PyDeviceEvent_EventDisconnect[] = "PyDeviceEvent.EventDisconnect";
static const char __pyx_k_PyDeviceEvent___reduce_cython[] = "PyDeviceEvent.__reduce_cython__";
static const char __pyx_k_PyLidarIpMode___reduce_cython[] = "PyLidarIpMode.__reduce_cython__";
static const char __pyx_k_PyLidarMode___setstate_cython[] = "PyLidarMode.__setstate_cython__";
static const char __pyx_k_PyLidarState_LidarStateNormal[] = "PyLidarState.LidarStateNormal";
static const char __pyx_k_PyLivoxStatus___reduce_cython[] = "PyLivoxStatus.__reduce_cython__";
static const char __pyx_k_PyLivoxTripleExtendSpherPoint[] = "PyLivoxTripleExtendSpherPoint";
static const char __pyx_k_PyStatusUnion___reduce_cython[] = "PyStatusUnion.__reduce_cython__";
static const char __pyx_k_PyDeviceEvent_EventStateChange[] = "PyDeviceEvent.EventStateChange";
static const char __pyx_k_PyDeviceInfo___setstate_cython[] = "PyDeviceInfo.__setstate_cython__";
static const char __pyx_k_PyDeviceType___setstate_cython[] = "PyDeviceType.__setstate_cython__";
static const char __pyx_k_PyErrorMessage___reduce_cython[] = "PyErrorMessage.__reduce_cython__";
static const char __pyx_k_PyHubErrorCode___reduce_cython[] = "PyHubErrorCode.__reduce_cython__";
static const char __pyx_k_PyLidarFeature___reduce_cython[] = "PyLidarFeature.__reduce_cython__";
static const char __pyx_k_PyLidarState_LidarStateStandBy[] = "PyLidarState.LidarStateStandBy";
static const char __pyx_k_PyLidarState_LidarStateUnknown[] = "PyLidarState.LidarStateUnknown";
static const char __pyx_k_PyLidarState___setstate_cython[] = "PyLidarState.__setstate_cython__";
static const char __pyx_k_PyLivoxPoint___setstate_cython[] = "PyLivoxPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxStatus_StatusSendFailed[] = "PyLivoxStatus.StatusSendFailed";
static const char __pyx_k_PyReturnCode___setstate_cython[] = "PyReturnCode.__setstate_cython__";
static const char __pyx_k_pyx_unpickle_PyLidarScanPatter[] = "__pyx_unpickle_PyLidarScanPattern";
static const char __pyx_k_pyx_unpickle_PyPointCloudRetur[] = "__pyx_unpickle_PyPointCloudReturnMode";
static const char __pyx_k_Pickling_of_struct_members_such[] = "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)";
static const char __pyx_k_PyConnectedLidarInfo___setstate[] = "PyConnectedLidarInfo.__setstate_cython__";
static const char __pyx_k_PyDeviceEvent___setstate_cython[] = "PyDeviceEvent.__setstate_cython__";
static const char __pyx_k_PyLidarFeature_LidarFeatureNone[] = "PyLidarFeature.LidarFeatureNone";
static const char __pyx_k_PyLidarIpMode_LidarStaticIpMode[] = "PyLidarIpMode.LidarStaticIpMode";
static const char __pyx_k_PyLidarIpMode___setstate_cython[] = "PyLidarIpMode.__setstate_cython__";
static const char __pyx_k_PyLidarModeRequestItem___reduce[] = "PyLidarModeRequestItem.__reduce_cython__";
static const char __pyx_k_PyLivoxImuPoint___reduce_cython[] = "PyLivoxImuPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxRawPoint___reduce_cython[] = "PyLivoxRawPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxStatus___setstate_cython[] = "PyLivoxStatus.__setstate_cython__";
static const char __pyx_k_PyLivoxTripleExtendSpherPoint_2[] = "PyLivoxTripleExtendSpherPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxTripleExtendSpherPoint_3[] = "PyLivoxTripleExtendSpherPoint.__setstate_cython__";
static const char __pyx_k_PyPointCloudReturnMode___reduce[] = "PyPointCloudReturnMode.__reduce_cython__";
static const char __pyx_k_PyPointDataType___reduce_cython[] = "PyPointDataType.__reduce_cython__";
static const char __pyx_k_PyStatusUnion___setstate_cython[] = "PyStatusUnion.__setstate_cython__";
static const char __pyx_k_PyTimestampType___reduce_cython[] = "PyTimestampType.__reduce_cython__";
static const char __pyx_k_error_code_lidar_error_code_hub[] = "error_code, lidar_error_code, hub_error_code";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0[] = "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())";
static const char __pyx_k_More_than_one_union_attribute_pa[] = "More than one union attribute passed: '%s' and '%s'";
static const char __pyx_k_No_value_specified_for_any_of_th[] = "No value specified for any of the union attributes (%s)";
static const char __pyx_k_No_value_specified_for_struct_at[] = "No value specified for struct attribute 'temp_status'";
static const char __pyx_k_PointDataTypeDualExtendCartesian[] = "PointDataTypeDualExtendCartesian";
static const char __pyx_k_PointDataTypeDualExtendSpherical[] = "PointDataTypeDualExtendSpherical";
static const char __pyx_k_PointDataTypeTripleExtendCartesi[] = "PointDataTypeTripleExtendCartesian";
static const char __pyx_k_PointDataTypeTripleExtendSpheric[] = "PointDataTypeTripleExtendSpherical";
static const char __pyx_k_PyBroadcastDeviceInfo___reduce_c[] = "PyBroadcastDeviceInfo.__reduce_cython__";
static const char __pyx_k_PyBroadcastDeviceInfo___setstate[] = "PyBroadcastDeviceInfo.__setstate_cython__";
static const char __pyx_k_PyConnectedLidarInfo___reduce_cy[] = "PyConnectedLidarInfo.__reduce_cython__";
static const char __pyx_k_PyDeviceBroadcastCode___reduce_c[] = "PyDeviceBroadcastCode.__reduce_cython__";
static const char __pyx_k_PyDeviceBroadcastCode___setstate[] = "PyDeviceBroadcastCode.__setstate_cython__";
static const char __pyx_k_PyDeviceEvent_EventHubConnection[] = "PyDeviceEvent.EventHubConnectionChange";
static const char __pyx_k_PyDeviceType_DeviceTypeLidarAvia[] = "PyDeviceType.DeviceTypeLidarAvia";
static const char __pyx_k_PyDeviceType_DeviceTypeLidarHori[] = "PyDeviceType.DeviceTypeLidarHorizon";
static const char __pyx_k_PyDeviceType_DeviceTypeLidarMid4[] = "PyDeviceType.DeviceTypeLidarMid40";
static const char __pyx_k_PyDeviceType_DeviceTypeLidarMid7[] = "PyDeviceType.DeviceTypeLidarMid70";
static const char __pyx_k_PyDeviceType_DeviceTypeLidarTele[] = "PyDeviceType.DeviceTypeLidarTele";
static const char __pyx_k_PyErrorMessage___setstate_cython[] = "PyErrorMessage.__setstate_cython__";
static const char __pyx_k_PyHubErrorCode___setstate_cython[] = "PyHubErrorCode.__setstate_cython__";
static const char __pyx_k_PyLidarErrorCode___reduce_cython[] = "PyLidarErrorCode.__reduce_cython__";
static const char __pyx_k_PyLidarErrorCode___setstate_cyth[] = "PyLidarErrorCode.__setstate_cython__";
static const char __pyx_k_PyLidarFeature_LidarFeatureRainF[] = "PyLidarFeature.LidarFeatureRainFog";
static const char __pyx_k_PyLidarFeature___setstate_cython[] = "PyLidarFeature.__setstate_cython__";
static const char __pyx_k_PyLidarIpMode_LidarDynamicIpMode[] = "PyLidarIpMode.LidarDynamicIpMode";
static const char __pyx_k_PyLidarModeRequestItem___setstat[] = "PyLidarModeRequestItem.__setstate_cython__";
static const char __pyx_k_PyLidarMode_LidarModePowerSaving[] = "PyLidarMode.LidarModePowerSaving";
static const char __pyx_k_PyLidarScanPattern_NoneRepetitiv[] = "PyLidarScanPattern.NoneRepetitiveScanPattern";
static const char __pyx_k_PyLidarScanPattern_RepetitiveSca[] = "PyLidarScanPattern.RepetitiveScanPattern";
static const char __pyx_k_PyLidarScanPattern___reduce_cyth[] = "PyLidarScanPattern.__reduce_cython__";
static const char __pyx_k_PyLidarScanPattern___setstate_cy[] = "PyLidarScanPattern.__setstate_cython__";
static const char __pyx_k_PyLidarState_LidarStatePowerSavi[] = "PyLidarState.LidarStatePowerSaving";
static const char __pyx_k_PyLivoxDualExtendRawPoint___redu[] = "PyLivoxDualExtendRawPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxDualExtendRawPoint___sets[] = "PyLivoxDualExtendRawPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxDualExtendSpherPoint___re[] = "PyLivoxDualExtendSpherPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxDualExtendSpherPoint___se[] = "PyLivoxDualExtendSpherPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxEthPacket___reduce_cython[] = "PyLivoxEthPacket.__reduce_cython__";
static const char __pyx_k_PyLivoxEthPacket___setstate_cyth[] = "PyLivoxEthPacket.__setstate_cython__";
static const char __pyx_k_PyLivoxExtendRawPoint___reduce_c[] = "PyLivoxExtendRawPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxExtendRawPoint___setstate[] = "PyLivoxExtendRawPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxExtendSpherPoint___reduce[] = "PyLivoxExtendSpherPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxExtendSpherPoint___setsta[] = "PyLivoxExtendSpherPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxImuPoint___setstate_cytho[] = "PyLivoxImuPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxRawPoint___setstate_cytho[] = "PyLivoxRawPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxSdkVersion___reduce_cytho[] = "PyLivoxSdkVersion.__reduce_cython__";
static const char __pyx_k_PyLivoxSdkVersion___setstate_cyt[] = "PyLivoxSdkVersion.__setstate_cython__";
static const char __pyx_k_PyLivoxSpherPoint___reduce_cytho[] = "PyLivoxSpherPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxSpherPoint___setstate_cyt[] = "PyLivoxSpherPoint.__setstate_cython__";
static const char __pyx_k_PyLivoxStatus_StatusChannelNotEx[] = "PyLivoxStatus.StatusChannelNotExist";
static const char __pyx_k_PyLivoxStatus_StatusHandlerImplN[] = "PyLivoxStatus.StatusHandlerImplNotExist";
static const char __pyx_k_PyLivoxStatus_StatusInvalidHandl[] = "PyLivoxStatus.StatusInvalidHandle";
static const char __pyx_k_PyLivoxStatus_StatusNotConnected[] = "PyLivoxStatus.StatusNotConnected";
static const char __pyx_k_PyLivoxStatus_StatusNotEnoughMem[] = "PyLivoxStatus.StatusNotEnoughMemory";
static const char __pyx_k_PyLivoxStatus_StatusNotSupported[] = "PyLivoxStatus.StatusNotSupported";
static const char __pyx_k_PyLivoxTripleExtendRawPoint___re[] = "PyLivoxTripleExtendRawPoint.__reduce_cython__";
static const char __pyx_k_PyLivoxTripleExtendRawPoint___se[] = "PyLivoxTripleExtendRawPoint.__setstate_cython__";
static const char __pyx_k_PyPointCloudReturnMode_PointClou[] = "PyPointCloudReturnMode.PointCloudReturnFirst";
static const char __pyx_k_PyPointCloudReturnMode___setstat[] = "PyPointCloudReturnMode.__setstate_cython__";
static const char __pyx_k_PyPointDataType_PointDataTypeCar[] = "PyPointDataType.PointDataTypeCartesian";
static const char __pyx_k_PyPointDataType_PointDataTypeDua[] = "PyPointDataType.PointDataTypeDualExtendCartesian";
static const char __pyx_k_PyPointDataType_PointDataTypeExt[] = "PyPointDataType.PointDataTypeExtendCartesian";
static const char __pyx_k_PyPointDataType_PointDataTypeImu[] = "PyPointDataType.PointDataTypeImu";
static const char __pyx_k_PyPointDataType_PointDataTypeMax[] = "PyPointDataType.PointDataTypeMax";
static const char __pyx_k_PyPointDataType_PointDataTypeSph[] = "PyPointDataType.PointDataTypeSpherical";
static const char __pyx_k_PyPointDataType_PointDataTypeTri[] = "PyPointDataType.PointDataTypeTripleExtendCartesian";
static const char __pyx_k_PyPointDataType___setstate_cytho[] = "PyPointDataType.__setstate_cython__";
static const char __pyx_k_PyRainFogSuppressRequestItem___r[] = "PyRainFogSuppressRequestItem.__reduce_cython__";
static const char __pyx_k_PyRainFogSuppressRequestItem___s[] = "PyRainFogSuppressRequestItem.__setstate_cython__";
static const char __pyx_k_PyTimestampType_TimestampTypeNoS[] = "PyTimestampType.TimestampTypeNoSync";
static const char __pyx_k_PyTimestampType_TimestampTypePps[] = "PyTimestampType.TimestampTypePpsGps";
static const char __pyx_k_PyTimestampType_TimestampTypePtp[] = "PyTimestampType.TimestampTypePtp";
static const char __pyx_k_PyTimestampType_TimestampTypeRsv[] = "PyTimestampType.TimestampTypeRsvd";
static const char __pyx_k_PyTimestampType_TimestampTypeUnk[] = "PyTimestampType.TimestampTypeUnknown";
static const char __pyx_k_PyTimestampType___setstate_cytho[] = "PyTimestampType.__setstate_cython__";
static const char __pyx_k_No_value_specified_for_struct_at_2[] = "No value specified for struct attribute 'volt_status'";
static const char __pyx_k_No_value_specified_for_struct_at_3[] = "No value specified for struct attribute 'motor_status'";
static const char __pyx_k_No_value_specified_for_struct_at_4[] = "No value specified for struct attribute 'dirty_warn'";
static const char __pyx_k_No_value_specified_for_struct_at_5[] = "No value specified for struct attribute 'firmware_err'";
static const char __pyx_k_No_value_specified_for_struct_at_6[] = "No value specified for struct attribute 'pps_status'";
static const char __pyx_k_No_value_specified_for_struct_at_7[] = "No value specified for struct attribute 'device_status'";
static const char __pyx_k_No_value_specified_for_struct_at_8[] = "No value specified for struct attribute 'fan_status'";
static const char __pyx_k_No_value_specified_for_struct_at_9[] = "No value specified for struct attribute 'self_heating'";
static const char __pyx_k_PyPointCloudReturnMode_PointClou_2[] = "PyPointCloudReturnMode.PointCloudReturnStrongest";
static const char __pyx_k_PyPointCloudReturnMode_PointClou_3[] = "PyPointCloudReturnMode.PointCloudReturnDual";
static const char __pyx_k_PyPointCloudReturnMode_PointClou_4[] = "PyPointCloudReturnMode.PointCloudReturnTriple";
static const char __pyx_k_PyPointDataType_PointDataTypeDua_2[] = "PyPointDataType.PointDataTypeDualExtendSpherical";
static const char __pyx_k_PyPointDataType_PointDataTypeExt_2[] = "PyPointDataType.PointDataTypeExtendSpherical";
static const char __pyx_k_PyPointDataType_PointDataTypeTri_2[] = "PyPointDataType.PointDataTypeTripleExtendSpherical";
static const char __pyx_k_PyTimestampType_TimestampTypePps_2[] = "PyTimestampType.TimestampTypePps";
static const char __pyx_k_No_value_specified_for_struct_at_10[] = "No value specified for struct attribute 'ptp_status'";
static const char __pyx_k_No_value_specified_for_struct_at_11[] = "No value specified for struct attribute 'time_sync_status'";
static const char __pyx_k_No_value_specified_for_struct_at_12[] = "No value specified for struct attribute 'rsvd'";
static const char __pyx_k_No_value_specified_for_struct_at_13[] = "No value specified for struct attribute 'system_status'";
static const char __pyx_k_No_value_specified_for_struct_at_14[] = "No value specified for struct attribute 'sync_status'";
static const char __pyx_k_No_value_specified_for_struct_at_15[] = "No value specified for struct attribute 'lidar_status'";
static const char __pyx_k_No_value_specified_for_struct_at_16[] = "No value specified for struct attribute 'lidar_link_status'";
/* #### Code section: decls ### */
static int __pyx_pf_7cpython_5array_5array___getbuffer__(arrayobject *__pyx_v_self, Py_buffer *__pyx_v_info, CYTHON_UNUSED int __pyx_v_flags); /* proto */
static void __pyx_pf_7cpython_5array_5array_2__releasebuffer__(CYTHON_UNUSED arrayobject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_pf_7pylivox_PyInit(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7pylivox_2PyUninit(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7pylivox_4PyStart(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7pylivox_6PyDisableConsoleLogger(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7pylivox_8PySaveLoggerFile(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7pylivox_10PyGetLivoxSdkVersion(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_version); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyHubStartSampling(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cb); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubStopSampling(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cb); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyHubGetLidarHandle(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_slot, PyObject *__pyx_v_id); /* proto */
static PyObject *__pyx_pf_7pylivox_18PyDisconnectDevice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_handle, PyObject *__pyx_v_cb); /* proto */
static PyObject *__pyx_pf_7pylivox_20PySetCartesianCoordinate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_handle, PyObject *__pyx_v_cb); /* proto */
static PyObject *__pyx_pf_7pylivox_22PySetSphericalCoordinate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_handle, PyObject *__pyx_v_cb); /* proto */
static PyObject *__pyx_pf_7pylivox_24PyAddHubToConnect(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_broadcast_code, PyObject *__pyx_v_handle); /* proto */
static PyObject *__pyx_pf_7pylivox_26PyAddLidarToConnect(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_broadcast_code, PyObject *__pyx_v_handle); /* proto */
static PyObject *__pyx_pf_7pylivox_28PyGetConnectedDevices(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_devices, PyObject *__pyx_v_size); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_DeviceTypeHub(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_2DeviceTypeLidarMid40(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_4DeviceTypeLidarTele(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_6DeviceTypeLidarHorizon(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_8DeviceTypeLidarMid70(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_10DeviceTypeLidarAvia(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_12__reduce_cython__(struct __pyx_obj_7pylivox_PyDeviceType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceType_14__setstate_cython__(struct __pyx_obj_7pylivox_PyDeviceType *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_LidarStateInit(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_2LidarStateNormal(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_4LidarStatePowerSaving(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_6LidarStateStandBy(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_8LidarStateError(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_10LidarStateUnknown(void); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_12__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLidarState_14__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_11PyLidarMode_LidarModeNormal(void); /* proto */
static PyObject *__pyx_pf_7pylivox_11PyLidarMode_2LidarModePowerSaving(void); /* proto */
static PyObject *__pyx_pf_7pylivox_11PyLidarMode_4LidarModeStandby(void); /* proto */
static PyObject *__pyx_pf_7pylivox_11PyLidarMode_6__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarMode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_11PyLidarMode_8__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarMode *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_LidarFeatureNone(void); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_2LidarFeatureRainFog(void); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_4__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_6__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_LidarDynamicIpMode(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_2LidarStaticIpMode(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_4__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarIpMode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_6__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarIpMode *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_NoneRepetitiveScanPattern(void); /* proto */
static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_2RepetitiveScanPattern(void); /* proto */
static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_4__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarScanPattern *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_6__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarScanPattern *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_StatusSendFailed(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_2StatusHandlerImplNotExist(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_4StatusInvalidHandle(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_6StatusChannelNotExist(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_8StatusNotEnoughMemory(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_10StatusTimeout(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_12StatusNotSupported(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_14StatusNotConnected(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_16StatusFailure(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_18StatusSuccess(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_20__reduce_cython__(struct __pyx_obj_7pylivox_PyLivoxStatus *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_22__setstate_cython__(struct __pyx_obj_7pylivox_PyLivoxStatus *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_EventConnect(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_2EventDisconnect(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_4EventStateChange(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_6EventHubConnectionChange(void); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_8__reduce_cython__(struct __pyx_obj_7pylivox_PyDeviceEvent *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_10__setstate_cython__(struct __pyx_obj_7pylivox_PyDeviceEvent *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_TimestampTypeNoSync(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_2TimestampTypePtp(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_4TimestampTypeRsvd(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_6TimestampTypePpsGps(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_8TimestampTypePps(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_10TimestampTypeUnknown(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_12__reduce_cython__(struct __pyx_obj_7pylivox_PyTimestampType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyTimestampType_14__setstate_cython__(struct __pyx_obj_7pylivox_PyTimestampType *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_PointDataTypeCartesian(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_2PointDataTypeSpherical(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_4PointDataTypeExtendCartesian(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_6PointDataTypeExtendSpherical(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_8PointDataTypeDualExtendCartesian(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_10PointDataTypeDualExtendSpherical(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_12PointDataTypeImu(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_14PointDataTypeTripleExtendCartesian(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_16PointDataTypeTripleExtendSpherical(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_18PointDataTypeMax(void); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_20__reduce_cython__(struct __pyx_obj_7pylivox_PyPointDataType *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyPointDataType_22__setstate_cython__(struct __pyx_obj_7pylivox_PyPointDataType *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_PointCloudReturnFirst(void); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_2PointCloudReturnStrongest(void); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_4PointCloudReturnDual(void); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_6PointCloudReturnTriple(void); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_8__reduce_cython__(struct __pyx_obj_7pylivox_PyPointCloudReturnMode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_10__setstate_cython__(struct __pyx_obj_7pylivox_PyPointCloudReturnMode *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_9PyImuFreq_ImuFreq0Hz(void); /* proto */
static PyObject *__pyx_pf_7pylivox_9PyImuFreq_2ImuFreq200Hz(void); /* proto */
static PyObject *__pyx_pf_7pylivox_9PyImuFreq_4__reduce_cython__(struct __pyx_obj_7pylivox_PyImuFreq *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_9PyImuFreq_6__setstate_cython__(struct __pyx_obj_7pylivox_PyImuFreq *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSdkVersion___init__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, int __pyx_v_major, int __pyx_v_minor, int __pyx_v_patch); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_5major___get__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSdkVersion_5major_2__set__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, PyObject *__pyx_v_major); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_5minor___get__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSdkVersion_5minor_2__set__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, PyObject *__pyx_v_minor); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_5patch___get__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSdkVersion_5patch_2__set__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, PyObject *__pyx_v_patch); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, int __pyx_v_x, int __pyx_v_y, int __pyx_v_z, int __pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_1x___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxRawPoint_1x_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_1y___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxRawPoint_1y_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_1z___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxRawPoint_1z_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxRawPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, uint32_t __pyx_v_depth, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint8_t __pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_5depth___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_5depth_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_12PyLivoxPoint___init__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z, uint8_t __pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_1x___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyLivoxPoint_1x_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_1y___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyLivoxPoint_1y_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_1z___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyLivoxPoint_1z_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyLivoxPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, int __pyx_v_x, int __pyx_v_y, int __pyx_v_z, uint8_t __pyx_v_reflectivity, uint8_t __pyx_v_tag); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1x___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1x_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1y___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1y_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1z___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1z_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_3tag___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_3tag_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, uint32_t __pyx_v_depth, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint8_t __pyx_v_reflectivity, uint8_t __pyx_v_tag); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5depth___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5depth_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3tag___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3tag_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, int __pyx_v_x1, int __pyx_v_y1, int __pyx_v_z1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, int __pyx_v_x2, int __pyx_v_y2, int __pyx_v_z2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x1); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y1); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z1); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag1); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x2); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y2); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z2); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag2); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint32_t __pyx_v_depth1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, uint32_t __pyx_v_depth2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, int __pyx_v_x1, int __pyx_v_y1, int __pyx_v_z1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, int __pyx_v_x2, int __pyx_v_y2, int __pyx_v_z2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2, int __pyx_v_x3, int __pyx_v_y3, int __pyx_v_z3, uint8_t __pyx_v_reflectivity3, uint8_t __pyx_v_tag3); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag1); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag2); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x3); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y3); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z3); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity3); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag3); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint32_t __pyx_v_depth1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, uint32_t __pyx_v_depth2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2, uint32_t __pyx_v_depth3, uint8_t __pyx_v_reflectivity3, uint8_t __pyx_v_tag3); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth1); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag1); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth2); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag2); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth3); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity3); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag3); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint___init__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, float __pyx_v_gyro_x, float __pyx_v_gyro_y, float __pyx_v_gyro_z, float __pyx_v_acc_x, float __pyx_v_acc_y, float __pyx_v_acc_z); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_x___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_x_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_gyro_x); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_y___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_y_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_gyro_y); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_z___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_z_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_gyro_z); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_x___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_x_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_acc_x); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_y___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_y_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_acc_y); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_z___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_z_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_acc_z); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode___init__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, uint32_t __pyx_v_temp_status, uint32_t __pyx_v_volt_status, uint32_t __pyx_v_motor_status, uint32_t __pyx_v_dirty_warn, uint32_t __pyx_v_firmware_err, uint32_t __pyx_v_pps_status, uint32_t __pyx_v_device_status, uint32_t __pyx_v_fan_status, uint32_t __pyx_v_self_heating, uint32_t __pyx_v_ptp_status, uint32_t __pyx_v_time_sync_status, uint32_t __pyx_v_rsvd, uint32_t __pyx_v_system_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_11temp_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_11temp_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_temp_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_11volt_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_11volt_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_volt_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_12motor_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_12motor_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_motor_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10dirty_warn___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_10dirty_warn_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_dirty_warn); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_12firmware_err___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_12firmware_err_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_firmware_err); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10pps_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_10pps_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_pps_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_13device_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_13device_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_device_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10fan_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_10fan_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_fan_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_12self_heating___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_12self_heating_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_self_heating); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10ptp_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_10ptp_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_ptp_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_16time_sync_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_16time_sync_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_time_sync_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_4rsvd___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_4rsvd_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_rsvd); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_13system_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLidarErrorCode_13system_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_system_status); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode___init__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, uint32_t __pyx_v_sync_status, uint32_t __pyx_v_temp_status, uint32_t __pyx_v_lidar_status, uint32_t __pyx_v_lidar_link_status, uint32_t __pyx_v_firmware_err, uint32_t __pyx_v_rsvd, uint32_t __pyx_v_system_status); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_11sync_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_11sync_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_sync_status); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_11temp_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_11temp_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_temp_status); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_12lidar_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_12lidar_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_lidar_status); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_17lidar_link_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_17lidar_link_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_lidar_link_status); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_12firmware_err___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_12firmware_err_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_firmware_err); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_4rsvd___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_4rsvd_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_rsvd); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_13system_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyHubErrorCode_13system_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_system_status); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_14PyErrorMessage___init__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, uint32_t __pyx_v_error_code, struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_lidar_error_code, struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_hub_error_code); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_10error_code___get__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyErrorMessage_10error_code_2__set__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, PyObject *__pyx_v_error_code); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_16lidar_error_code___get__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyErrorMessage_16lidar_error_code_2__set__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, PyObject *__pyx_v_lidar_error_code); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_14hub_error_code___get__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_14PyErrorMessage_14hub_error_code_2__set__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, PyObject *__pyx_v_hub_error_code); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket___init__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, uint8_t __pyx_v_version, uint8_t __pyx_v_slot, uint8_t __pyx_v_id, uint32_t __pyx_v_err_code, uint8_t __pyx_v_timestamp_type, uint8_t __pyx_v_data_type, PyObject *__pyx_v_timestamp, PyObject *__pyx_v_data); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_7version___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_7version_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_4slot___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_4slot_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_2id___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_2id_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_8err_code___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_8err_code_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_14timestamp_type___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_14timestamp_type_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_9data_type___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_9data_type_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_9timestamp___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_9timestamp_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_4data___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_16PyLivoxEthPacket_4data_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_13PyStatusUnion___init__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, uint32_t __pyx_v_progress, struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_status_code); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_8progress___get__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_13PyStatusUnion_8progress_2__set__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_11status_code___get__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_13PyStatusUnion_11status_code_2__set__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo___init__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_handle, uint8_t __pyx_v_slot, uint8_t __pyx_v_id, uint8_t __pyx_v_type, uint16_t __pyx_v_data_port, uint16_t __pyx_v_cmd_port, uint16_t __pyx_v_sensor_port, PyObject *__pyx_v_ip, struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_state, struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_feature, struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_status, PyObject *__pyx_v_firmware_version); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_6handle___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_6handle_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_4slot___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_4slot_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_2id___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_2id_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_4type___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_4type_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_9data_port___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_9data_port_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_8cmd_port___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_8cmd_port_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_11sensor_port___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_11sensor_port_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_2ip___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_2ip_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_5state___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_5state_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_7feature___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_7feature_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_6status___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_6status_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_16firmware_version___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyDeviceInfo_16firmware_version_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo___init__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_dev_type, uint16_t __pyx_v_reserved, PyObject *__pyx_v_ip); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8dev_type___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8dev_type_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8reserved___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8reserved_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2ip___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2ip_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_20PyConnectedLidarInfo___init__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_dev_type, PyObject *__pyx_v_version, uint8_t __pyx_v_slot, uint8_t __pyx_v_id); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_8dev_type___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_8dev_type_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_7version___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_7version_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_4slot___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_4slot_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_2id___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_2id_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_22PyLidarModeRequestItem___init__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_state); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_22PyLidarModeRequestItem_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_5state___get__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_22PyLidarModeRequestItem_5state_2__set__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_12PyReturnCode___init__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, uint8_t __pyx_v_ret_code, PyObject *__pyx_v_broadcast_code); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyReturnCode_8ret_code___get__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyReturnCode_8ret_code_2__set__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyReturnCode_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_12PyReturnCode_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyReturnCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_12PyReturnCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_21PyDeviceBroadcastCode___init__(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self, PyObject *__pyx_v_broadcast_code); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyDeviceBroadcastCode_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyDeviceBroadcastCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_21PyDeviceBroadcastCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem___init__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_feature); /* proto */
static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_7feature___get__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self); /* proto */
static int __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_7feature_2__set__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_30__pyx_unpickle_PyDeviceType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_32__pyx_unpickle_PyLidarState(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_34__pyx_unpickle_PyLidarMode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_36__pyx_unpickle_PyLidarFeature(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_38__pyx_unpickle_PyLidarIpMode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_40__pyx_unpickle_PyLidarScanPattern(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_42__pyx_unpickle_PyLivoxStatus(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_44__pyx_unpickle_PyDeviceEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_46__pyx_unpickle_PyTimestampType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_48__pyx_unpickle_PyPointDataType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_50__pyx_unpickle_PyPointCloudReturnMode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7pylivox_52__pyx_unpickle_PyImuFreq(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_7pylivox_PyDeviceType(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarMode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarFeature(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarIpMode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarScanPattern(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxStatus(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyDeviceEvent(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyTimestampType(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyPointDataType(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyPointCloudReturnMode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyImuFreq(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxSdkVersion(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxRawPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxSpherPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxExtendRawPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxExtendSpherPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxDualExtendRawPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxDualExtendSpherPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxTripleExtendRawPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxTripleExtendSpherPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxImuPoint(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarErrorCode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyHubErrorCode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyErrorMessage(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLivoxEthPacket(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyStatusUnion(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyDeviceInfo(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyBroadcastDeviceInfo(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyConnectedLidarInfo(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyLidarModeRequestItem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyReturnCode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyDeviceBroadcastCode(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7pylivox_PyRainFogSuppressRequestItem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4type_type;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4bool_bool;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_7complex_complex;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_5array_array;
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_7pylivox_PyDeviceType;
  PyObject *__pyx_type_7pylivox_PyLidarState;
  PyObject *__pyx_type_7pylivox_PyLidarMode;
  PyObject *__pyx_type_7pylivox_PyLidarFeature;
  PyObject *__pyx_type_7pylivox_PyLidarIpMode;
  PyObject *__pyx_type_7pylivox_PyLidarScanPattern;
  PyObject *__pyx_type_7pylivox_PyLivoxStatus;
  PyObject *__pyx_type_7pylivox_PyDeviceEvent;
  PyObject *__pyx_type_7pylivox_PyTimestampType;
  PyObject *__pyx_type_7pylivox_PyPointDataType;
  PyObject *__pyx_type_7pylivox_PyPointCloudReturnMode;
  PyObject *__pyx_type_7pylivox_PyImuFreq;
  PyObject *__pyx_type_7pylivox_PyLivoxSdkVersion;
  PyObject *__pyx_type_7pylivox_PyLivoxRawPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxSpherPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxExtendRawPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxExtendSpherPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxDualExtendRawPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint;
  PyObject *__pyx_type_7pylivox_PyLivoxImuPoint;
  PyObject *__pyx_type_7pylivox_PyLidarErrorCode;
  PyObject *__pyx_type_7pylivox_PyHubErrorCode;
  PyObject *__pyx_type_7pylivox_PyErrorMessage;
  PyObject *__pyx_type_7pylivox_PyLivoxEthPacket;
  PyObject *__pyx_type_7pylivox_PyStatusUnion;
  PyObject *__pyx_type_7pylivox_PyDeviceInfo;
  PyObject *__pyx_type_7pylivox_PyBroadcastDeviceInfo;
  PyObject *__pyx_type_7pylivox_PyConnectedLidarInfo;
  PyObject *__pyx_type_7pylivox_PyLidarModeRequestItem;
  PyObject *__pyx_type_7pylivox_PyReturnCode;
  PyObject *__pyx_type_7pylivox_PyDeviceBroadcastCode;
  PyObject *__pyx_type_7pylivox_PyRainFogSuppressRequestItem;
  #endif
  PyTypeObject *__pyx_ptype_7pylivox_PyDeviceType;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarState;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarMode;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarFeature;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarIpMode;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarScanPattern;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxStatus;
  PyTypeObject *__pyx_ptype_7pylivox_PyDeviceEvent;
  PyTypeObject *__pyx_ptype_7pylivox_PyTimestampType;
  PyTypeObject *__pyx_ptype_7pylivox_PyPointDataType;
  PyTypeObject *__pyx_ptype_7pylivox_PyPointCloudReturnMode;
  PyTypeObject *__pyx_ptype_7pylivox_PyImuFreq;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxSdkVersion;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxRawPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxSpherPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxExtendRawPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxImuPoint;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarErrorCode;
  PyTypeObject *__pyx_ptype_7pylivox_PyHubErrorCode;
  PyTypeObject *__pyx_ptype_7pylivox_PyErrorMessage;
  PyTypeObject *__pyx_ptype_7pylivox_PyLivoxEthPacket;
  PyTypeObject *__pyx_ptype_7pylivox_PyStatusUnion;
  PyTypeObject *__pyx_ptype_7pylivox_PyDeviceInfo;
  PyTypeObject *__pyx_ptype_7pylivox_PyBroadcastDeviceInfo;
  PyTypeObject *__pyx_ptype_7pylivox_PyConnectedLidarInfo;
  PyTypeObject *__pyx_ptype_7pylivox_PyLidarModeRequestItem;
  PyTypeObject *__pyx_ptype_7pylivox_PyReturnCode;
  PyTypeObject *__pyx_ptype_7pylivox_PyDeviceBroadcastCode;
  PyTypeObject *__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem;
  PyObject *__pyx_kp_u_0;
  PyObject *__pyx_kp_u_0000000000000000;
  PyObject *__pyx_n_s_DeviceTypeHub;
  PyObject *__pyx_n_s_DeviceTypeLidarAvia;
  PyObject *__pyx_n_s_DeviceTypeLidarHorizon;
  PyObject *__pyx_n_s_DeviceTypeLidarMid40;
  PyObject *__pyx_n_s_DeviceTypeLidarMid70;
  PyObject *__pyx_n_s_DeviceTypeLidarTele;
  PyObject *__pyx_n_s_EventConnect;
  PyObject *__pyx_n_s_EventDisconnect;
  PyObject *__pyx_n_s_EventHubConnectionChange;
  PyObject *__pyx_n_s_EventStateChange;
  PyObject *__pyx_n_s_ImuFreq0Hz;
  PyObject *__pyx_n_s_ImuFreq200Hz;
  PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0;
  PyObject *__pyx_n_s_IndexError;
  PyObject *__pyx_n_s_KeyError;
  PyObject *__pyx_n_s_LIVOX_SDK_MAJOR_VERSION;
  PyObject *__pyx_n_s_LIVOX_SDK_MINOR_VERSION;
  PyObject *__pyx_n_s_LIVOX_SDK_PATCH_VERSION;
  PyObject *__pyx_n_s_LidarDynamicIpMode;
  PyObject *__pyx_n_s_LidarFeatureNone;
  PyObject *__pyx_n_s_LidarFeatureRainFog;
  PyObject *__pyx_n_s_LidarModeNormal;
  PyObject *__pyx_n_s_LidarModePowerSaving;
  PyObject *__pyx_n_s_LidarModeStandby;
  PyObject *__pyx_n_s_LidarStateError;
  PyObject *__pyx_n_s_LidarStateInit;
  PyObject *__pyx_n_s_LidarStateNormal;
  PyObject *__pyx_n_s_LidarStatePowerSaving;
  PyObject *__pyx_n_s_LidarStateStandBy;
  PyObject *__pyx_n_s_LidarStateUnknown;
  PyObject *__pyx_n_s_LidarStaticIpMode;
  PyObject *__pyx_n_s_MemoryError;
  PyObject *__pyx_kp_s_More_than_one_union_attribute_pa;
  PyObject *__pyx_kp_s_No_value_specified_for_any_of_th;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_10;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_11;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_12;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_13;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_14;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_15;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_16;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_2;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_3;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_4;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_5;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_6;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_7;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_8;
  PyObject *__pyx_kp_s_No_value_specified_for_struct_at_9;
  PyObject *__pyx_n_s_NoneRepetitiveScanPattern;
  PyObject *__pyx_n_s_OverflowError;
  PyObject *__pyx_n_s_PickleError;
  PyObject *__pyx_kp_s_Pickling_of_struct_members_such;
  PyObject *__pyx_n_s_PointCloudReturnDual;
  PyObject *__pyx_n_s_PointCloudReturnFirst;
  PyObject *__pyx_n_s_PointCloudReturnStrongest;
  PyObject *__pyx_n_s_PointCloudReturnTriple;
  PyObject *__pyx_n_s_PointDataTypeCartesian;
  PyObject *__pyx_n_s_PointDataTypeDualExtendCartesian;
  PyObject *__pyx_n_s_PointDataTypeDualExtendSpherical;
  PyObject *__pyx_n_s_PointDataTypeExtendCartesian;
  PyObject *__pyx_n_s_PointDataTypeExtendSpherical;
  PyObject *__pyx_n_s_PointDataTypeImu;
  PyObject *__pyx_n_s_PointDataTypeMax;
  PyObject *__pyx_n_s_PointDataTypeSpherical;
  PyObject *__pyx_n_s_PointDataTypeTripleExtendCartesi;
  PyObject *__pyx_n_s_PointDataTypeTripleExtendSpheric;
  PyObject *__pyx_n_s_PyAddHubToConnect;
  PyObject *__pyx_n_s_PyAddLidarToConnect;
  PyObject *__pyx_n_s_PyBroadcastDeviceInfo;
  PyObject *__pyx_n_s_PyBroadcastDeviceInfo___reduce_c;
  PyObject *__pyx_n_s_PyBroadcastDeviceInfo___setstate;
  PyObject *__pyx_n_s_PyConnectedLidarInfo;
  PyObject *__pyx_n_s_PyConnectedLidarInfo___reduce_cy;
  PyObject *__pyx_n_s_PyConnectedLidarInfo___setstate;
  PyObject *__pyx_n_s_PyDeviceBroadcastCode;
  PyObject *__pyx_n_s_PyDeviceBroadcastCode___reduce_c;
  PyObject *__pyx_n_s_PyDeviceBroadcastCode___setstate;
  PyObject *__pyx_n_s_PyDeviceEvent;
  PyObject *__pyx_n_s_PyDeviceEvent_EventConnect;
  PyObject *__pyx_n_s_PyDeviceEvent_EventDisconnect;
  PyObject *__pyx_n_s_PyDeviceEvent_EventHubConnection;
  PyObject *__pyx_n_s_PyDeviceEvent_EventStateChange;
  PyObject *__pyx_n_s_PyDeviceEvent___reduce_cython;
  PyObject *__pyx_n_s_PyDeviceEvent___setstate_cython;
  PyObject *__pyx_n_s_PyDeviceInfo;
  PyObject *__pyx_n_s_PyDeviceInfo___reduce_cython;
  PyObject *__pyx_n_s_PyDeviceInfo___setstate_cython;
  PyObject *__pyx_n_s_PyDeviceType;
  PyObject *__pyx_n_s_PyDeviceType_DeviceTypeHub;
  PyObject *__pyx_n_s_PyDeviceType_DeviceTypeLidarAvia;
  PyObject *__pyx_n_s_PyDeviceType_DeviceTypeLidarHori;
  PyObject *__pyx_n_s_PyDeviceType_DeviceTypeLidarMid4;
  PyObject *__pyx_n_s_PyDeviceType_DeviceTypeLidarMid7;
  PyObject *__pyx_n_s_PyDeviceType_DeviceTypeLidarTele;
  PyObject *__pyx_n_s_PyDeviceType___reduce_cython;
  PyObject *__pyx_n_s_PyDeviceType___setstate_cython;
  PyObject *__pyx_n_s_PyDisableConsoleLogger;
  PyObject *__pyx_n_s_PyDisconnectDevice;
  PyObject *__pyx_n_s_PyErrorMessage;
  PyObject *__pyx_n_s_PyErrorMessage___reduce_cython;
  PyObject *__pyx_n_s_PyErrorMessage___setstate_cython;
  PyObject *__pyx_n_s_PyGetConnectedDevices;
  PyObject *__pyx_n_s_PyGetLivoxSdkVersion;
  PyObject *__pyx_n_s_PyHubErrorCode;
  PyObject *__pyx_n_s_PyHubErrorCode___reduce_cython;
  PyObject *__pyx_n_s_PyHubErrorCode___setstate_cython;
  PyObject *__pyx_n_s_PyHubGetLidarHandle;
  PyObject *__pyx_n_s_PyHubStartSampling;
  PyObject *__pyx_n_s_PyHubStopSampling;
  PyObject *__pyx_n_s_PyImuFreq;
  PyObject *__pyx_n_s_PyImuFreq_ImuFreq0Hz;
  PyObject *__pyx_n_s_PyImuFreq_ImuFreq200Hz;
  PyObject *__pyx_n_s_PyImuFreq___reduce_cython;
  PyObject *__pyx_n_s_PyImuFreq___setstate_cython;
  PyObject *__pyx_n_s_PyInit;
  PyObject *__pyx_n_s_PyLidarErrorCode;
  PyObject *__pyx_n_s_PyLidarErrorCode___reduce_cython;
  PyObject *__pyx_n_s_PyLidarErrorCode___setstate_cyth;
  PyObject *__pyx_n_s_PyLidarFeature;
  PyObject *__pyx_n_s_PyLidarFeature_LidarFeatureNone;
  PyObject *__pyx_n_s_PyLidarFeature_LidarFeatureRainF;
  PyObject *__pyx_n_s_PyLidarFeature___reduce_cython;
  PyObject *__pyx_n_s_PyLidarFeature___setstate_cython;
  PyObject *__pyx_n_s_PyLidarIpMode;
  PyObject *__pyx_n_s_PyLidarIpMode_LidarDynamicIpMode;
  PyObject *__pyx_n_s_PyLidarIpMode_LidarStaticIpMode;
  PyObject *__pyx_n_s_PyLidarIpMode___reduce_cython;
  PyObject *__pyx_n_s_PyLidarIpMode___setstate_cython;
  PyObject *__pyx_n_s_PyLidarMode;
  PyObject *__pyx_n_s_PyLidarModeRequestItem;
  PyObject *__pyx_n_s_PyLidarModeRequestItem___reduce;
  PyObject *__pyx_n_s_PyLidarModeRequestItem___setstat;
  PyObject *__pyx_n_s_PyLidarMode_LidarModeNormal;
  PyObject *__pyx_n_s_PyLidarMode_LidarModePowerSaving;
  PyObject *__pyx_n_s_PyLidarMode_LidarModeStandby;
  PyObject *__pyx_n_s_PyLidarMode___reduce_cython;
  PyObject *__pyx_n_s_PyLidarMode___setstate_cython;
  PyObject *__pyx_n_s_PyLidarScanPattern;
  PyObject *__pyx_n_s_PyLidarScanPattern_NoneRepetitiv;
  PyObject *__pyx_n_s_PyLidarScanPattern_RepetitiveSca;
  PyObject *__pyx_n_s_PyLidarScanPattern___reduce_cyth;
  PyObject *__pyx_n_s_PyLidarScanPattern___setstate_cy;
  PyObject *__pyx_n_s_PyLidarState;
  PyObject *__pyx_n_s_PyLidarState_LidarStateError;
  PyObject *__pyx_n_s_PyLidarState_LidarStateInit;
  PyObject *__pyx_n_s_PyLidarState_LidarStateNormal;
  PyObject *__pyx_n_s_PyLidarState_LidarStatePowerSavi;
  PyObject *__pyx_n_s_PyLidarState_LidarStateStandBy;
  PyObject *__pyx_n_s_PyLidarState_LidarStateUnknown;
  PyObject *__pyx_n_s_PyLidarState___reduce_cython;
  PyObject *__pyx_n_s_PyLidarState___setstate_cython;
  PyObject *__pyx_n_s_PyLivoxDualExtendRawPoint;
  PyObject *__pyx_n_s_PyLivoxDualExtendRawPoint___redu;
  PyObject *__pyx_n_s_PyLivoxDualExtendRawPoint___sets;
  PyObject *__pyx_n_s_PyLivoxDualExtendSpherPoint;
  PyObject *__pyx_n_s_PyLivoxDualExtendSpherPoint___re;
  PyObject *__pyx_n_s_PyLivoxDualExtendSpherPoint___se;
  PyObject *__pyx_n_s_PyLivoxEthPacket;
  PyObject *__pyx_n_s_PyLivoxEthPacket___reduce_cython;
  PyObject *__pyx_n_s_PyLivoxEthPacket___setstate_cyth;
  PyObject *__pyx_n_s_PyLivoxExtendRawPoint;
  PyObject *__pyx_n_s_PyLivoxExtendRawPoint___reduce_c;
  PyObject *__pyx_n_s_PyLivoxExtendRawPoint___setstate;
  PyObject *__pyx_n_s_PyLivoxExtendSpherPoint;
  PyObject *__pyx_n_s_PyLivoxExtendSpherPoint___reduce;
  PyObject *__pyx_n_s_PyLivoxExtendSpherPoint___setsta;
  PyObject *__pyx_n_s_PyLivoxImuPoint;
  PyObject *__pyx_n_s_PyLivoxImuPoint___reduce_cython;
  PyObject *__pyx_n_s_PyLivoxImuPoint___setstate_cytho;
  PyObject *__pyx_n_s_PyLivoxPoint;
  PyObject *__pyx_n_s_PyLivoxPoint___reduce_cython;
  PyObject *__pyx_n_s_PyLivoxPoint___setstate_cython;
  PyObject *__pyx_n_s_PyLivoxRawPoint;
  PyObject *__pyx_n_s_PyLivoxRawPoint___reduce_cython;
  PyObject *__pyx_n_s_PyLivoxRawPoint___setstate_cytho;
  PyObject *__pyx_n_s_PyLivoxSdkVersion;
  PyObject *__pyx_n_s_PyLivoxSdkVersion___reduce_cytho;
  PyObject *__pyx_n_s_PyLivoxSdkVersion___setstate_cyt;
  PyObject *__pyx_n_s_PyLivoxSpherPoint;
  PyObject *__pyx_n_s_PyLivoxSpherPoint___reduce_cytho;
  PyObject *__pyx_n_s_PyLivoxSpherPoint___setstate_cyt;
  PyObject *__pyx_n_s_PyLivoxStatus;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusChannelNotEx;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusFailure;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusHandlerImplN;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusInvalidHandl;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusNotConnected;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusNotEnoughMem;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusNotSupported;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusSendFailed;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusSuccess;
  PyObject *__pyx_n_s_PyLivoxStatus_StatusTimeout;
  PyObject *__pyx_n_s_PyLivoxStatus___reduce_cython;
  PyObject *__pyx_n_s_PyLivoxStatus___setstate_cython;
  PyObject *__pyx_n_s_PyLivoxTripleExtendRawPoint;
  PyObject *__pyx_n_s_PyLivoxTripleExtendRawPoint___re;
  PyObject *__pyx_n_s_PyLivoxTripleExtendRawPoint___se;
  PyObject *__pyx_n_s_PyLivoxTripleExtendSpherPoint;
  PyObject *__pyx_n_s_PyLivoxTripleExtendSpherPoint_2;
  PyObject *__pyx_n_s_PyLivoxTripleExtendSpherPoint_3;
  PyObject *__pyx_n_s_PyPointCloudReturnMode;
  PyObject *__pyx_n_s_PyPointCloudReturnMode_PointClou;
  PyObject *__pyx_n_s_PyPointCloudReturnMode_PointClou_2;
  PyObject *__pyx_n_s_PyPointCloudReturnMode_PointClou_3;
  PyObject *__pyx_n_s_PyPointCloudReturnMode_PointClou_4;
  PyObject *__pyx_n_s_PyPointCloudReturnMode___reduce;
  PyObject *__pyx_n_s_PyPointCloudReturnMode___setstat;
  PyObject *__pyx_n_s_PyPointDataType;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeCar;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeDua;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeDua_2;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeExt;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeExt_2;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeImu;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeMax;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeSph;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeTri;
  PyObject *__pyx_n_s_PyPointDataType_PointDataTypeTri_2;
  PyObject *__pyx_n_s_PyPointDataType___reduce_cython;
  PyObject *__pyx_n_s_PyPointDataType___setstate_cytho;
  PyObject *__pyx_n_s_PyRainFogSuppressRequestItem;
  PyObject *__pyx_n_s_PyRainFogSuppressRequestItem___r;
  PyObject *__pyx_n_s_PyRainFogSuppressRequestItem___s;
  PyObject *__pyx_n_s_PyReturnCode;
  PyObject *__pyx_n_s_PyReturnCode___reduce_cython;
  PyObject *__pyx_n_s_PyReturnCode___setstate_cython;
  PyObject *__pyx_n_s_PySaveLoggerFile;
  PyObject *__pyx_n_s_PySetCartesianCoordinate;
  PyObject *__pyx_n_s_PySetSphericalCoordinate;
  PyObject *__pyx_n_s_PyStart;
  PyObject *__pyx_n_s_PyStatusUnion;
  PyObject *__pyx_n_s_PyStatusUnion___reduce_cython;
  PyObject *__pyx_n_s_PyStatusUnion___setstate_cython;
  PyObject *__pyx_n_s_PyTimestampType;
  PyObject *__pyx_n_s_PyTimestampType_TimestampTypeNoS;
  PyObject *__pyx_n_s_PyTimestampType_TimestampTypePps;
  PyObject *__pyx_n_s_PyTimestampType_TimestampTypePps_2;
  PyObject *__pyx_n_s_PyTimestampType_TimestampTypePtp;
  PyObject *__pyx_n_s_PyTimestampType_TimestampTypeRsv;
  PyObject *__pyx_n_s_PyTimestampType_TimestampTypeUnk;
  PyObject *__pyx_n_s_PyTimestampType___reduce_cython;
  PyObject *__pyx_n_s_PyTimestampType___setstate_cytho;
  PyObject *__pyx_n_s_PyUninit;
  PyObject *__pyx_n_s_RepetitiveScanPattern;
  PyObject *__pyx_n_s_StatusChannelNotExist;
  PyObject *__pyx_n_s_StatusFailure;
  PyObject *__pyx_n_s_StatusHandlerImplNotExist;
  PyObject *__pyx_n_s_StatusInvalidHandle;
  PyObject *__pyx_n_s_StatusNotConnected;
  PyObject *__pyx_n_s_StatusNotEnoughMemory;
  PyObject *__pyx_n_s_StatusNotSupported;
  PyObject *__pyx_n_s_StatusSendFailed;
  PyObject *__pyx_n_s_StatusSuccess;
  PyObject *__pyx_n_s_StatusTimeout;
  PyObject *__pyx_n_s_TimestampTypeNoSync;
  PyObject *__pyx_n_s_TimestampTypePps;
  PyObject *__pyx_n_s_TimestampTypePpsGps;
  PyObject *__pyx_n_s_TimestampTypePtp;
  PyObject *__pyx_n_s_TimestampTypeRsvd;
  PyObject *__pyx_n_s_TimestampTypeUnknown;
  PyObject *__pyx_n_s_TypeError;
  PyObject *__pyx_n_s_ValueError;
  PyObject *__pyx_n_s__205;
  PyObject *__pyx_kp_u__39;
  PyObject *__pyx_n_s__40;
  PyObject *__pyx_n_s_acc_x;
  PyObject *__pyx_n_s_acc_y;
  PyObject *__pyx_n_s_acc_z;
  PyObject *__pyx_n_s_array;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_broadcast_code;
  PyObject *__pyx_n_s_cb;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_cmd_port;
  PyObject *__pyx_n_s_core;
  PyObject *__pyx_n_s_data;
  PyObject *__pyx_n_s_data_port;
  PyObject *__pyx_n_s_data_type;
  PyObject *__pyx_n_s_depth;
  PyObject *__pyx_n_s_depth1;
  PyObject *__pyx_n_s_depth2;
  PyObject *__pyx_n_s_depth3;
  PyObject *__pyx_n_s_dev_type;
  PyObject *__pyx_n_s_device_status;
  PyObject *__pyx_n_s_devices;
  PyObject *__pyx_n_s_dict;
  PyObject *__pyx_n_s_dict_2;
  PyObject *__pyx_n_s_dirty_warn;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_encode;
  PyObject *__pyx_n_s_enumerate;
  PyObject *__pyx_n_s_err_code;
  PyObject *__pyx_n_s_error_code;
  PyObject *__pyx_kp_s_error_code_lidar_error_code_hub;
  PyObject *__pyx_n_s_fan_status;
  PyObject *__pyx_n_s_feature;
  PyObject *__pyx_n_s_firmware_err;
  PyObject *__pyx_n_s_firmware_version;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_getstate;
  PyObject *__pyx_n_s_gyro_x;
  PyObject *__pyx_n_s_gyro_y;
  PyObject *__pyx_n_s_gyro_z;
  PyObject *__pyx_n_s_handle;
  PyObject *__pyx_n_s_hub_error_code;
  PyObject *__pyx_n_s_id;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_s_ip;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_kBroadcastCodeSize;
  PyObject *__pyx_n_s_kMaxLidarCount;
  PyObject *__pyx_n_s_lidar_error_code;
  PyObject *__pyx_n_s_lidar_link_status;
  PyObject *__pyx_n_s_lidar_status;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_major;
  PyObject *__pyx_n_s_minor;
  PyObject *__pyx_n_s_motor_status;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_new;
  PyObject *__pyx_n_s_patch;
  PyObject *__pyx_n_s_phi;
  PyObject *__pyx_n_s_pickle;
  PyObject *__pyx_n_s_pps_status;
  PyObject *__pyx_n_s_progress;
  PyObject *__pyx_kp_s_progress_status_code;
  PyObject *__pyx_n_s_ptp_status;
  PyObject *__pyx_n_s_pylivox;
  PyObject *__pyx_kp_s_pylivox_pyx;
  PyObject *__pyx_n_s_pyx_PickleError;
  PyObject *__pyx_n_s_pyx_checksum;
  PyObject *__pyx_n_s_pyx_result;
  PyObject *__pyx_n_s_pyx_state;
  PyObject *__pyx_n_s_pyx_type;
  PyObject *__pyx_n_s_pyx_unpickle_PyDeviceEvent;
  PyObject *__pyx_n_s_pyx_unpickle_PyDeviceType;
  PyObject *__pyx_n_s_pyx_unpickle_PyImuFreq;
  PyObject *__pyx_n_s_pyx_unpickle_PyLidarFeature;
  PyObject *__pyx_n_s_pyx_unpickle_PyLidarIpMode;
  PyObject *__pyx_n_s_pyx_unpickle_PyLidarMode;
  PyObject *__pyx_n_s_pyx_unpickle_PyLidarScanPatter;
  PyObject *__pyx_n_s_pyx_unpickle_PyLidarState;
  PyObject *__pyx_n_s_pyx_unpickle_PyLivoxStatus;
  PyObject *__pyx_n_s_pyx_unpickle_PyPointCloudRetur;
  PyObject *__pyx_n_s_pyx_unpickle_PyPointDataType;
  PyObject *__pyx_n_s_pyx_unpickle_PyTimestampType;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_reduce;
  PyObject *__pyx_n_s_reduce_cython;
  PyObject *__pyx_n_s_reduce_ex;
  PyObject *__pyx_n_s_reflectivity;
  PyObject *__pyx_n_s_reflectivity1;
  PyObject *__pyx_n_s_reflectivity2;
  PyObject *__pyx_n_s_reflectivity3;
  PyObject *__pyx_n_s_reserved;
  PyObject *__pyx_n_s_ret_code;
  PyObject *__pyx_n_s_rsvd;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_n_s_self_heating;
  PyObject *__pyx_n_s_sensor_port;
  PyObject *__pyx_n_s_setstate;
  PyObject *__pyx_n_s_setstate_cython;
  PyObject *__pyx_n_s_size;
  PyObject *__pyx_n_s_slot;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_state;
  PyObject *__pyx_n_s_staticmethod;
  PyObject *__pyx_n_s_status;
  PyObject *__pyx_n_s_status_code;
  PyObject *__pyx_kp_s_stringsource;
  PyObject *__pyx_n_s_sync_status;
  PyObject *__pyx_n_s_system_status;
  PyObject *__pyx_n_s_tag;
  PyObject *__pyx_n_s_tag1;
  PyObject *__pyx_n_s_tag2;
  PyObject *__pyx_n_s_tag3;
  PyObject *__pyx_n_s_temp_status;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_theta;
  PyObject *__pyx_n_s_time_sync_status;
  PyObject *__pyx_n_s_timestamp;
  PyObject *__pyx_n_s_timestamp_type;
  PyObject *__pyx_n_s_type;
  PyObject *__pyx_n_s_update;
  PyObject *__pyx_n_s_use_setstate;
  PyObject *__pyx_kp_u_utf_8;
  PyObject *__pyx_n_s_version;
  PyObject *__pyx_n_s_volt_status;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_n_s_x1;
  PyObject *__pyx_n_s_x2;
  PyObject *__pyx_n_s_x3;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_y1;
  PyObject *__pyx_n_s_y2;
  PyObject *__pyx_n_s_y3;
  PyObject *__pyx_n_s_z;
  PyObject *__pyx_n_s_z1;
  PyObject *__pyx_n_s_z2;
  PyObject *__pyx_n_s_z3;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_2;
  PyObject *__pyx_int_3;
  PyObject *__pyx_int_4;
  PyObject *__pyx_int_8;
  PyObject *__pyx_int_16;
  PyObject *__pyx_int_32;
  PyObject *__pyx_int_222419149;
  PyObject *__pyx_int_228825662;
  PyObject *__pyx_int_238750788;
  struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_k__17;
  struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_k__18;
  PyObject *__pyx_k__19;
  PyObject *__pyx_k__20;
  struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_k__23;
  PyObject *__pyx_k__24;
  struct __pyx_obj_7pylivox_PyLidarState *__pyx_k__25;
  struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_k__26;
  struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_k__27;
  PyObject *__pyx_k__28;
  PyObject *__pyx_k__31;
  PyObject *__pyx_k__32;
  PyObject *__pyx_k__33;
  PyObject *__pyx_k__34;
  PyObject *__pyx_k__35;
  PyObject *__pyx_k__36;
  PyObject *__pyx_k__37;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__3;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__8;
  PyObject *__pyx_tuple__9;
  PyObject *__pyx_slice__21;
  PyObject *__pyx_slice__22;
  PyObject *__pyx_slice__29;
  PyObject *__pyx_slice__30;
  PyObject *__pyx_tuple__10;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__38;
  PyObject *__pyx_tuple__46;
  PyObject *__pyx_tuple__48;
  PyObject *__pyx_tuple__51;
  PyObject *__pyx_tuple__53;
  PyObject *__pyx_tuple__57;
  PyObject *__pyx_tuple__60;
  PyObject *__pyx_tuple__68;
  PyObject *__pyx_tuple__70;
  PyObject *__pyx_tuple__145;
  PyObject *__pyx_tuple__192;
  PyObject *__pyx_codeobj__41;
  PyObject *__pyx_codeobj__42;
  PyObject *__pyx_codeobj__43;
  PyObject *__pyx_codeobj__44;
  PyObject *__pyx_codeobj__45;
  PyObject *__pyx_codeobj__47;
  PyObject *__pyx_codeobj__49;
  PyObject *__pyx_codeobj__50;
  PyObject *__pyx_codeobj__52;
  PyObject *__pyx_codeobj__54;
  PyObject *__pyx_codeobj__55;
  PyObject *__pyx_codeobj__56;
  PyObject *__pyx_codeobj__58;
  PyObject *__pyx_codeobj__59;
  PyObject *__pyx_codeobj__61;
  PyObject *__pyx_codeobj__62;
  PyObject *__pyx_codeobj__63;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__65;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__67;
  PyObject *__pyx_codeobj__69;
  PyObject *__pyx_codeobj__71;
  PyObject *__pyx_codeobj__72;
  PyObject *__pyx_codeobj__73;
  PyObject *__pyx_codeobj__74;
  PyObject *__pyx_codeobj__75;
  PyObject *__pyx_codeobj__76;
  PyObject *__pyx_codeobj__77;
  PyObject *__pyx_codeobj__78;
  PyObject *__pyx_codeobj__79;
  PyObject *__pyx_codeobj__80;
  PyObject *__pyx_codeobj__81;
  PyObject *__pyx_codeobj__82;
  PyObject *__pyx_codeobj__83;
  PyObject *__pyx_codeobj__84;
  PyObject *__pyx_codeobj__85;
  PyObject *__pyx_codeobj__86;
  PyObject *__pyx_codeobj__87;
  PyObject *__pyx_codeobj__88;
  PyObject *__pyx_codeobj__89;
  PyObject *__pyx_codeobj__90;
  PyObject *__pyx_codeobj__91;
  PyObject *__pyx_codeobj__92;
  PyObject *__pyx_codeobj__93;
  PyObject *__pyx_codeobj__94;
  PyObject *__pyx_codeobj__95;
  PyObject *__pyx_codeobj__96;
  PyObject *__pyx_codeobj__97;
  PyObject *__pyx_codeobj__98;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__100;
  PyObject *__pyx_codeobj__101;
  PyObject *__pyx_codeobj__102;
  PyObject *__pyx_codeobj__103;
  PyObject *__pyx_codeobj__104;
  PyObject *__pyx_codeobj__105;
  PyObject *__pyx_codeobj__106;
  PyObject *__pyx_codeobj__107;
  PyObject *__pyx_codeobj__108;
  PyObject *__pyx_codeobj__109;
  PyObject *__pyx_codeobj__110;
  PyObject *__pyx_codeobj__111;
  PyObject *__pyx_codeobj__112;
  PyObject *__pyx_codeobj__113;
  PyObject *__pyx_codeobj__114;
  PyObject *__pyx_codeobj__115;
  PyObject *__pyx_codeobj__116;
  PyObject *__pyx_codeobj__117;
  PyObject *__pyx_codeobj__118;
  PyObject *__pyx_codeobj__119;
  PyObject *__pyx_codeobj__120;
  PyObject *__pyx_codeobj__121;
  PyObject *__pyx_codeobj__122;
  PyObject *__pyx_codeobj__123;
  PyObject *__pyx_codeobj__124;
  PyObject *__pyx_codeobj__125;
  PyObject *__pyx_codeobj__126;
  PyObject *__pyx_codeobj__127;
  PyObject *__pyx_codeobj__128;
  PyObject *__pyx_codeobj__129;
  PyObject *__pyx_codeobj__130;
  PyObject *__pyx_codeobj__131;
  PyObject *__pyx_codeobj__132;
  PyObject *__pyx_codeobj__133;
  PyObject *__pyx_codeobj__134;
  PyObject *__pyx_codeobj__135;
  PyObject *__pyx_codeobj__136;
  PyObject *__pyx_codeobj__137;
  PyObject *__pyx_codeobj__138;
  PyObject *__pyx_codeobj__139;
  PyObject *__pyx_codeobj__140;
  PyObject *__pyx_codeobj__141;
  PyObject *__pyx_codeobj__142;
  PyObject *__pyx_codeobj__143;
  PyObject *__pyx_codeobj__144;
  PyObject *__pyx_codeobj__146;
  PyObject *__pyx_codeobj__147;
  PyObject *__pyx_codeobj__148;
  PyObject *__pyx_codeobj__149;
  PyObject *__pyx_codeobj__150;
  PyObject *__pyx_codeobj__151;
  PyObject *__pyx_codeobj__152;
  PyObject *__pyx_codeobj__153;
  PyObject *__pyx_codeobj__154;
  PyObject *__pyx_codeobj__155;
  PyObject *__pyx_codeobj__156;
  PyObject *__pyx_codeobj__157;
  PyObject *__pyx_codeobj__158;
  PyObject *__pyx_codeobj__159;
  PyObject *__pyx_codeobj__160;
  PyObject *__pyx_codeobj__161;
  PyObject *__pyx_codeobj__162;
  PyObject *__pyx_codeobj__163;
  PyObject *__pyx_codeobj__164;
  PyObject *__pyx_codeobj__165;
  PyObject *__pyx_codeobj__166;
  PyObject *__pyx_codeobj__167;
  PyObject *__pyx_codeobj__168;
  PyObject *__pyx_codeobj__169;
  PyObject *__pyx_codeobj__170;
  PyObject *__pyx_codeobj__171;
  PyObject *__pyx_codeobj__172;
  PyObject *__pyx_codeobj__173;
  PyObject *__pyx_codeobj__174;
  PyObject *__pyx_codeobj__175;
  PyObject *__pyx_codeobj__176;
  PyObject *__pyx_codeobj__177;
  PyObject *__pyx_codeobj__178;
  PyObject *__pyx_codeobj__179;
  PyObject *__pyx_codeobj__180;
  PyObject *__pyx_codeobj__181;
  PyObject *__pyx_codeobj__182;
  PyObject *__pyx_codeobj__183;
  PyObject *__pyx_codeobj__184;
  PyObject *__pyx_codeobj__185;
  PyObject *__pyx_codeobj__186;
  PyObject *__pyx_codeobj__187;
  PyObject *__pyx_codeobj__188;
  PyObject *__pyx_codeobj__189;
  PyObject *__pyx_codeobj__190;
  PyObject *__pyx_codeobj__191;
  PyObject *__pyx_codeobj__193;
  PyObject *__pyx_codeobj__194;
  PyObject *__pyx_codeobj__195;
  PyObject *__pyx_codeobj__196;
  PyObject *__pyx_codeobj__197;
  PyObject *__pyx_codeobj__198;
  PyObject *__pyx_codeobj__199;
  PyObject *__pyx_codeobj__200;
  PyObject *__pyx_codeobj__201;
  PyObject *__pyx_codeobj__202;
  PyObject *__pyx_codeobj__203;
  PyObject *__pyx_codeobj__204;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4type_type);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4bool_bool);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_7complex_complex);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_5array_array);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyDeviceType);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyDeviceType);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarState);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarState);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarMode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarMode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarFeature);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarFeature);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarIpMode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarIpMode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarScanPattern);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarScanPattern);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxStatus);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxStatus);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyDeviceEvent);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyDeviceEvent);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyTimestampType);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyTimestampType);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyPointDataType);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyPointDataType);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyPointCloudReturnMode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyPointCloudReturnMode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyImuFreq);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyImuFreq);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxSdkVersion);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxSdkVersion);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxRawPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxRawPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxDualExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxImuPoint);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxImuPoint);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarErrorCode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarErrorCode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyHubErrorCode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyHubErrorCode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyErrorMessage);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyErrorMessage);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLivoxEthPacket);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLivoxEthPacket);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyStatusUnion);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyStatusUnion);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyDeviceInfo);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyDeviceInfo);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyBroadcastDeviceInfo);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyBroadcastDeviceInfo);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyConnectedLidarInfo);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyConnectedLidarInfo);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyLidarModeRequestItem);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyLidarModeRequestItem);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyReturnCode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyReturnCode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyDeviceBroadcastCode);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyDeviceBroadcastCode);
  Py_CLEAR(clear_module_state->__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem);
  Py_CLEAR(clear_module_state->__pyx_type_7pylivox_PyRainFogSuppressRequestItem);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0000000000000000);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeviceTypeHub);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeviceTypeLidarAvia);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeviceTypeLidarHorizon);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeviceTypeLidarMid40);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeviceTypeLidarMid70);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeviceTypeLidarTele);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventConnect);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventDisconnect);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventHubConnectionChange);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventStateChange);
  Py_CLEAR(clear_module_state->__pyx_n_s_ImuFreq0Hz);
  Py_CLEAR(clear_module_state->__pyx_n_s_ImuFreq200Hz);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_IndexError);
  Py_CLEAR(clear_module_state->__pyx_n_s_KeyError);
  Py_CLEAR(clear_module_state->__pyx_n_s_LIVOX_SDK_MAJOR_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_LIVOX_SDK_MINOR_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_LIVOX_SDK_PATCH_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarDynamicIpMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarFeatureNone);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarFeatureRainFog);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarModeNormal);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarModePowerSaving);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarModeStandby);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStateError);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStateInit);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStateNormal);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStatePowerSaving);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStateStandBy);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStateUnknown);
  Py_CLEAR(clear_module_state->__pyx_n_s_LidarStaticIpMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_MemoryError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_More_than_one_union_attribute_pa);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_any_of_th);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_13);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_14);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_15);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_16);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_6);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_No_value_specified_for_struct_at_9);
  Py_CLEAR(clear_module_state->__pyx_n_s_NoneRepetitiveScanPattern);
  Py_CLEAR(clear_module_state->__pyx_n_s_OverflowError);
  Py_CLEAR(clear_module_state->__pyx_n_s_PickleError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pickling_of_struct_members_such);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointCloudReturnDual);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointCloudReturnFirst);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointCloudReturnStrongest);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointCloudReturnTriple);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeCartesian);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeDualExtendCartesian);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeDualExtendSpherical);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeExtendCartesian);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeExtendSpherical);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeImu);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeMax);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeSpherical);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeTripleExtendCartesi);
  Py_CLEAR(clear_module_state->__pyx_n_s_PointDataTypeTripleExtendSpheric);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyAddHubToConnect);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyAddLidarToConnect);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyBroadcastDeviceInfo);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyBroadcastDeviceInfo___reduce_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyBroadcastDeviceInfo___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyConnectedLidarInfo);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyConnectedLidarInfo___reduce_cy);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyConnectedLidarInfo___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceBroadcastCode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceBroadcastCode___reduce_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceBroadcastCode___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent_EventConnect);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent_EventDisconnect);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent_EventHubConnection);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent_EventStateChange);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceEvent___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceInfo);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceInfo___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceInfo___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType_DeviceTypeHub);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarAvia);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarHori);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarMid4);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarMid7);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarTele);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDeviceType___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDisableConsoleLogger);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyDisconnectDevice);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyErrorMessage);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyErrorMessage___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyErrorMessage___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyGetConnectedDevices);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyGetLivoxSdkVersion);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyHubErrorCode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyHubErrorCode___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyHubErrorCode___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyHubGetLidarHandle);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyHubStartSampling);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyHubStopSampling);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyImuFreq);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyImuFreq_ImuFreq0Hz);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyImuFreq_ImuFreq200Hz);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyImuFreq___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyImuFreq___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyInit);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarErrorCode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarErrorCode___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarErrorCode___setstate_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarFeature);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarFeature_LidarFeatureNone);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarFeature_LidarFeatureRainF);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarFeature___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarFeature___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarIpMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarIpMode_LidarDynamicIpMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarIpMode_LidarStaticIpMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarIpMode___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarIpMode___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarModeRequestItem);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarModeRequestItem___reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarModeRequestItem___setstat);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarMode_LidarModeNormal);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarMode_LidarModePowerSaving);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarMode_LidarModeStandby);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarMode___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarMode___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarScanPattern);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarScanPattern_NoneRepetitiv);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarScanPattern_RepetitiveSca);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarScanPattern___reduce_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarScanPattern___setstate_cy);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState_LidarStateError);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState_LidarStateInit);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState_LidarStateNormal);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState_LidarStatePowerSavi);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState_LidarStateStandBy);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState_LidarStateUnknown);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLidarState___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxDualExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxDualExtendRawPoint___redu);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxDualExtendRawPoint___sets);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxDualExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxDualExtendSpherPoint___re);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxDualExtendSpherPoint___se);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxEthPacket);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxEthPacket___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxEthPacket___setstate_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxExtendRawPoint___reduce_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxExtendRawPoint___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxExtendSpherPoint___reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxExtendSpherPoint___setsta);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxImuPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxImuPoint___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxImuPoint___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxPoint___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxPoint___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxRawPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxRawPoint___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxRawPoint___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxSdkVersion);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxSdkVersion___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxSdkVersion___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxSpherPoint___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxSpherPoint___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusChannelNotEx);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusFailure);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusHandlerImplN);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusInvalidHandl);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusNotConnected);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusNotEnoughMem);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusNotSupported);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusSendFailed);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusSuccess);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus_StatusTimeout);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxStatus___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxTripleExtendRawPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxTripleExtendRawPoint___re);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxTripleExtendRawPoint___se);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxTripleExtendSpherPoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxTripleExtendSpherPoint_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyLivoxTripleExtendSpherPoint_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode___reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointCloudReturnMode___setstat);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeCar);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeDua);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeDua_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeExt);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeExt_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeImu);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeMax);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeSph);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeTri);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType_PointDataTypeTri_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyPointDataType___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyRainFogSuppressRequestItem);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyRainFogSuppressRequestItem___r);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyRainFogSuppressRequestItem___s);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyReturnCode);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyReturnCode___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyReturnCode___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PySaveLoggerFile);
  Py_CLEAR(clear_module_state->__pyx_n_s_PySetCartesianCoordinate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PySetSphericalCoordinate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyStart);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyStatusUnion);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyStatusUnion___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyStatusUnion___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType_TimestampTypeNoS);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType_TimestampTypePps);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType_TimestampTypePps_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType_TimestampTypePtp);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType_TimestampTypeRsv);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType_TimestampTypeUnk);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyTimestampType___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_PyUninit);
  Py_CLEAR(clear_module_state->__pyx_n_s_RepetitiveScanPattern);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusChannelNotExist);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusFailure);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusHandlerImplNotExist);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusInvalidHandle);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusNotConnected);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusNotEnoughMemory);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusNotSupported);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusSendFailed);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusSuccess);
  Py_CLEAR(clear_module_state->__pyx_n_s_StatusTimeout);
  Py_CLEAR(clear_module_state->__pyx_n_s_TimestampTypeNoSync);
  Py_CLEAR(clear_module_state->__pyx_n_s_TimestampTypePps);
  Py_CLEAR(clear_module_state->__pyx_n_s_TimestampTypePpsGps);
  Py_CLEAR(clear_module_state->__pyx_n_s_TimestampTypePtp);
  Py_CLEAR(clear_module_state->__pyx_n_s_TimestampTypeRsvd);
  Py_CLEAR(clear_module_state->__pyx_n_s_TimestampTypeUnknown);
  Py_CLEAR(clear_module_state->__pyx_n_s_TypeError);
  Py_CLEAR(clear_module_state->__pyx_n_s_ValueError);
  Py_CLEAR(clear_module_state->__pyx_n_s__205);
  Py_CLEAR(clear_module_state->__pyx_kp_u__39);
  Py_CLEAR(clear_module_state->__pyx_n_s__40);
  Py_CLEAR(clear_module_state->__pyx_n_s_acc_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_acc_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_acc_z);
  Py_CLEAR(clear_module_state->__pyx_n_s_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_broadcast_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_cb);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_cmd_port);
  Py_CLEAR(clear_module_state->__pyx_n_s_core);
  Py_CLEAR(clear_module_state->__pyx_n_s_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_port);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_depth);
  Py_CLEAR(clear_module_state->__pyx_n_s_depth1);
  Py_CLEAR(clear_module_state->__pyx_n_s_depth2);
  Py_CLEAR(clear_module_state->__pyx_n_s_depth3);
  Py_CLEAR(clear_module_state->__pyx_n_s_dev_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_device_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_devices);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_dirty_warn);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_encode);
  Py_CLEAR(clear_module_state->__pyx_n_s_enumerate);
  Py_CLEAR(clear_module_state->__pyx_n_s_err_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_error_code);
  Py_CLEAR(clear_module_state->__pyx_kp_s_error_code_lidar_error_code_hub);
  Py_CLEAR(clear_module_state->__pyx_n_s_fan_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_feature);
  Py_CLEAR(clear_module_state->__pyx_n_s_firmware_err);
  Py_CLEAR(clear_module_state->__pyx_n_s_firmware_version);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_getstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_gyro_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_gyro_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_gyro_z);
  Py_CLEAR(clear_module_state->__pyx_n_s_handle);
  Py_CLEAR(clear_module_state->__pyx_n_s_hub_error_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_s_ip);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_kBroadcastCodeSize);
  Py_CLEAR(clear_module_state->__pyx_n_s_kMaxLidarCount);
  Py_CLEAR(clear_module_state->__pyx_n_s_lidar_error_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_lidar_link_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_lidar_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_major);
  Py_CLEAR(clear_module_state->__pyx_n_s_minor);
  Py_CLEAR(clear_module_state->__pyx_n_s_motor_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_new);
  Py_CLEAR(clear_module_state->__pyx_n_s_patch);
  Py_CLEAR(clear_module_state->__pyx_n_s_phi);
  Py_CLEAR(clear_module_state->__pyx_n_s_pickle);
  Py_CLEAR(clear_module_state->__pyx_n_s_pps_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_progress);
  Py_CLEAR(clear_module_state->__pyx_kp_s_progress_status_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_ptp_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_pylivox);
  Py_CLEAR(clear_module_state->__pyx_kp_s_pylivox_pyx);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_PickleError);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_checksum);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_result);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyDeviceEvent);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyDeviceType);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyImuFreq);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyLidarFeature);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyLidarIpMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyLidarMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyLidarScanPatter);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyLidarState);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyLivoxStatus);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyPointCloudRetur);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyPointDataType);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_PyTimestampType);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_reflectivity);
  Py_CLEAR(clear_module_state->__pyx_n_s_reflectivity1);
  Py_CLEAR(clear_module_state->__pyx_n_s_reflectivity2);
  Py_CLEAR(clear_module_state->__pyx_n_s_reflectivity3);
  Py_CLEAR(clear_module_state->__pyx_n_s_reserved);
  Py_CLEAR(clear_module_state->__pyx_n_s_ret_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_rsvd);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_n_s_self_heating);
  Py_CLEAR(clear_module_state->__pyx_n_s_sensor_port);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_size);
  Py_CLEAR(clear_module_state->__pyx_n_s_slot);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_staticmethod);
  Py_CLEAR(clear_module_state->__pyx_n_s_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_status_code);
  Py_CLEAR(clear_module_state->__pyx_kp_s_stringsource);
  Py_CLEAR(clear_module_state->__pyx_n_s_sync_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_system_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag1);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag2);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag3);
  Py_CLEAR(clear_module_state->__pyx_n_s_temp_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_theta);
  Py_CLEAR(clear_module_state->__pyx_n_s_time_sync_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_timestamp);
  Py_CLEAR(clear_module_state->__pyx_n_s_timestamp_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_use_setstate);
  Py_CLEAR(clear_module_state->__pyx_kp_u_utf_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_version);
  Py_CLEAR(clear_module_state->__pyx_n_s_volt_status);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_x1);
  Py_CLEAR(clear_module_state->__pyx_n_s_x2);
  Py_CLEAR(clear_module_state->__pyx_n_s_x3);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_y1);
  Py_CLEAR(clear_module_state->__pyx_n_s_y2);
  Py_CLEAR(clear_module_state->__pyx_n_s_y3);
  Py_CLEAR(clear_module_state->__pyx_n_s_z);
  Py_CLEAR(clear_module_state->__pyx_n_s_z1);
  Py_CLEAR(clear_module_state->__pyx_n_s_z2);
  Py_CLEAR(clear_module_state->__pyx_n_s_z3);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_2);
  Py_CLEAR(clear_module_state->__pyx_int_3);
  Py_CLEAR(clear_module_state->__pyx_int_4);
  Py_CLEAR(clear_module_state->__pyx_int_8);
  Py_CLEAR(clear_module_state->__pyx_int_16);
  Py_CLEAR(clear_module_state->__pyx_int_32);
  Py_CLEAR(clear_module_state->__pyx_int_222419149);
  Py_CLEAR(clear_module_state->__pyx_int_228825662);
  Py_CLEAR(clear_module_state->__pyx_int_238750788);
  Py_CLEAR(clear_module_state->__pyx_k__17);
  Py_CLEAR(clear_module_state->__pyx_k__18);
  Py_CLEAR(clear_module_state->__pyx_k__19);
  Py_CLEAR(clear_module_state->__pyx_k__20);
  Py_CLEAR(clear_module_state->__pyx_k__23);
  Py_CLEAR(clear_module_state->__pyx_k__24);
  Py_CLEAR(clear_module_state->__pyx_k__25);
  Py_CLEAR(clear_module_state->__pyx_k__26);
  Py_CLEAR(clear_module_state->__pyx_k__27);
  Py_CLEAR(clear_module_state->__pyx_k__28);
  Py_CLEAR(clear_module_state->__pyx_k__31);
  Py_CLEAR(clear_module_state->__pyx_k__32);
  Py_CLEAR(clear_module_state->__pyx_k__33);
  Py_CLEAR(clear_module_state->__pyx_k__34);
  Py_CLEAR(clear_module_state->__pyx_k__35);
  Py_CLEAR(clear_module_state->__pyx_k__36);
  Py_CLEAR(clear_module_state->__pyx_k__37);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__3);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__9);
  Py_CLEAR(clear_module_state->__pyx_slice__21);
  Py_CLEAR(clear_module_state->__pyx_slice__22);
  Py_CLEAR(clear_module_state->__pyx_slice__29);
  Py_CLEAR(clear_module_state->__pyx_slice__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__10);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__38);
  Py_CLEAR(clear_module_state->__pyx_tuple__46);
  Py_CLEAR(clear_module_state->__pyx_tuple__48);
  Py_CLEAR(clear_module_state->__pyx_tuple__51);
  Py_CLEAR(clear_module_state->__pyx_tuple__53);
  Py_CLEAR(clear_module_state->__pyx_tuple__57);
  Py_CLEAR(clear_module_state->__pyx_tuple__60);
  Py_CLEAR(clear_module_state->__pyx_tuple__68);
  Py_CLEAR(clear_module_state->__pyx_tuple__70);
  Py_CLEAR(clear_module_state->__pyx_tuple__145);
  Py_CLEAR(clear_module_state->__pyx_tuple__192);
  Py_CLEAR(clear_module_state->__pyx_codeobj__41);
  Py_CLEAR(clear_module_state->__pyx_codeobj__42);
  Py_CLEAR(clear_module_state->__pyx_codeobj__43);
  Py_CLEAR(clear_module_state->__pyx_codeobj__44);
  Py_CLEAR(clear_module_state->__pyx_codeobj__45);
  Py_CLEAR(clear_module_state->__pyx_codeobj__47);
  Py_CLEAR(clear_module_state->__pyx_codeobj__49);
  Py_CLEAR(clear_module_state->__pyx_codeobj__50);
  Py_CLEAR(clear_module_state->__pyx_codeobj__52);
  Py_CLEAR(clear_module_state->__pyx_codeobj__54);
  Py_CLEAR(clear_module_state->__pyx_codeobj__55);
  Py_CLEAR(clear_module_state->__pyx_codeobj__56);
  Py_CLEAR(clear_module_state->__pyx_codeobj__58);
  Py_CLEAR(clear_module_state->__pyx_codeobj__59);
  Py_CLEAR(clear_module_state->__pyx_codeobj__61);
  Py_CLEAR(clear_module_state->__pyx_codeobj__62);
  Py_CLEAR(clear_module_state->__pyx_codeobj__63);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__65);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__67);
  Py_CLEAR(clear_module_state->__pyx_codeobj__69);
  Py_CLEAR(clear_module_state->__pyx_codeobj__71);
  Py_CLEAR(clear_module_state->__pyx_codeobj__72);
  Py_CLEAR(clear_module_state->__pyx_codeobj__73);
  Py_CLEAR(clear_module_state->__pyx_codeobj__74);
  Py_CLEAR(clear_module_state->__pyx_codeobj__75);
  Py_CLEAR(clear_module_state->__pyx_codeobj__76);
  Py_CLEAR(clear_module_state->__pyx_codeobj__77);
  Py_CLEAR(clear_module_state->__pyx_codeobj__78);
  Py_CLEAR(clear_module_state->__pyx_codeobj__79);
  Py_CLEAR(clear_module_state->__pyx_codeobj__80);
  Py_CLEAR(clear_module_state->__pyx_codeobj__81);
  Py_CLEAR(clear_module_state->__pyx_codeobj__82);
  Py_CLEAR(clear_module_state->__pyx_codeobj__83);
  Py_CLEAR(clear_module_state->__pyx_codeobj__84);
  Py_CLEAR(clear_module_state->__pyx_codeobj__85);
  Py_CLEAR(clear_module_state->__pyx_codeobj__86);
  Py_CLEAR(clear_module_state->__pyx_codeobj__87);
  Py_CLEAR(clear_module_state->__pyx_codeobj__88);
  Py_CLEAR(clear_module_state->__pyx_codeobj__89);
  Py_CLEAR(clear_module_state->__pyx_codeobj__90);
  Py_CLEAR(clear_module_state->__pyx_codeobj__91);
  Py_CLEAR(clear_module_state->__pyx_codeobj__92);
  Py_CLEAR(clear_module_state->__pyx_codeobj__93);
  Py_CLEAR(clear_module_state->__pyx_codeobj__94);
  Py_CLEAR(clear_module_state->__pyx_codeobj__95);
  Py_CLEAR(clear_module_state->__pyx_codeobj__96);
  Py_CLEAR(clear_module_state->__pyx_codeobj__97);
  Py_CLEAR(clear_module_state->__pyx_codeobj__98);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__100);
  Py_CLEAR(clear_module_state->__pyx_codeobj__101);
  Py_CLEAR(clear_module_state->__pyx_codeobj__102);
  Py_CLEAR(clear_module_state->__pyx_codeobj__103);
  Py_CLEAR(clear_module_state->__pyx_codeobj__104);
  Py_CLEAR(clear_module_state->__pyx_codeobj__105);
  Py_CLEAR(clear_module_state->__pyx_codeobj__106);
  Py_CLEAR(clear_module_state->__pyx_codeobj__107);
  Py_CLEAR(clear_module_state->__pyx_codeobj__108);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  Py_CLEAR(clear_module_state->__pyx_codeobj__110);
  Py_CLEAR(clear_module_state->__pyx_codeobj__111);
  Py_CLEAR(clear_module_state->__pyx_codeobj__112);
  Py_CLEAR(clear_module_state->__pyx_codeobj__113);
  Py_CLEAR(clear_module_state->__pyx_codeobj__114);
  Py_CLEAR(clear_module_state->__pyx_codeobj__115);
  Py_CLEAR(clear_module_state->__pyx_codeobj__116);
  Py_CLEAR(clear_module_state->__pyx_codeobj__117);
  Py_CLEAR(clear_module_state->__pyx_codeobj__118);
  Py_CLEAR(clear_module_state->__pyx_codeobj__119);
  Py_CLEAR(clear_module_state->__pyx_codeobj__120);
  Py_CLEAR(clear_module_state->__pyx_codeobj__121);
  Py_CLEAR(clear_module_state->__pyx_codeobj__122);
  Py_CLEAR(clear_module_state->__pyx_codeobj__123);
  Py_CLEAR(clear_module_state->__pyx_codeobj__124);
  Py_CLEAR(clear_module_state->__pyx_codeobj__125);
  Py_CLEAR(clear_module_state->__pyx_codeobj__126);
  Py_CLEAR(clear_module_state->__pyx_codeobj__127);
  Py_CLEAR(clear_module_state->__pyx_codeobj__128);
  Py_CLEAR(clear_module_state->__pyx_codeobj__129);
  Py_CLEAR(clear_module_state->__pyx_codeobj__130);
  Py_CLEAR(clear_module_state->__pyx_codeobj__131);
  Py_CLEAR(clear_module_state->__pyx_codeobj__132);
  Py_CLEAR(clear_module_state->__pyx_codeobj__133);
  Py_CLEAR(clear_module_state->__pyx_codeobj__134);
  Py_CLEAR(clear_module_state->__pyx_codeobj__135);
  Py_CLEAR(clear_module_state->__pyx_codeobj__136);
  Py_CLEAR(clear_module_state->__pyx_codeobj__137);
  Py_CLEAR(clear_module_state->__pyx_codeobj__138);
  Py_CLEAR(clear_module_state->__pyx_codeobj__139);
  Py_CLEAR(clear_module_state->__pyx_codeobj__140);
  Py_CLEAR(clear_module_state->__pyx_codeobj__141);
  Py_CLEAR(clear_module_state->__pyx_codeobj__142);
  Py_CLEAR(clear_module_state->__pyx_codeobj__143);
  Py_CLEAR(clear_module_state->__pyx_codeobj__144);
  Py_CLEAR(clear_module_state->__pyx_codeobj__146);
  Py_CLEAR(clear_module_state->__pyx_codeobj__147);
  Py_CLEAR(clear_module_state->__pyx_codeobj__148);
  Py_CLEAR(clear_module_state->__pyx_codeobj__149);
  Py_CLEAR(clear_module_state->__pyx_codeobj__150);
  Py_CLEAR(clear_module_state->__pyx_codeobj__151);
  Py_CLEAR(clear_module_state->__pyx_codeobj__152);
  Py_CLEAR(clear_module_state->__pyx_codeobj__153);
  Py_CLEAR(clear_module_state->__pyx_codeobj__154);
  Py_CLEAR(clear_module_state->__pyx_codeobj__155);
  Py_CLEAR(clear_module_state->__pyx_codeobj__156);
  Py_CLEAR(clear_module_state->__pyx_codeobj__157);
  Py_CLEAR(clear_module_state->__pyx_codeobj__158);
  Py_CLEAR(clear_module_state->__pyx_codeobj__159);
  Py_CLEAR(clear_module_state->__pyx_codeobj__160);
  Py_CLEAR(clear_module_state->__pyx_codeobj__161);
  Py_CLEAR(clear_module_state->__pyx_codeobj__162);
  Py_CLEAR(clear_module_state->__pyx_codeobj__163);
  Py_CLEAR(clear_module_state->__pyx_codeobj__164);
  Py_CLEAR(clear_module_state->__pyx_codeobj__165);
  Py_CLEAR(clear_module_state->__pyx_codeobj__166);
  Py_CLEAR(clear_module_state->__pyx_codeobj__167);
  Py_CLEAR(clear_module_state->__pyx_codeobj__168);
  Py_CLEAR(clear_module_state->__pyx_codeobj__169);
  Py_CLEAR(clear_module_state->__pyx_codeobj__170);
  Py_CLEAR(clear_module_state->__pyx_codeobj__171);
  Py_CLEAR(clear_module_state->__pyx_codeobj__172);
  Py_CLEAR(clear_module_state->__pyx_codeobj__173);
  Py_CLEAR(clear_module_state->__pyx_codeobj__174);
  Py_CLEAR(clear_module_state->__pyx_codeobj__175);
  Py_CLEAR(clear_module_state->__pyx_codeobj__176);
  Py_CLEAR(clear_module_state->__pyx_codeobj__177);
  Py_CLEAR(clear_module_state->__pyx_codeobj__178);
  Py_CLEAR(clear_module_state->__pyx_codeobj__179);
  Py_CLEAR(clear_module_state->__pyx_codeobj__180);
  Py_CLEAR(clear_module_state->__pyx_codeobj__181);
  Py_CLEAR(clear_module_state->__pyx_codeobj__182);
  Py_CLEAR(clear_module_state->__pyx_codeobj__183);
  Py_CLEAR(clear_module_state->__pyx_codeobj__184);
  Py_CLEAR(clear_module_state->__pyx_codeobj__185);
  Py_CLEAR(clear_module_state->__pyx_codeobj__186);
  Py_CLEAR(clear_module_state->__pyx_codeobj__187);
  Py_CLEAR(clear_module_state->__pyx_codeobj__188);
  Py_CLEAR(clear_module_state->__pyx_codeobj__189);
  Py_CLEAR(clear_module_state->__pyx_codeobj__190);
  Py_CLEAR(clear_module_state->__pyx_codeobj__191);
  Py_CLEAR(clear_module_state->__pyx_codeobj__193);
  Py_CLEAR(clear_module_state->__pyx_codeobj__194);
  Py_CLEAR(clear_module_state->__pyx_codeobj__195);
  Py_CLEAR(clear_module_state->__pyx_codeobj__196);
  Py_CLEAR(clear_module_state->__pyx_codeobj__197);
  Py_CLEAR(clear_module_state->__pyx_codeobj__198);
  Py_CLEAR(clear_module_state->__pyx_codeobj__199);
  Py_CLEAR(clear_module_state->__pyx_codeobj__200);
  Py_CLEAR(clear_module_state->__pyx_codeobj__201);
  Py_CLEAR(clear_module_state->__pyx_codeobj__202);
  Py_CLEAR(clear_module_state->__pyx_codeobj__203);
  Py_CLEAR(clear_module_state->__pyx_codeobj__204);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4type_type);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4bool_bool);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_7complex_complex);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_5array_array);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyDeviceType);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyDeviceType);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarState);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarState);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarMode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarMode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarFeature);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarFeature);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarIpMode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarIpMode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarScanPattern);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarScanPattern);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxStatus);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxStatus);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyDeviceEvent);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyDeviceEvent);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyTimestampType);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyTimestampType);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyPointDataType);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyPointDataType);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyPointCloudReturnMode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyPointCloudReturnMode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyImuFreq);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyImuFreq);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxSdkVersion);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxSdkVersion);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxRawPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxRawPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxDualExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxImuPoint);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxImuPoint);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarErrorCode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarErrorCode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyHubErrorCode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyHubErrorCode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyErrorMessage);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyErrorMessage);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLivoxEthPacket);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLivoxEthPacket);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyStatusUnion);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyStatusUnion);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyDeviceInfo);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyDeviceInfo);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyBroadcastDeviceInfo);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyBroadcastDeviceInfo);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyConnectedLidarInfo);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyConnectedLidarInfo);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyLidarModeRequestItem);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyLidarModeRequestItem);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyReturnCode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyReturnCode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyDeviceBroadcastCode);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyDeviceBroadcastCode);
  Py_VISIT(traverse_module_state->__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem);
  Py_VISIT(traverse_module_state->__pyx_type_7pylivox_PyRainFogSuppressRequestItem);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0000000000000000);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeviceTypeHub);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeviceTypeLidarAvia);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeviceTypeLidarHorizon);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeviceTypeLidarMid40);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeviceTypeLidarMid70);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeviceTypeLidarTele);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventConnect);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventDisconnect);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventHubConnectionChange);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventStateChange);
  Py_VISIT(traverse_module_state->__pyx_n_s_ImuFreq0Hz);
  Py_VISIT(traverse_module_state->__pyx_n_s_ImuFreq200Hz);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_IndexError);
  Py_VISIT(traverse_module_state->__pyx_n_s_KeyError);
  Py_VISIT(traverse_module_state->__pyx_n_s_LIVOX_SDK_MAJOR_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_LIVOX_SDK_MINOR_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_LIVOX_SDK_PATCH_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarDynamicIpMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarFeatureNone);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarFeatureRainFog);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarModeNormal);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarModePowerSaving);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarModeStandby);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStateError);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStateInit);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStateNormal);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStatePowerSaving);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStateStandBy);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStateUnknown);
  Py_VISIT(traverse_module_state->__pyx_n_s_LidarStaticIpMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_MemoryError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_More_than_one_union_attribute_pa);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_any_of_th);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_13);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_14);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_15);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_16);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_6);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_No_value_specified_for_struct_at_9);
  Py_VISIT(traverse_module_state->__pyx_n_s_NoneRepetitiveScanPattern);
  Py_VISIT(traverse_module_state->__pyx_n_s_OverflowError);
  Py_VISIT(traverse_module_state->__pyx_n_s_PickleError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pickling_of_struct_members_such);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointCloudReturnDual);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointCloudReturnFirst);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointCloudReturnStrongest);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointCloudReturnTriple);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeCartesian);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeDualExtendCartesian);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeDualExtendSpherical);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeExtendCartesian);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeExtendSpherical);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeImu);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeMax);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeSpherical);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeTripleExtendCartesi);
  Py_VISIT(traverse_module_state->__pyx_n_s_PointDataTypeTripleExtendSpheric);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyAddHubToConnect);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyAddLidarToConnect);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyBroadcastDeviceInfo);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyBroadcastDeviceInfo___reduce_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyBroadcastDeviceInfo___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyConnectedLidarInfo);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyConnectedLidarInfo___reduce_cy);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyConnectedLidarInfo___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceBroadcastCode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceBroadcastCode___reduce_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceBroadcastCode___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent_EventConnect);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent_EventDisconnect);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent_EventHubConnection);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent_EventStateChange);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceEvent___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceInfo);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceInfo___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceInfo___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType_DeviceTypeHub);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarAvia);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarHori);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarMid4);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarMid7);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType_DeviceTypeLidarTele);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDeviceType___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDisableConsoleLogger);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyDisconnectDevice);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyErrorMessage);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyErrorMessage___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyErrorMessage___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyGetConnectedDevices);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyGetLivoxSdkVersion);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyHubErrorCode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyHubErrorCode___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyHubErrorCode___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyHubGetLidarHandle);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyHubStartSampling);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyHubStopSampling);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyImuFreq);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyImuFreq_ImuFreq0Hz);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyImuFreq_ImuFreq200Hz);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyImuFreq___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyImuFreq___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyInit);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarErrorCode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarErrorCode___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarErrorCode___setstate_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarFeature);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarFeature_LidarFeatureNone);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarFeature_LidarFeatureRainF);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarFeature___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarFeature___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarIpMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarIpMode_LidarDynamicIpMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarIpMode_LidarStaticIpMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarIpMode___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarIpMode___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarModeRequestItem);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarModeRequestItem___reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarModeRequestItem___setstat);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarMode_LidarModeNormal);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarMode_LidarModePowerSaving);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarMode_LidarModeStandby);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarMode___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarMode___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarScanPattern);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarScanPattern_NoneRepetitiv);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarScanPattern_RepetitiveSca);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarScanPattern___reduce_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarScanPattern___setstate_cy);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState_LidarStateError);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState_LidarStateInit);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState_LidarStateNormal);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState_LidarStatePowerSavi);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState_LidarStateStandBy);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState_LidarStateUnknown);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLidarState___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxDualExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxDualExtendRawPoint___redu);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxDualExtendRawPoint___sets);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxDualExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxDualExtendSpherPoint___re);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxDualExtendSpherPoint___se);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxEthPacket);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxEthPacket___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxEthPacket___setstate_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxExtendRawPoint___reduce_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxExtendRawPoint___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxExtendSpherPoint___reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxExtendSpherPoint___setsta);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxImuPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxImuPoint___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxImuPoint___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxPoint___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxPoint___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxRawPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxRawPoint___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxRawPoint___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxSdkVersion);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxSdkVersion___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxSdkVersion___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxSpherPoint___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxSpherPoint___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusChannelNotEx);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusFailure);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusHandlerImplN);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusInvalidHandl);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusNotConnected);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusNotEnoughMem);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusNotSupported);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusSendFailed);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusSuccess);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus_StatusTimeout);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxStatus___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxTripleExtendRawPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxTripleExtendRawPoint___re);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxTripleExtendRawPoint___se);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxTripleExtendSpherPoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxTripleExtendSpherPoint_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyLivoxTripleExtendSpherPoint_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode_PointClou_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode___reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointCloudReturnMode___setstat);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeCar);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeDua);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeDua_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeExt);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeExt_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeImu);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeMax);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeSph);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeTri);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType_PointDataTypeTri_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyPointDataType___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyRainFogSuppressRequestItem);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyRainFogSuppressRequestItem___r);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyRainFogSuppressRequestItem___s);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyReturnCode);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyReturnCode___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyReturnCode___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PySaveLoggerFile);
  Py_VISIT(traverse_module_state->__pyx_n_s_PySetCartesianCoordinate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PySetSphericalCoordinate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyStart);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyStatusUnion);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyStatusUnion___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyStatusUnion___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType_TimestampTypeNoS);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType_TimestampTypePps);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType_TimestampTypePps_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType_TimestampTypePtp);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType_TimestampTypeRsv);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType_TimestampTypeUnk);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyTimestampType___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_PyUninit);
  Py_VISIT(traverse_module_state->__pyx_n_s_RepetitiveScanPattern);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusChannelNotExist);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusFailure);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusHandlerImplNotExist);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusInvalidHandle);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusNotConnected);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusNotEnoughMemory);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusNotSupported);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusSendFailed);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusSuccess);
  Py_VISIT(traverse_module_state->__pyx_n_s_StatusTimeout);
  Py_VISIT(traverse_module_state->__pyx_n_s_TimestampTypeNoSync);
  Py_VISIT(traverse_module_state->__pyx_n_s_TimestampTypePps);
  Py_VISIT(traverse_module_state->__pyx_n_s_TimestampTypePpsGps);
  Py_VISIT(traverse_module_state->__pyx_n_s_TimestampTypePtp);
  Py_VISIT(traverse_module_state->__pyx_n_s_TimestampTypeRsvd);
  Py_VISIT(traverse_module_state->__pyx_n_s_TimestampTypeUnknown);
  Py_VISIT(traverse_module_state->__pyx_n_s_TypeError);
  Py_VISIT(traverse_module_state->__pyx_n_s_ValueError);
  Py_VISIT(traverse_module_state->__pyx_n_s__205);
  Py_VISIT(traverse_module_state->__pyx_kp_u__39);
  Py_VISIT(traverse_module_state->__pyx_n_s__40);
  Py_VISIT(traverse_module_state->__pyx_n_s_acc_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_acc_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_acc_z);
  Py_VISIT(traverse_module_state->__pyx_n_s_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_broadcast_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_cb);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_cmd_port);
  Py_VISIT(traverse_module_state->__pyx_n_s_core);
  Py_VISIT(traverse_module_state->__pyx_n_s_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_port);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_depth);
  Py_VISIT(traverse_module_state->__pyx_n_s_depth1);
  Py_VISIT(traverse_module_state->__pyx_n_s_depth2);
  Py_VISIT(traverse_module_state->__pyx_n_s_depth3);
  Py_VISIT(traverse_module_state->__pyx_n_s_dev_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_device_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_devices);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_dirty_warn);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_encode);
  Py_VISIT(traverse_module_state->__pyx_n_s_enumerate);
  Py_VISIT(traverse_module_state->__pyx_n_s_err_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_error_code);
  Py_VISIT(traverse_module_state->__pyx_kp_s_error_code_lidar_error_code_hub);
  Py_VISIT(traverse_module_state->__pyx_n_s_fan_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_feature);
  Py_VISIT(traverse_module_state->__pyx_n_s_firmware_err);
  Py_VISIT(traverse_module_state->__pyx_n_s_firmware_version);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_getstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_gyro_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_gyro_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_gyro_z);
  Py_VISIT(traverse_module_state->__pyx_n_s_handle);
  Py_VISIT(traverse_module_state->__pyx_n_s_hub_error_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_s_ip);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_kBroadcastCodeSize);
  Py_VISIT(traverse_module_state->__pyx_n_s_kMaxLidarCount);
  Py_VISIT(traverse_module_state->__pyx_n_s_lidar_error_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_lidar_link_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_lidar_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_major);
  Py_VISIT(traverse_module_state->__pyx_n_s_minor);
  Py_VISIT(traverse_module_state->__pyx_n_s_motor_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_new);
  Py_VISIT(traverse_module_state->__pyx_n_s_patch);
  Py_VISIT(traverse_module_state->__pyx_n_s_phi);
  Py_VISIT(traverse_module_state->__pyx_n_s_pickle);
  Py_VISIT(traverse_module_state->__pyx_n_s_pps_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_progress);
  Py_VISIT(traverse_module_state->__pyx_kp_s_progress_status_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_ptp_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_pylivox);
  Py_VISIT(traverse_module_state->__pyx_kp_s_pylivox_pyx);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_PickleError);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_checksum);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_result);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyDeviceEvent);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyDeviceType);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyImuFreq);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyLidarFeature);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyLidarIpMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyLidarMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyLidarScanPatter);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyLidarState);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyLivoxStatus);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyPointCloudRetur);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyPointDataType);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_PyTimestampType);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_reflectivity);
  Py_VISIT(traverse_module_state->__pyx_n_s_reflectivity1);
  Py_VISIT(traverse_module_state->__pyx_n_s_reflectivity2);
  Py_VISIT(traverse_module_state->__pyx_n_s_reflectivity3);
  Py_VISIT(traverse_module_state->__pyx_n_s_reserved);
  Py_VISIT(traverse_module_state->__pyx_n_s_ret_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_rsvd);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_n_s_self_heating);
  Py_VISIT(traverse_module_state->__pyx_n_s_sensor_port);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_size);
  Py_VISIT(traverse_module_state->__pyx_n_s_slot);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_staticmethod);
  Py_VISIT(traverse_module_state->__pyx_n_s_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_status_code);
  Py_VISIT(traverse_module_state->__pyx_kp_s_stringsource);
  Py_VISIT(traverse_module_state->__pyx_n_s_sync_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_system_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag1);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag2);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag3);
  Py_VISIT(traverse_module_state->__pyx_n_s_temp_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_theta);
  Py_VISIT(traverse_module_state->__pyx_n_s_time_sync_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_timestamp);
  Py_VISIT(traverse_module_state->__pyx_n_s_timestamp_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_use_setstate);
  Py_VISIT(traverse_module_state->__pyx_kp_u_utf_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_version);
  Py_VISIT(traverse_module_state->__pyx_n_s_volt_status);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_x1);
  Py_VISIT(traverse_module_state->__pyx_n_s_x2);
  Py_VISIT(traverse_module_state->__pyx_n_s_x3);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_y1);
  Py_VISIT(traverse_module_state->__pyx_n_s_y2);
  Py_VISIT(traverse_module_state->__pyx_n_s_y3);
  Py_VISIT(traverse_module_state->__pyx_n_s_z);
  Py_VISIT(traverse_module_state->__pyx_n_s_z1);
  Py_VISIT(traverse_module_state->__pyx_n_s_z2);
  Py_VISIT(traverse_module_state->__pyx_n_s_z3);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_2);
  Py_VISIT(traverse_module_state->__pyx_int_3);
  Py_VISIT(traverse_module_state->__pyx_int_4);
  Py_VISIT(traverse_module_state->__pyx_int_8);
  Py_VISIT(traverse_module_state->__pyx_int_16);
  Py_VISIT(traverse_module_state->__pyx_int_32);
  Py_VISIT(traverse_module_state->__pyx_int_222419149);
  Py_VISIT(traverse_module_state->__pyx_int_228825662);
  Py_VISIT(traverse_module_state->__pyx_int_238750788);
  Py_VISIT(traverse_module_state->__pyx_k__17);
  Py_VISIT(traverse_module_state->__pyx_k__18);
  Py_VISIT(traverse_module_state->__pyx_k__19);
  Py_VISIT(traverse_module_state->__pyx_k__20);
  Py_VISIT(traverse_module_state->__pyx_k__23);
  Py_VISIT(traverse_module_state->__pyx_k__24);
  Py_VISIT(traverse_module_state->__pyx_k__25);
  Py_VISIT(traverse_module_state->__pyx_k__26);
  Py_VISIT(traverse_module_state->__pyx_k__27);
  Py_VISIT(traverse_module_state->__pyx_k__28);
  Py_VISIT(traverse_module_state->__pyx_k__31);
  Py_VISIT(traverse_module_state->__pyx_k__32);
  Py_VISIT(traverse_module_state->__pyx_k__33);
  Py_VISIT(traverse_module_state->__pyx_k__34);
  Py_VISIT(traverse_module_state->__pyx_k__35);
  Py_VISIT(traverse_module_state->__pyx_k__36);
  Py_VISIT(traverse_module_state->__pyx_k__37);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__3);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__9);
  Py_VISIT(traverse_module_state->__pyx_slice__21);
  Py_VISIT(traverse_module_state->__pyx_slice__22);
  Py_VISIT(traverse_module_state->__pyx_slice__29);
  Py_VISIT(traverse_module_state->__pyx_slice__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__10);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__38);
  Py_VISIT(traverse_module_state->__pyx_tuple__46);
  Py_VISIT(traverse_module_state->__pyx_tuple__48);
  Py_VISIT(traverse_module_state->__pyx_tuple__51);
  Py_VISIT(traverse_module_state->__pyx_tuple__53);
  Py_VISIT(traverse_module_state->__pyx_tuple__57);
  Py_VISIT(traverse_module_state->__pyx_tuple__60);
  Py_VISIT(traverse_module_state->__pyx_tuple__68);
  Py_VISIT(traverse_module_state->__pyx_tuple__70);
  Py_VISIT(traverse_module_state->__pyx_tuple__145);
  Py_VISIT(traverse_module_state->__pyx_tuple__192);
  Py_VISIT(traverse_module_state->__pyx_codeobj__41);
  Py_VISIT(traverse_module_state->__pyx_codeobj__42);
  Py_VISIT(traverse_module_state->__pyx_codeobj__43);
  Py_VISIT(traverse_module_state->__pyx_codeobj__44);
  Py_VISIT(traverse_module_state->__pyx_codeobj__45);
  Py_VISIT(traverse_module_state->__pyx_codeobj__47);
  Py_VISIT(traverse_module_state->__pyx_codeobj__49);
  Py_VISIT(traverse_module_state->__pyx_codeobj__50);
  Py_VISIT(traverse_module_state->__pyx_codeobj__52);
  Py_VISIT(traverse_module_state->__pyx_codeobj__54);
  Py_VISIT(traverse_module_state->__pyx_codeobj__55);
  Py_VISIT(traverse_module_state->__pyx_codeobj__56);
  Py_VISIT(traverse_module_state->__pyx_codeobj__58);
  Py_VISIT(traverse_module_state->__pyx_codeobj__59);
  Py_VISIT(traverse_module_state->__pyx_codeobj__61);
  Py_VISIT(traverse_module_state->__pyx_codeobj__62);
  Py_VISIT(traverse_module_state->__pyx_codeobj__63);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__65);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__67);
  Py_VISIT(traverse_module_state->__pyx_codeobj__69);
  Py_VISIT(traverse_module_state->__pyx_codeobj__71);
  Py_VISIT(traverse_module_state->__pyx_codeobj__72);
  Py_VISIT(traverse_module_state->__pyx_codeobj__73);
  Py_VISIT(traverse_module_state->__pyx_codeobj__74);
  Py_VISIT(traverse_module_state->__pyx_codeobj__75);
  Py_VISIT(traverse_module_state->__pyx_codeobj__76);
  Py_VISIT(traverse_module_state->__pyx_codeobj__77);
  Py_VISIT(traverse_module_state->__pyx_codeobj__78);
  Py_VISIT(traverse_module_state->__pyx_codeobj__79);
  Py_VISIT(traverse_module_state->__pyx_codeobj__80);
  Py_VISIT(traverse_module_state->__pyx_codeobj__81);
  Py_VISIT(traverse_module_state->__pyx_codeobj__82);
  Py_VISIT(traverse_module_state->__pyx_codeobj__83);
  Py_VISIT(traverse_module_state->__pyx_codeobj__84);
  Py_VISIT(traverse_module_state->__pyx_codeobj__85);
  Py_VISIT(traverse_module_state->__pyx_codeobj__86);
  Py_VISIT(traverse_module_state->__pyx_codeobj__87);
  Py_VISIT(traverse_module_state->__pyx_codeobj__88);
  Py_VISIT(traverse_module_state->__pyx_codeobj__89);
  Py_VISIT(traverse_module_state->__pyx_codeobj__90);
  Py_VISIT(traverse_module_state->__pyx_codeobj__91);
  Py_VISIT(traverse_module_state->__pyx_codeobj__92);
  Py_VISIT(traverse_module_state->__pyx_codeobj__93);
  Py_VISIT(traverse_module_state->__pyx_codeobj__94);
  Py_VISIT(traverse_module_state->__pyx_codeobj__95);
  Py_VISIT(traverse_module_state->__pyx_codeobj__96);
  Py_VISIT(traverse_module_state->__pyx_codeobj__97);
  Py_VISIT(traverse_module_state->__pyx_codeobj__98);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__100);
  Py_VISIT(traverse_module_state->__pyx_codeobj__101);
  Py_VISIT(traverse_module_state->__pyx_codeobj__102);
  Py_VISIT(traverse_module_state->__pyx_codeobj__103);
  Py_VISIT(traverse_module_state->__pyx_codeobj__104);
  Py_VISIT(traverse_module_state->__pyx_codeobj__105);
  Py_VISIT(traverse_module_state->__pyx_codeobj__106);
  Py_VISIT(traverse_module_state->__pyx_codeobj__107);
  Py_VISIT(traverse_module_state->__pyx_codeobj__108);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  Py_VISIT(traverse_module_state->__pyx_codeobj__110);
  Py_VISIT(traverse_module_state->__pyx_codeobj__111);
  Py_VISIT(traverse_module_state->__pyx_codeobj__112);
  Py_VISIT(traverse_module_state->__pyx_codeobj__113);
  Py_VISIT(traverse_module_state->__pyx_codeobj__114);
  Py_VISIT(traverse_module_state->__pyx_codeobj__115);
  Py_VISIT(traverse_module_state->__pyx_codeobj__116);
  Py_VISIT(traverse_module_state->__pyx_codeobj__117);
  Py_VISIT(traverse_module_state->__pyx_codeobj__118);
  Py_VISIT(traverse_module_state->__pyx_codeobj__119);
  Py_VISIT(traverse_module_state->__pyx_codeobj__120);
  Py_VISIT(traverse_module_state->__pyx_codeobj__121);
  Py_VISIT(traverse_module_state->__pyx_codeobj__122);
  Py_VISIT(traverse_module_state->__pyx_codeobj__123);
  Py_VISIT(traverse_module_state->__pyx_codeobj__124);
  Py_VISIT(traverse_module_state->__pyx_codeobj__125);
  Py_VISIT(traverse_module_state->__pyx_codeobj__126);
  Py_VISIT(traverse_module_state->__pyx_codeobj__127);
  Py_VISIT(traverse_module_state->__pyx_codeobj__128);
  Py_VISIT(traverse_module_state->__pyx_codeobj__129);
  Py_VISIT(traverse_module_state->__pyx_codeobj__130);
  Py_VISIT(traverse_module_state->__pyx_codeobj__131);
  Py_VISIT(traverse_module_state->__pyx_codeobj__132);
  Py_VISIT(traverse_module_state->__pyx_codeobj__133);
  Py_VISIT(traverse_module_state->__pyx_codeobj__134);
  Py_VISIT(traverse_module_state->__pyx_codeobj__135);
  Py_VISIT(traverse_module_state->__pyx_codeobj__136);
  Py_VISIT(traverse_module_state->__pyx_codeobj__137);
  Py_VISIT(traverse_module_state->__pyx_codeobj__138);
  Py_VISIT(traverse_module_state->__pyx_codeobj__139);
  Py_VISIT(traverse_module_state->__pyx_codeobj__140);
  Py_VISIT(traverse_module_state->__pyx_codeobj__141);
  Py_VISIT(traverse_module_state->__pyx_codeobj__142);
  Py_VISIT(traverse_module_state->__pyx_codeobj__143);
  Py_VISIT(traverse_module_state->__pyx_codeobj__144);
  Py_VISIT(traverse_module_state->__pyx_codeobj__146);
  Py_VISIT(traverse_module_state->__pyx_codeobj__147);
  Py_VISIT(traverse_module_state->__pyx_codeobj__148);
  Py_VISIT(traverse_module_state->__pyx_codeobj__149);
  Py_VISIT(traverse_module_state->__pyx_codeobj__150);
  Py_VISIT(traverse_module_state->__pyx_codeobj__151);
  Py_VISIT(traverse_module_state->__pyx_codeobj__152);
  Py_VISIT(traverse_module_state->__pyx_codeobj__153);
  Py_VISIT(traverse_module_state->__pyx_codeobj__154);
  Py_VISIT(traverse_module_state->__pyx_codeobj__155);
  Py_VISIT(traverse_module_state->__pyx_codeobj__156);
  Py_VISIT(traverse_module_state->__pyx_codeobj__157);
  Py_VISIT(traverse_module_state->__pyx_codeobj__158);
  Py_VISIT(traverse_module_state->__pyx_codeobj__159);
  Py_VISIT(traverse_module_state->__pyx_codeobj__160);
  Py_VISIT(traverse_module_state->__pyx_codeobj__161);
  Py_VISIT(traverse_module_state->__pyx_codeobj__162);
  Py_VISIT(traverse_module_state->__pyx_codeobj__163);
  Py_VISIT(traverse_module_state->__pyx_codeobj__164);
  Py_VISIT(traverse_module_state->__pyx_codeobj__165);
  Py_VISIT(traverse_module_state->__pyx_codeobj__166);
  Py_VISIT(traverse_module_state->__pyx_codeobj__167);
  Py_VISIT(traverse_module_state->__pyx_codeobj__168);
  Py_VISIT(traverse_module_state->__pyx_codeobj__169);
  Py_VISIT(traverse_module_state->__pyx_codeobj__170);
  Py_VISIT(traverse_module_state->__pyx_codeobj__171);
  Py_VISIT(traverse_module_state->__pyx_codeobj__172);
  Py_VISIT(traverse_module_state->__pyx_codeobj__173);
  Py_VISIT(traverse_module_state->__pyx_codeobj__174);
  Py_VISIT(traverse_module_state->__pyx_codeobj__175);
  Py_VISIT(traverse_module_state->__pyx_codeobj__176);
  Py_VISIT(traverse_module_state->__pyx_codeobj__177);
  Py_VISIT(traverse_module_state->__pyx_codeobj__178);
  Py_VISIT(traverse_module_state->__pyx_codeobj__179);
  Py_VISIT(traverse_module_state->__pyx_codeobj__180);
  Py_VISIT(traverse_module_state->__pyx_codeobj__181);
  Py_VISIT(traverse_module_state->__pyx_codeobj__182);
  Py_VISIT(traverse_module_state->__pyx_codeobj__183);
  Py_VISIT(traverse_module_state->__pyx_codeobj__184);
  Py_VISIT(traverse_module_state->__pyx_codeobj__185);
  Py_VISIT(traverse_module_state->__pyx_codeobj__186);
  Py_VISIT(traverse_module_state->__pyx_codeobj__187);
  Py_VISIT(traverse_module_state->__pyx_codeobj__188);
  Py_VISIT(traverse_module_state->__pyx_codeobj__189);
  Py_VISIT(traverse_module_state->__pyx_codeobj__190);
  Py_VISIT(traverse_module_state->__pyx_codeobj__191);
  Py_VISIT(traverse_module_state->__pyx_codeobj__193);
  Py_VISIT(traverse_module_state->__pyx_codeobj__194);
  Py_VISIT(traverse_module_state->__pyx_codeobj__195);
  Py_VISIT(traverse_module_state->__pyx_codeobj__196);
  Py_VISIT(traverse_module_state->__pyx_codeobj__197);
  Py_VISIT(traverse_module_state->__pyx_codeobj__198);
  Py_VISIT(traverse_module_state->__pyx_codeobj__199);
  Py_VISIT(traverse_module_state->__pyx_codeobj__200);
  Py_VISIT(traverse_module_state->__pyx_codeobj__201);
  Py_VISIT(traverse_module_state->__pyx_codeobj__202);
  Py_VISIT(traverse_module_state->__pyx_codeobj__203);
  Py_VISIT(traverse_module_state->__pyx_codeobj__204);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4type_type __pyx_mstate_global->__pyx_ptype_7cpython_4type_type
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4bool_bool __pyx_mstate_global->__pyx_ptype_7cpython_4bool_bool
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_7complex_complex __pyx_mstate_global->__pyx_ptype_7cpython_7complex_complex
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_5array_array __pyx_mstate_global->__pyx_ptype_7cpython_5array_array
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_7pylivox_PyDeviceType __pyx_mstate_global->__pyx_type_7pylivox_PyDeviceType
#define __pyx_type_7pylivox_PyLidarState __pyx_mstate_global->__pyx_type_7pylivox_PyLidarState
#define __pyx_type_7pylivox_PyLidarMode __pyx_mstate_global->__pyx_type_7pylivox_PyLidarMode
#define __pyx_type_7pylivox_PyLidarFeature __pyx_mstate_global->__pyx_type_7pylivox_PyLidarFeature
#define __pyx_type_7pylivox_PyLidarIpMode __pyx_mstate_global->__pyx_type_7pylivox_PyLidarIpMode
#define __pyx_type_7pylivox_PyLidarScanPattern __pyx_mstate_global->__pyx_type_7pylivox_PyLidarScanPattern
#define __pyx_type_7pylivox_PyLivoxStatus __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxStatus
#define __pyx_type_7pylivox_PyDeviceEvent __pyx_mstate_global->__pyx_type_7pylivox_PyDeviceEvent
#define __pyx_type_7pylivox_PyTimestampType __pyx_mstate_global->__pyx_type_7pylivox_PyTimestampType
#define __pyx_type_7pylivox_PyPointDataType __pyx_mstate_global->__pyx_type_7pylivox_PyPointDataType
#define __pyx_type_7pylivox_PyPointCloudReturnMode __pyx_mstate_global->__pyx_type_7pylivox_PyPointCloudReturnMode
#define __pyx_type_7pylivox_PyImuFreq __pyx_mstate_global->__pyx_type_7pylivox_PyImuFreq
#define __pyx_type_7pylivox_PyLivoxSdkVersion __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxSdkVersion
#define __pyx_type_7pylivox_PyLivoxRawPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxRawPoint
#define __pyx_type_7pylivox_PyLivoxSpherPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxSpherPoint
#define __pyx_type_7pylivox_PyLivoxPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxPoint
#define __pyx_type_7pylivox_PyLivoxExtendRawPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxExtendRawPoint
#define __pyx_type_7pylivox_PyLivoxExtendSpherPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxExtendSpherPoint
#define __pyx_type_7pylivox_PyLivoxDualExtendRawPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxDualExtendRawPoint
#define __pyx_type_7pylivox_PyLivoxDualExtendSpherPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint
#define __pyx_type_7pylivox_PyLivoxTripleExtendRawPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint
#define __pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint
#define __pyx_type_7pylivox_PyLivoxImuPoint __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxImuPoint
#define __pyx_type_7pylivox_PyLidarErrorCode __pyx_mstate_global->__pyx_type_7pylivox_PyLidarErrorCode
#define __pyx_type_7pylivox_PyHubErrorCode __pyx_mstate_global->__pyx_type_7pylivox_PyHubErrorCode
#define __pyx_type_7pylivox_PyErrorMessage __pyx_mstate_global->__pyx_type_7pylivox_PyErrorMessage
#define __pyx_type_7pylivox_PyLivoxEthPacket __pyx_mstate_global->__pyx_type_7pylivox_PyLivoxEthPacket
#define __pyx_type_7pylivox_PyStatusUnion __pyx_mstate_global->__pyx_type_7pylivox_PyStatusUnion
#define __pyx_type_7pylivox_PyDeviceInfo __pyx_mstate_global->__pyx_type_7pylivox_PyDeviceInfo
#define __pyx_type_7pylivox_PyBroadcastDeviceInfo __pyx_mstate_global->__pyx_type_7pylivox_PyBroadcastDeviceInfo
#define __pyx_type_7pylivox_PyConnectedLidarInfo __pyx_mstate_global->__pyx_type_7pylivox_PyConnectedLidarInfo
#define __pyx_type_7pylivox_PyLidarModeRequestItem __pyx_mstate_global->__pyx_type_7pylivox_PyLidarModeRequestItem
#define __pyx_type_7pylivox_PyReturnCode __pyx_mstate_global->__pyx_type_7pylivox_PyReturnCode
#define __pyx_type_7pylivox_PyDeviceBroadcastCode __pyx_mstate_global->__pyx_type_7pylivox_PyDeviceBroadcastCode
#define __pyx_type_7pylivox_PyRainFogSuppressRequestItem __pyx_mstate_global->__pyx_type_7pylivox_PyRainFogSuppressRequestItem
#endif
#define __pyx_ptype_7pylivox_PyDeviceType __pyx_mstate_global->__pyx_ptype_7pylivox_PyDeviceType
#define __pyx_ptype_7pylivox_PyLidarState __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarState
#define __pyx_ptype_7pylivox_PyLidarMode __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarMode
#define __pyx_ptype_7pylivox_PyLidarFeature __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarFeature
#define __pyx_ptype_7pylivox_PyLidarIpMode __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarIpMode
#define __pyx_ptype_7pylivox_PyLidarScanPattern __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarScanPattern
#define __pyx_ptype_7pylivox_PyLivoxStatus __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxStatus
#define __pyx_ptype_7pylivox_PyDeviceEvent __pyx_mstate_global->__pyx_ptype_7pylivox_PyDeviceEvent
#define __pyx_ptype_7pylivox_PyTimestampType __pyx_mstate_global->__pyx_ptype_7pylivox_PyTimestampType
#define __pyx_ptype_7pylivox_PyPointDataType __pyx_mstate_global->__pyx_ptype_7pylivox_PyPointDataType
#define __pyx_ptype_7pylivox_PyPointCloudReturnMode __pyx_mstate_global->__pyx_ptype_7pylivox_PyPointCloudReturnMode
#define __pyx_ptype_7pylivox_PyImuFreq __pyx_mstate_global->__pyx_ptype_7pylivox_PyImuFreq
#define __pyx_ptype_7pylivox_PyLivoxSdkVersion __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxSdkVersion
#define __pyx_ptype_7pylivox_PyLivoxRawPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxRawPoint
#define __pyx_ptype_7pylivox_PyLivoxSpherPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxSpherPoint
#define __pyx_ptype_7pylivox_PyLivoxPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxPoint
#define __pyx_ptype_7pylivox_PyLivoxExtendRawPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxExtendRawPoint
#define __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint
#define __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint
#define __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint
#define __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint
#define __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint
#define __pyx_ptype_7pylivox_PyLivoxImuPoint __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxImuPoint
#define __pyx_ptype_7pylivox_PyLidarErrorCode __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarErrorCode
#define __pyx_ptype_7pylivox_PyHubErrorCode __pyx_mstate_global->__pyx_ptype_7pylivox_PyHubErrorCode
#define __pyx_ptype_7pylivox_PyErrorMessage __pyx_mstate_global->__pyx_ptype_7pylivox_PyErrorMessage
#define __pyx_ptype_7pylivox_PyLivoxEthPacket __pyx_mstate_global->__pyx_ptype_7pylivox_PyLivoxEthPacket
#define __pyx_ptype_7pylivox_PyStatusUnion __pyx_mstate_global->__pyx_ptype_7pylivox_PyStatusUnion
#define __pyx_ptype_7pylivox_PyDeviceInfo __pyx_mstate_global->__pyx_ptype_7pylivox_PyDeviceInfo
#define __pyx_ptype_7pylivox_PyBroadcastDeviceInfo __pyx_mstate_global->__pyx_ptype_7pylivox_PyBroadcastDeviceInfo
#define __pyx_ptype_7pylivox_PyConnectedLidarInfo __pyx_mstate_global->__pyx_ptype_7pylivox_PyConnectedLidarInfo
#define __pyx_ptype_7pylivox_PyLidarModeRequestItem __pyx_mstate_global->__pyx_ptype_7pylivox_PyLidarModeRequestItem
#define __pyx_ptype_7pylivox_PyReturnCode __pyx_mstate_global->__pyx_ptype_7pylivox_PyReturnCode
#define __pyx_ptype_7pylivox_PyDeviceBroadcastCode __pyx_mstate_global->__pyx_ptype_7pylivox_PyDeviceBroadcastCode
#define __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem __pyx_mstate_global->__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem
#define __pyx_kp_u_0 __pyx_mstate_global->__pyx_kp_u_0
#define __pyx_kp_u_0000000000000000 __pyx_mstate_global->__pyx_kp_u_0000000000000000
#define __pyx_n_s_DeviceTypeHub __pyx_mstate_global->__pyx_n_s_DeviceTypeHub
#define __pyx_n_s_DeviceTypeLidarAvia __pyx_mstate_global->__pyx_n_s_DeviceTypeLidarAvia
#define __pyx_n_s_DeviceTypeLidarHorizon __pyx_mstate_global->__pyx_n_s_DeviceTypeLidarHorizon
#define __pyx_n_s_DeviceTypeLidarMid40 __pyx_mstate_global->__pyx_n_s_DeviceTypeLidarMid40
#define __pyx_n_s_DeviceTypeLidarMid70 __pyx_mstate_global->__pyx_n_s_DeviceTypeLidarMid70
#define __pyx_n_s_DeviceTypeLidarTele __pyx_mstate_global->__pyx_n_s_DeviceTypeLidarTele
#define __pyx_n_s_EventConnect __pyx_mstate_global->__pyx_n_s_EventConnect
#define __pyx_n_s_EventDisconnect __pyx_mstate_global->__pyx_n_s_EventDisconnect
#define __pyx_n_s_EventHubConnectionChange __pyx_mstate_global->__pyx_n_s_EventHubConnectionChange
#define __pyx_n_s_EventStateChange __pyx_mstate_global->__pyx_n_s_EventStateChange
#define __pyx_n_s_ImuFreq0Hz __pyx_mstate_global->__pyx_n_s_ImuFreq0Hz
#define __pyx_n_s_ImuFreq200Hz __pyx_mstate_global->__pyx_n_s_ImuFreq200Hz
#define __pyx_kp_s_Incompatible_checksums_0x_x_vs_0 __pyx_mstate_global->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0
#define __pyx_n_s_IndexError __pyx_mstate_global->__pyx_n_s_IndexError
#define __pyx_n_s_KeyError __pyx_mstate_global->__pyx_n_s_KeyError
#define __pyx_n_s_LIVOX_SDK_MAJOR_VERSION __pyx_mstate_global->__pyx_n_s_LIVOX_SDK_MAJOR_VERSION
#define __pyx_n_s_LIVOX_SDK_MINOR_VERSION __pyx_mstate_global->__pyx_n_s_LIVOX_SDK_MINOR_VERSION
#define __pyx_n_s_LIVOX_SDK_PATCH_VERSION __pyx_mstate_global->__pyx_n_s_LIVOX_SDK_PATCH_VERSION
#define __pyx_n_s_LidarDynamicIpMode __pyx_mstate_global->__pyx_n_s_LidarDynamicIpMode
#define __pyx_n_s_LidarFeatureNone __pyx_mstate_global->__pyx_n_s_LidarFeatureNone
#define __pyx_n_s_LidarFeatureRainFog __pyx_mstate_global->__pyx_n_s_LidarFeatureRainFog
#define __pyx_n_s_LidarModeNormal __pyx_mstate_global->__pyx_n_s_LidarModeNormal
#define __pyx_n_s_LidarModePowerSaving __pyx_mstate_global->__pyx_n_s_LidarModePowerSaving
#define __pyx_n_s_LidarModeStandby __pyx_mstate_global->__pyx_n_s_LidarModeStandby
#define __pyx_n_s_LidarStateError __pyx_mstate_global->__pyx_n_s_LidarStateError
#define __pyx_n_s_LidarStateInit __pyx_mstate_global->__pyx_n_s_LidarStateInit
#define __pyx_n_s_LidarStateNormal __pyx_mstate_global->__pyx_n_s_LidarStateNormal
#define __pyx_n_s_LidarStatePowerSaving __pyx_mstate_global->__pyx_n_s_LidarStatePowerSaving
#define __pyx_n_s_LidarStateStandBy __pyx_mstate_global->__pyx_n_s_LidarStateStandBy
#define __pyx_n_s_LidarStateUnknown __pyx_mstate_global->__pyx_n_s_LidarStateUnknown
#define __pyx_n_s_LidarStaticIpMode __pyx_mstate_global->__pyx_n_s_LidarStaticIpMode
#define __pyx_n_s_MemoryError __pyx_mstate_global->__pyx_n_s_MemoryError
#define __pyx_kp_s_More_than_one_union_attribute_pa __pyx_mstate_global->__pyx_kp_s_More_than_one_union_attribute_pa
#define __pyx_kp_s_No_value_specified_for_any_of_th __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_any_of_th
#define __pyx_kp_s_No_value_specified_for_struct_at __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at
#define __pyx_kp_s_No_value_specified_for_struct_at_10 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_10
#define __pyx_kp_s_No_value_specified_for_struct_at_11 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_11
#define __pyx_kp_s_No_value_specified_for_struct_at_12 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_12
#define __pyx_kp_s_No_value_specified_for_struct_at_13 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_13
#define __pyx_kp_s_No_value_specified_for_struct_at_14 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_14
#define __pyx_kp_s_No_value_specified_for_struct_at_15 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_15
#define __pyx_kp_s_No_value_specified_for_struct_at_16 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_16
#define __pyx_kp_s_No_value_specified_for_struct_at_2 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_2
#define __pyx_kp_s_No_value_specified_for_struct_at_3 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_3
#define __pyx_kp_s_No_value_specified_for_struct_at_4 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_4
#define __pyx_kp_s_No_value_specified_for_struct_at_5 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_5
#define __pyx_kp_s_No_value_specified_for_struct_at_6 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_6
#define __pyx_kp_s_No_value_specified_for_struct_at_7 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_7
#define __pyx_kp_s_No_value_specified_for_struct_at_8 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_8
#define __pyx_kp_s_No_value_specified_for_struct_at_9 __pyx_mstate_global->__pyx_kp_s_No_value_specified_for_struct_at_9
#define __pyx_n_s_NoneRepetitiveScanPattern __pyx_mstate_global->__pyx_n_s_NoneRepetitiveScanPattern
#define __pyx_n_s_OverflowError __pyx_mstate_global->__pyx_n_s_OverflowError
#define __pyx_n_s_PickleError __pyx_mstate_global->__pyx_n_s_PickleError
#define __pyx_kp_s_Pickling_of_struct_members_such __pyx_mstate_global->__pyx_kp_s_Pickling_of_struct_members_such
#define __pyx_n_s_PointCloudReturnDual __pyx_mstate_global->__pyx_n_s_PointCloudReturnDual
#define __pyx_n_s_PointCloudReturnFirst __pyx_mstate_global->__pyx_n_s_PointCloudReturnFirst
#define __pyx_n_s_PointCloudReturnStrongest __pyx_mstate_global->__pyx_n_s_PointCloudReturnStrongest
#define __pyx_n_s_PointCloudReturnTriple __pyx_mstate_global->__pyx_n_s_PointCloudReturnTriple
#define __pyx_n_s_PointDataTypeCartesian __pyx_mstate_global->__pyx_n_s_PointDataTypeCartesian
#define __pyx_n_s_PointDataTypeDualExtendCartesian __pyx_mstate_global->__pyx_n_s_PointDataTypeDualExtendCartesian
#define __pyx_n_s_PointDataTypeDualExtendSpherical __pyx_mstate_global->__pyx_n_s_PointDataTypeDualExtendSpherical
#define __pyx_n_s_PointDataTypeExtendCartesian __pyx_mstate_global->__pyx_n_s_PointDataTypeExtendCartesian
#define __pyx_n_s_PointDataTypeExtendSpherical __pyx_mstate_global->__pyx_n_s_PointDataTypeExtendSpherical
#define __pyx_n_s_PointDataTypeImu __pyx_mstate_global->__pyx_n_s_PointDataTypeImu
#define __pyx_n_s_PointDataTypeMax __pyx_mstate_global->__pyx_n_s_PointDataTypeMax
#define __pyx_n_s_PointDataTypeSpherical __pyx_mstate_global->__pyx_n_s_PointDataTypeSpherical
#define __pyx_n_s_PointDataTypeTripleExtendCartesi __pyx_mstate_global->__pyx_n_s_PointDataTypeTripleExtendCartesi
#define __pyx_n_s_PointDataTypeTripleExtendSpheric __pyx_mstate_global->__pyx_n_s_PointDataTypeTripleExtendSpheric
#define __pyx_n_s_PyAddHubToConnect __pyx_mstate_global->__pyx_n_s_PyAddHubToConnect
#define __pyx_n_s_PyAddLidarToConnect __pyx_mstate_global->__pyx_n_s_PyAddLidarToConnect
#define __pyx_n_s_PyBroadcastDeviceInfo __pyx_mstate_global->__pyx_n_s_PyBroadcastDeviceInfo
#define __pyx_n_s_PyBroadcastDeviceInfo___reduce_c __pyx_mstate_global->__pyx_n_s_PyBroadcastDeviceInfo___reduce_c
#define __pyx_n_s_PyBroadcastDeviceInfo___setstate __pyx_mstate_global->__pyx_n_s_PyBroadcastDeviceInfo___setstate
#define __pyx_n_s_PyConnectedLidarInfo __pyx_mstate_global->__pyx_n_s_PyConnectedLidarInfo
#define __pyx_n_s_PyConnectedLidarInfo___reduce_cy __pyx_mstate_global->__pyx_n_s_PyConnectedLidarInfo___reduce_cy
#define __pyx_n_s_PyConnectedLidarInfo___setstate __pyx_mstate_global->__pyx_n_s_PyConnectedLidarInfo___setstate
#define __pyx_n_s_PyDeviceBroadcastCode __pyx_mstate_global->__pyx_n_s_PyDeviceBroadcastCode
#define __pyx_n_s_PyDeviceBroadcastCode___reduce_c __pyx_mstate_global->__pyx_n_s_PyDeviceBroadcastCode___reduce_c
#define __pyx_n_s_PyDeviceBroadcastCode___setstate __pyx_mstate_global->__pyx_n_s_PyDeviceBroadcastCode___setstate
#define __pyx_n_s_PyDeviceEvent __pyx_mstate_global->__pyx_n_s_PyDeviceEvent
#define __pyx_n_s_PyDeviceEvent_EventConnect __pyx_mstate_global->__pyx_n_s_PyDeviceEvent_EventConnect
#define __pyx_n_s_PyDeviceEvent_EventDisconnect __pyx_mstate_global->__pyx_n_s_PyDeviceEvent_EventDisconnect
#define __pyx_n_s_PyDeviceEvent_EventHubConnection __pyx_mstate_global->__pyx_n_s_PyDeviceEvent_EventHubConnection
#define __pyx_n_s_PyDeviceEvent_EventStateChange __pyx_mstate_global->__pyx_n_s_PyDeviceEvent_EventStateChange
#define __pyx_n_s_PyDeviceEvent___reduce_cython __pyx_mstate_global->__pyx_n_s_PyDeviceEvent___reduce_cython
#define __pyx_n_s_PyDeviceEvent___setstate_cython __pyx_mstate_global->__pyx_n_s_PyDeviceEvent___setstate_cython
#define __pyx_n_s_PyDeviceInfo __pyx_mstate_global->__pyx_n_s_PyDeviceInfo
#define __pyx_n_s_PyDeviceInfo___reduce_cython __pyx_mstate_global->__pyx_n_s_PyDeviceInfo___reduce_cython
#define __pyx_n_s_PyDeviceInfo___setstate_cython __pyx_mstate_global->__pyx_n_s_PyDeviceInfo___setstate_cython
#define __pyx_n_s_PyDeviceType __pyx_mstate_global->__pyx_n_s_PyDeviceType
#define __pyx_n_s_PyDeviceType_DeviceTypeHub __pyx_mstate_global->__pyx_n_s_PyDeviceType_DeviceTypeHub
#define __pyx_n_s_PyDeviceType_DeviceTypeLidarAvia __pyx_mstate_global->__pyx_n_s_PyDeviceType_DeviceTypeLidarAvia
#define __pyx_n_s_PyDeviceType_DeviceTypeLidarHori __pyx_mstate_global->__pyx_n_s_PyDeviceType_DeviceTypeLidarHori
#define __pyx_n_s_PyDeviceType_DeviceTypeLidarMid4 __pyx_mstate_global->__pyx_n_s_PyDeviceType_DeviceTypeLidarMid4
#define __pyx_n_s_PyDeviceType_DeviceTypeLidarMid7 __pyx_mstate_global->__pyx_n_s_PyDeviceType_DeviceTypeLidarMid7
#define __pyx_n_s_PyDeviceType_DeviceTypeLidarTele __pyx_mstate_global->__pyx_n_s_PyDeviceType_DeviceTypeLidarTele
#define __pyx_n_s_PyDeviceType___reduce_cython __pyx_mstate_global->__pyx_n_s_PyDeviceType___reduce_cython
#define __pyx_n_s_PyDeviceType___setstate_cython __pyx_mstate_global->__pyx_n_s_PyDeviceType___setstate_cython
#define __pyx_n_s_PyDisableConsoleLogger __pyx_mstate_global->__pyx_n_s_PyDisableConsoleLogger
#define __pyx_n_s_PyDisconnectDevice __pyx_mstate_global->__pyx_n_s_PyDisconnectDevice
#define __pyx_n_s_PyErrorMessage __pyx_mstate_global->__pyx_n_s_PyErrorMessage
#define __pyx_n_s_PyErrorMessage___reduce_cython __pyx_mstate_global->__pyx_n_s_PyErrorMessage___reduce_cython
#define __pyx_n_s_PyErrorMessage___setstate_cython __pyx_mstate_global->__pyx_n_s_PyErrorMessage___setstate_cython
#define __pyx_n_s_PyGetConnectedDevices __pyx_mstate_global->__pyx_n_s_PyGetConnectedDevices
#define __pyx_n_s_PyGetLivoxSdkVersion __pyx_mstate_global->__pyx_n_s_PyGetLivoxSdkVersion
#define __pyx_n_s_PyHubErrorCode __pyx_mstate_global->__pyx_n_s_PyHubErrorCode
#define __pyx_n_s_PyHubErrorCode___reduce_cython __pyx_mstate_global->__pyx_n_s_PyHubErrorCode___reduce_cython
#define __pyx_n_s_PyHubErrorCode___setstate_cython __pyx_mstate_global->__pyx_n_s_PyHubErrorCode___setstate_cython
#define __pyx_n_s_PyHubGetLidarHandle __pyx_mstate_global->__pyx_n_s_PyHubGetLidarHandle
#define __pyx_n_s_PyHubStartSampling __pyx_mstate_global->__pyx_n_s_PyHubStartSampling
#define __pyx_n_s_PyHubStopSampling __pyx_mstate_global->__pyx_n_s_PyHubStopSampling
#define __pyx_n_s_PyImuFreq __pyx_mstate_global->__pyx_n_s_PyImuFreq
#define __pyx_n_s_PyImuFreq_ImuFreq0Hz __pyx_mstate_global->__pyx_n_s_PyImuFreq_ImuFreq0Hz
#define __pyx_n_s_PyImuFreq_ImuFreq200Hz __pyx_mstate_global->__pyx_n_s_PyImuFreq_ImuFreq200Hz
#define __pyx_n_s_PyImuFreq___reduce_cython __pyx_mstate_global->__pyx_n_s_PyImuFreq___reduce_cython
#define __pyx_n_s_PyImuFreq___setstate_cython __pyx_mstate_global->__pyx_n_s_PyImuFreq___setstate_cython
#define __pyx_n_s_PyInit __pyx_mstate_global->__pyx_n_s_PyInit
#define __pyx_n_s_PyLidarErrorCode __pyx_mstate_global->__pyx_n_s_PyLidarErrorCode
#define __pyx_n_s_PyLidarErrorCode___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLidarErrorCode___reduce_cython
#define __pyx_n_s_PyLidarErrorCode___setstate_cyth __pyx_mstate_global->__pyx_n_s_PyLidarErrorCode___setstate_cyth
#define __pyx_n_s_PyLidarFeature __pyx_mstate_global->__pyx_n_s_PyLidarFeature
#define __pyx_n_s_PyLidarFeature_LidarFeatureNone __pyx_mstate_global->__pyx_n_s_PyLidarFeature_LidarFeatureNone
#define __pyx_n_s_PyLidarFeature_LidarFeatureRainF __pyx_mstate_global->__pyx_n_s_PyLidarFeature_LidarFeatureRainF
#define __pyx_n_s_PyLidarFeature___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLidarFeature___reduce_cython
#define __pyx_n_s_PyLidarFeature___setstate_cython __pyx_mstate_global->__pyx_n_s_PyLidarFeature___setstate_cython
#define __pyx_n_s_PyLidarIpMode __pyx_mstate_global->__pyx_n_s_PyLidarIpMode
#define __pyx_n_s_PyLidarIpMode_LidarDynamicIpMode __pyx_mstate_global->__pyx_n_s_PyLidarIpMode_LidarDynamicIpMode
#define __pyx_n_s_PyLidarIpMode_LidarStaticIpMode __pyx_mstate_global->__pyx_n_s_PyLidarIpMode_LidarStaticIpMode
#define __pyx_n_s_PyLidarIpMode___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLidarIpMode___reduce_cython
#define __pyx_n_s_PyLidarIpMode___setstate_cython __pyx_mstate_global->__pyx_n_s_PyLidarIpMode___setstate_cython
#define __pyx_n_s_PyLidarMode __pyx_mstate_global->__pyx_n_s_PyLidarMode
#define __pyx_n_s_PyLidarModeRequestItem __pyx_mstate_global->__pyx_n_s_PyLidarModeRequestItem
#define __pyx_n_s_PyLidarModeRequestItem___reduce __pyx_mstate_global->__pyx_n_s_PyLidarModeRequestItem___reduce
#define __pyx_n_s_PyLidarModeRequestItem___setstat __pyx_mstate_global->__pyx_n_s_PyLidarModeRequestItem___setstat
#define __pyx_n_s_PyLidarMode_LidarModeNormal __pyx_mstate_global->__pyx_n_s_PyLidarMode_LidarModeNormal
#define __pyx_n_s_PyLidarMode_LidarModePowerSaving __pyx_mstate_global->__pyx_n_s_PyLidarMode_LidarModePowerSaving
#define __pyx_n_s_PyLidarMode_LidarModeStandby __pyx_mstate_global->__pyx_n_s_PyLidarMode_LidarModeStandby
#define __pyx_n_s_PyLidarMode___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLidarMode___reduce_cython
#define __pyx_n_s_PyLidarMode___setstate_cython __pyx_mstate_global->__pyx_n_s_PyLidarMode___setstate_cython
#define __pyx_n_s_PyLidarScanPattern __pyx_mstate_global->__pyx_n_s_PyLidarScanPattern
#define __pyx_n_s_PyLidarScanPattern_NoneRepetitiv __pyx_mstate_global->__pyx_n_s_PyLidarScanPattern_NoneRepetitiv
#define __pyx_n_s_PyLidarScanPattern_RepetitiveSca __pyx_mstate_global->__pyx_n_s_PyLidarScanPattern_RepetitiveSca
#define __pyx_n_s_PyLidarScanPattern___reduce_cyth __pyx_mstate_global->__pyx_n_s_PyLidarScanPattern___reduce_cyth
#define __pyx_n_s_PyLidarScanPattern___setstate_cy __pyx_mstate_global->__pyx_n_s_PyLidarScanPattern___setstate_cy
#define __pyx_n_s_PyLidarState __pyx_mstate_global->__pyx_n_s_PyLidarState
#define __pyx_n_s_PyLidarState_LidarStateError __pyx_mstate_global->__pyx_n_s_PyLidarState_LidarStateError
#define __pyx_n_s_PyLidarState_LidarStateInit __pyx_mstate_global->__pyx_n_s_PyLidarState_LidarStateInit
#define __pyx_n_s_PyLidarState_LidarStateNormal __pyx_mstate_global->__pyx_n_s_PyLidarState_LidarStateNormal
#define __pyx_n_s_PyLidarState_LidarStatePowerSavi __pyx_mstate_global->__pyx_n_s_PyLidarState_LidarStatePowerSavi
#define __pyx_n_s_PyLidarState_LidarStateStandBy __pyx_mstate_global->__pyx_n_s_PyLidarState_LidarStateStandBy
#define __pyx_n_s_PyLidarState_LidarStateUnknown __pyx_mstate_global->__pyx_n_s_PyLidarState_LidarStateUnknown
#define __pyx_n_s_PyLidarState___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLidarState___reduce_cython
#define __pyx_n_s_PyLidarState___setstate_cython __pyx_mstate_global->__pyx_n_s_PyLidarState___setstate_cython
#define __pyx_n_s_PyLivoxDualExtendRawPoint __pyx_mstate_global->__pyx_n_s_PyLivoxDualExtendRawPoint
#define __pyx_n_s_PyLivoxDualExtendRawPoint___redu __pyx_mstate_global->__pyx_n_s_PyLivoxDualExtendRawPoint___redu
#define __pyx_n_s_PyLivoxDualExtendRawPoint___sets __pyx_mstate_global->__pyx_n_s_PyLivoxDualExtendRawPoint___sets
#define __pyx_n_s_PyLivoxDualExtendSpherPoint __pyx_mstate_global->__pyx_n_s_PyLivoxDualExtendSpherPoint
#define __pyx_n_s_PyLivoxDualExtendSpherPoint___re __pyx_mstate_global->__pyx_n_s_PyLivoxDualExtendSpherPoint___re
#define __pyx_n_s_PyLivoxDualExtendSpherPoint___se __pyx_mstate_global->__pyx_n_s_PyLivoxDualExtendSpherPoint___se
#define __pyx_n_s_PyLivoxEthPacket __pyx_mstate_global->__pyx_n_s_PyLivoxEthPacket
#define __pyx_n_s_PyLivoxEthPacket___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLivoxEthPacket___reduce_cython
#define __pyx_n_s_PyLivoxEthPacket___setstate_cyth __pyx_mstate_global->__pyx_n_s_PyLivoxEthPacket___setstate_cyth
#define __pyx_n_s_PyLivoxExtendRawPoint __pyx_mstate_global->__pyx_n_s_PyLivoxExtendRawPoint
#define __pyx_n_s_PyLivoxExtendRawPoint___reduce_c __pyx_mstate_global->__pyx_n_s_PyLivoxExtendRawPoint___reduce_c
#define __pyx_n_s_PyLivoxExtendRawPoint___setstate __pyx_mstate_global->__pyx_n_s_PyLivoxExtendRawPoint___setstate
#define __pyx_n_s_PyLivoxExtendSpherPoint __pyx_mstate_global->__pyx_n_s_PyLivoxExtendSpherPoint
#define __pyx_n_s_PyLivoxExtendSpherPoint___reduce __pyx_mstate_global->__pyx_n_s_PyLivoxExtendSpherPoint___reduce
#define __pyx_n_s_PyLivoxExtendSpherPoint___setsta __pyx_mstate_global->__pyx_n_s_PyLivoxExtendSpherPoint___setsta
#define __pyx_n_s_PyLivoxImuPoint __pyx_mstate_global->__pyx_n_s_PyLivoxImuPoint
#define __pyx_n_s_PyLivoxImuPoint___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLivoxImuPoint___reduce_cython
#define __pyx_n_s_PyLivoxImuPoint___setstate_cytho __pyx_mstate_global->__pyx_n_s_PyLivoxImuPoint___setstate_cytho
#define __pyx_n_s_PyLivoxPoint __pyx_mstate_global->__pyx_n_s_PyLivoxPoint
#define __pyx_n_s_PyLivoxPoint___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLivoxPoint___reduce_cython
#define __pyx_n_s_PyLivoxPoint___setstate_cython __pyx_mstate_global->__pyx_n_s_PyLivoxPoint___setstate_cython
#define __pyx_n_s_PyLivoxRawPoint __pyx_mstate_global->__pyx_n_s_PyLivoxRawPoint
#define __pyx_n_s_PyLivoxRawPoint___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLivoxRawPoint___reduce_cython
#define __pyx_n_s_PyLivoxRawPoint___setstate_cytho __pyx_mstate_global->__pyx_n_s_PyLivoxRawPoint___setstate_cytho
#define __pyx_n_s_PyLivoxSdkVersion __pyx_mstate_global->__pyx_n_s_PyLivoxSdkVersion
#define __pyx_n_s_PyLivoxSdkVersion___reduce_cytho __pyx_mstate_global->__pyx_n_s_PyLivoxSdkVersion___reduce_cytho
#define __pyx_n_s_PyLivoxSdkVersion___setstate_cyt __pyx_mstate_global->__pyx_n_s_PyLivoxSdkVersion___setstate_cyt
#define __pyx_n_s_PyLivoxSpherPoint __pyx_mstate_global->__pyx_n_s_PyLivoxSpherPoint
#define __pyx_n_s_PyLivoxSpherPoint___reduce_cytho __pyx_mstate_global->__pyx_n_s_PyLivoxSpherPoint___reduce_cytho
#define __pyx_n_s_PyLivoxSpherPoint___setstate_cyt __pyx_mstate_global->__pyx_n_s_PyLivoxSpherPoint___setstate_cyt
#define __pyx_n_s_PyLivoxStatus __pyx_mstate_global->__pyx_n_s_PyLivoxStatus
#define __pyx_n_s_PyLivoxStatus_StatusChannelNotEx __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusChannelNotEx
#define __pyx_n_s_PyLivoxStatus_StatusFailure __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusFailure
#define __pyx_n_s_PyLivoxStatus_StatusHandlerImplN __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusHandlerImplN
#define __pyx_n_s_PyLivoxStatus_StatusInvalidHandl __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusInvalidHandl
#define __pyx_n_s_PyLivoxStatus_StatusNotConnected __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusNotConnected
#define __pyx_n_s_PyLivoxStatus_StatusNotEnoughMem __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusNotEnoughMem
#define __pyx_n_s_PyLivoxStatus_StatusNotSupported __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusNotSupported
#define __pyx_n_s_PyLivoxStatus_StatusSendFailed __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusSendFailed
#define __pyx_n_s_PyLivoxStatus_StatusSuccess __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusSuccess
#define __pyx_n_s_PyLivoxStatus_StatusTimeout __pyx_mstate_global->__pyx_n_s_PyLivoxStatus_StatusTimeout
#define __pyx_n_s_PyLivoxStatus___reduce_cython __pyx_mstate_global->__pyx_n_s_PyLivoxStatus___reduce_cython
#define __pyx_n_s_PyLivoxStatus___setstate_cython __pyx_mstate_global->__pyx_n_s_PyLivoxStatus___setstate_cython
#define __pyx_n_s_PyLivoxTripleExtendRawPoint __pyx_mstate_global->__pyx_n_s_PyLivoxTripleExtendRawPoint
#define __pyx_n_s_PyLivoxTripleExtendRawPoint___re __pyx_mstate_global->__pyx_n_s_PyLivoxTripleExtendRawPoint___re
#define __pyx_n_s_PyLivoxTripleExtendRawPoint___se __pyx_mstate_global->__pyx_n_s_PyLivoxTripleExtendRawPoint___se
#define __pyx_n_s_PyLivoxTripleExtendSpherPoint __pyx_mstate_global->__pyx_n_s_PyLivoxTripleExtendSpherPoint
#define __pyx_n_s_PyLivoxTripleExtendSpherPoint_2 __pyx_mstate_global->__pyx_n_s_PyLivoxTripleExtendSpherPoint_2
#define __pyx_n_s_PyLivoxTripleExtendSpherPoint_3 __pyx_mstate_global->__pyx_n_s_PyLivoxTripleExtendSpherPoint_3
#define __pyx_n_s_PyPointCloudReturnMode __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode
#define __pyx_n_s_PyPointCloudReturnMode_PointClou __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode_PointClou
#define __pyx_n_s_PyPointCloudReturnMode_PointClou_2 __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode_PointClou_2
#define __pyx_n_s_PyPointCloudReturnMode_PointClou_3 __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode_PointClou_3
#define __pyx_n_s_PyPointCloudReturnMode_PointClou_4 __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode_PointClou_4
#define __pyx_n_s_PyPointCloudReturnMode___reduce __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode___reduce
#define __pyx_n_s_PyPointCloudReturnMode___setstat __pyx_mstate_global->__pyx_n_s_PyPointCloudReturnMode___setstat
#define __pyx_n_s_PyPointDataType __pyx_mstate_global->__pyx_n_s_PyPointDataType
#define __pyx_n_s_PyPointDataType_PointDataTypeCar __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeCar
#define __pyx_n_s_PyPointDataType_PointDataTypeDua __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeDua
#define __pyx_n_s_PyPointDataType_PointDataTypeDua_2 __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeDua_2
#define __pyx_n_s_PyPointDataType_PointDataTypeExt __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeExt
#define __pyx_n_s_PyPointDataType_PointDataTypeExt_2 __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeExt_2
#define __pyx_n_s_PyPointDataType_PointDataTypeImu __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeImu
#define __pyx_n_s_PyPointDataType_PointDataTypeMax __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeMax
#define __pyx_n_s_PyPointDataType_PointDataTypeSph __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeSph
#define __pyx_n_s_PyPointDataType_PointDataTypeTri __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeTri
#define __pyx_n_s_PyPointDataType_PointDataTypeTri_2 __pyx_mstate_global->__pyx_n_s_PyPointDataType_PointDataTypeTri_2
#define __pyx_n_s_PyPointDataType___reduce_cython __pyx_mstate_global->__pyx_n_s_PyPointDataType___reduce_cython
#define __pyx_n_s_PyPointDataType___setstate_cytho __pyx_mstate_global->__pyx_n_s_PyPointDataType___setstate_cytho
#define __pyx_n_s_PyRainFogSuppressRequestItem __pyx_mstate_global->__pyx_n_s_PyRainFogSuppressRequestItem
#define __pyx_n_s_PyRainFogSuppressRequestItem___r __pyx_mstate_global->__pyx_n_s_PyRainFogSuppressRequestItem___r
#define __pyx_n_s_PyRainFogSuppressRequestItem___s __pyx_mstate_global->__pyx_n_s_PyRainFogSuppressRequestItem___s
#define __pyx_n_s_PyReturnCode __pyx_mstate_global->__pyx_n_s_PyReturnCode
#define __pyx_n_s_PyReturnCode___reduce_cython __pyx_mstate_global->__pyx_n_s_PyReturnCode___reduce_cython
#define __pyx_n_s_PyReturnCode___setstate_cython __pyx_mstate_global->__pyx_n_s_PyReturnCode___setstate_cython
#define __pyx_n_s_PySaveLoggerFile __pyx_mstate_global->__pyx_n_s_PySaveLoggerFile
#define __pyx_n_s_PySetCartesianCoordinate __pyx_mstate_global->__pyx_n_s_PySetCartesianCoordinate
#define __pyx_n_s_PySetSphericalCoordinate __pyx_mstate_global->__pyx_n_s_PySetSphericalCoordinate
#define __pyx_n_s_PyStart __pyx_mstate_global->__pyx_n_s_PyStart
#define __pyx_n_s_PyStatusUnion __pyx_mstate_global->__pyx_n_s_PyStatusUnion
#define __pyx_n_s_PyStatusUnion___reduce_cython __pyx_mstate_global->__pyx_n_s_PyStatusUnion___reduce_cython
#define __pyx_n_s_PyStatusUnion___setstate_cython __pyx_mstate_global->__pyx_n_s_PyStatusUnion___setstate_cython
#define __pyx_n_s_PyTimestampType __pyx_mstate_global->__pyx_n_s_PyTimestampType
#define __pyx_n_s_PyTimestampType_TimestampTypeNoS __pyx_mstate_global->__pyx_n_s_PyTimestampType_TimestampTypeNoS
#define __pyx_n_s_PyTimestampType_TimestampTypePps __pyx_mstate_global->__pyx_n_s_PyTimestampType_TimestampTypePps
#define __pyx_n_s_PyTimestampType_TimestampTypePps_2 __pyx_mstate_global->__pyx_n_s_PyTimestampType_TimestampTypePps_2
#define __pyx_n_s_PyTimestampType_TimestampTypePtp __pyx_mstate_global->__pyx_n_s_PyTimestampType_TimestampTypePtp
#define __pyx_n_s_PyTimestampType_TimestampTypeRsv __pyx_mstate_global->__pyx_n_s_PyTimestampType_TimestampTypeRsv
#define __pyx_n_s_PyTimestampType_TimestampTypeUnk __pyx_mstate_global->__pyx_n_s_PyTimestampType_TimestampTypeUnk
#define __pyx_n_s_PyTimestampType___reduce_cython __pyx_mstate_global->__pyx_n_s_PyTimestampType___reduce_cython
#define __pyx_n_s_PyTimestampType___setstate_cytho __pyx_mstate_global->__pyx_n_s_PyTimestampType___setstate_cytho
#define __pyx_n_s_PyUninit __pyx_mstate_global->__pyx_n_s_PyUninit
#define __pyx_n_s_RepetitiveScanPattern __pyx_mstate_global->__pyx_n_s_RepetitiveScanPattern
#define __pyx_n_s_StatusChannelNotExist __pyx_mstate_global->__pyx_n_s_StatusChannelNotExist
#define __pyx_n_s_StatusFailure __pyx_mstate_global->__pyx_n_s_StatusFailure
#define __pyx_n_s_StatusHandlerImplNotExist __pyx_mstate_global->__pyx_n_s_StatusHandlerImplNotExist
#define __pyx_n_s_StatusInvalidHandle __pyx_mstate_global->__pyx_n_s_StatusInvalidHandle
#define __pyx_n_s_StatusNotConnected __pyx_mstate_global->__pyx_n_s_StatusNotConnected
#define __pyx_n_s_StatusNotEnoughMemory __pyx_mstate_global->__pyx_n_s_StatusNotEnoughMemory
#define __pyx_n_s_StatusNotSupported __pyx_mstate_global->__pyx_n_s_StatusNotSupported
#define __pyx_n_s_StatusSendFailed __pyx_mstate_global->__pyx_n_s_StatusSendFailed
#define __pyx_n_s_StatusSuccess __pyx_mstate_global->__pyx_n_s_StatusSuccess
#define __pyx_n_s_StatusTimeout __pyx_mstate_global->__pyx_n_s_StatusTimeout
#define __pyx_n_s_TimestampTypeNoSync __pyx_mstate_global->__pyx_n_s_TimestampTypeNoSync
#define __pyx_n_s_TimestampTypePps __pyx_mstate_global->__pyx_n_s_TimestampTypePps
#define __pyx_n_s_TimestampTypePpsGps __pyx_mstate_global->__pyx_n_s_TimestampTypePpsGps
#define __pyx_n_s_TimestampTypePtp __pyx_mstate_global->__pyx_n_s_TimestampTypePtp
#define __pyx_n_s_TimestampTypeRsvd __pyx_mstate_global->__pyx_n_s_TimestampTypeRsvd
#define __pyx_n_s_TimestampTypeUnknown __pyx_mstate_global->__pyx_n_s_TimestampTypeUnknown
#define __pyx_n_s_TypeError __pyx_mstate_global->__pyx_n_s_TypeError
#define __pyx_n_s_ValueError __pyx_mstate_global->__pyx_n_s_ValueError
#define __pyx_n_s__205 __pyx_mstate_global->__pyx_n_s__205
#define __pyx_kp_u__39 __pyx_mstate_global->__pyx_kp_u__39
#define __pyx_n_s__40 __pyx_mstate_global->__pyx_n_s__40
#define __pyx_n_s_acc_x __pyx_mstate_global->__pyx_n_s_acc_x
#define __pyx_n_s_acc_y __pyx_mstate_global->__pyx_n_s_acc_y
#define __pyx_n_s_acc_z __pyx_mstate_global->__pyx_n_s_acc_z
#define __pyx_n_s_array __pyx_mstate_global->__pyx_n_s_array
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_broadcast_code __pyx_mstate_global->__pyx_n_s_broadcast_code
#define __pyx_n_s_cb __pyx_mstate_global->__pyx_n_s_cb
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_cmd_port __pyx_mstate_global->__pyx_n_s_cmd_port
#define __pyx_n_s_core __pyx_mstate_global->__pyx_n_s_core
#define __pyx_n_s_data __pyx_mstate_global->__pyx_n_s_data
#define __pyx_n_s_data_port __pyx_mstate_global->__pyx_n_s_data_port
#define __pyx_n_s_data_type __pyx_mstate_global->__pyx_n_s_data_type
#define __pyx_n_s_depth __pyx_mstate_global->__pyx_n_s_depth
#define __pyx_n_s_depth1 __pyx_mstate_global->__pyx_n_s_depth1
#define __pyx_n_s_depth2 __pyx_mstate_global->__pyx_n_s_depth2
#define __pyx_n_s_depth3 __pyx_mstate_global->__pyx_n_s_depth3
#define __pyx_n_s_dev_type __pyx_mstate_global->__pyx_n_s_dev_type
#define __pyx_n_s_device_status __pyx_mstate_global->__pyx_n_s_device_status
#define __pyx_n_s_devices __pyx_mstate_global->__pyx_n_s_devices
#define __pyx_n_s_dict __pyx_mstate_global->__pyx_n_s_dict
#define __pyx_n_s_dict_2 __pyx_mstate_global->__pyx_n_s_dict_2
#define __pyx_n_s_dirty_warn __pyx_mstate_global->__pyx_n_s_dirty_warn
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_encode __pyx_mstate_global->__pyx_n_s_encode
#define __pyx_n_s_enumerate __pyx_mstate_global->__pyx_n_s_enumerate
#define __pyx_n_s_err_code __pyx_mstate_global->__pyx_n_s_err_code
#define __pyx_n_s_error_code __pyx_mstate_global->__pyx_n_s_error_code
#define __pyx_kp_s_error_code_lidar_error_code_hub __pyx_mstate_global->__pyx_kp_s_error_code_lidar_error_code_hub
#define __pyx_n_s_fan_status __pyx_mstate_global->__pyx_n_s_fan_status
#define __pyx_n_s_feature __pyx_mstate_global->__pyx_n_s_feature
#define __pyx_n_s_firmware_err __pyx_mstate_global->__pyx_n_s_firmware_err
#define __pyx_n_s_firmware_version __pyx_mstate_global->__pyx_n_s_firmware_version
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_getstate __pyx_mstate_global->__pyx_n_s_getstate
#define __pyx_n_s_gyro_x __pyx_mstate_global->__pyx_n_s_gyro_x
#define __pyx_n_s_gyro_y __pyx_mstate_global->__pyx_n_s_gyro_y
#define __pyx_n_s_gyro_z __pyx_mstate_global->__pyx_n_s_gyro_z
#define __pyx_n_s_handle __pyx_mstate_global->__pyx_n_s_handle
#define __pyx_n_s_hub_error_code __pyx_mstate_global->__pyx_n_s_hub_error_code
#define __pyx_n_s_id __pyx_mstate_global->__pyx_n_s_id
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_s_ip __pyx_mstate_global->__pyx_n_s_ip
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_kBroadcastCodeSize __pyx_mstate_global->__pyx_n_s_kBroadcastCodeSize
#define __pyx_n_s_kMaxLidarCount __pyx_mstate_global->__pyx_n_s_kMaxLidarCount
#define __pyx_n_s_lidar_error_code __pyx_mstate_global->__pyx_n_s_lidar_error_code
#define __pyx_n_s_lidar_link_status __pyx_mstate_global->__pyx_n_s_lidar_link_status
#define __pyx_n_s_lidar_status __pyx_mstate_global->__pyx_n_s_lidar_status
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_major __pyx_mstate_global->__pyx_n_s_major
#define __pyx_n_s_minor __pyx_mstate_global->__pyx_n_s_minor
#define __pyx_n_s_motor_status __pyx_mstate_global->__pyx_n_s_motor_status
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_new __pyx_mstate_global->__pyx_n_s_new
#define __pyx_n_s_patch __pyx_mstate_global->__pyx_n_s_patch
#define __pyx_n_s_phi __pyx_mstate_global->__pyx_n_s_phi
#define __pyx_n_s_pickle __pyx_mstate_global->__pyx_n_s_pickle
#define __pyx_n_s_pps_status __pyx_mstate_global->__pyx_n_s_pps_status
#define __pyx_n_s_progress __pyx_mstate_global->__pyx_n_s_progress
#define __pyx_kp_s_progress_status_code __pyx_mstate_global->__pyx_kp_s_progress_status_code
#define __pyx_n_s_ptp_status __pyx_mstate_global->__pyx_n_s_ptp_status
#define __pyx_n_s_pylivox __pyx_mstate_global->__pyx_n_s_pylivox
#define __pyx_kp_s_pylivox_pyx __pyx_mstate_global->__pyx_kp_s_pylivox_pyx
#define __pyx_n_s_pyx_PickleError __pyx_mstate_global->__pyx_n_s_pyx_PickleError
#define __pyx_n_s_pyx_checksum __pyx_mstate_global->__pyx_n_s_pyx_checksum
#define __pyx_n_s_pyx_result __pyx_mstate_global->__pyx_n_s_pyx_result
#define __pyx_n_s_pyx_state __pyx_mstate_global->__pyx_n_s_pyx_state
#define __pyx_n_s_pyx_type __pyx_mstate_global->__pyx_n_s_pyx_type
#define __pyx_n_s_pyx_unpickle_PyDeviceEvent __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyDeviceEvent
#define __pyx_n_s_pyx_unpickle_PyDeviceType __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyDeviceType
#define __pyx_n_s_pyx_unpickle_PyImuFreq __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyImuFreq
#define __pyx_n_s_pyx_unpickle_PyLidarFeature __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyLidarFeature
#define __pyx_n_s_pyx_unpickle_PyLidarIpMode __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyLidarIpMode
#define __pyx_n_s_pyx_unpickle_PyLidarMode __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyLidarMode
#define __pyx_n_s_pyx_unpickle_PyLidarScanPatter __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyLidarScanPatter
#define __pyx_n_s_pyx_unpickle_PyLidarState __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyLidarState
#define __pyx_n_s_pyx_unpickle_PyLivoxStatus __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyLivoxStatus
#define __pyx_n_s_pyx_unpickle_PyPointCloudRetur __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyPointCloudRetur
#define __pyx_n_s_pyx_unpickle_PyPointDataType __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyPointDataType
#define __pyx_n_s_pyx_unpickle_PyTimestampType __pyx_mstate_global->__pyx_n_s_pyx_unpickle_PyTimestampType
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_reduce __pyx_mstate_global->__pyx_n_s_reduce
#define __pyx_n_s_reduce_cython __pyx_mstate_global->__pyx_n_s_reduce_cython
#define __pyx_n_s_reduce_ex __pyx_mstate_global->__pyx_n_s_reduce_ex
#define __pyx_n_s_reflectivity __pyx_mstate_global->__pyx_n_s_reflectivity
#define __pyx_n_s_reflectivity1 __pyx_mstate_global->__pyx_n_s_reflectivity1
#define __pyx_n_s_reflectivity2 __pyx_mstate_global->__pyx_n_s_reflectivity2
#define __pyx_n_s_reflectivity3 __pyx_mstate_global->__pyx_n_s_reflectivity3
#define __pyx_n_s_reserved __pyx_mstate_global->__pyx_n_s_reserved
#define __pyx_n_s_ret_code __pyx_mstate_global->__pyx_n_s_ret_code
#define __pyx_n_s_rsvd __pyx_mstate_global->__pyx_n_s_rsvd
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_n_s_self_heating __pyx_mstate_global->__pyx_n_s_self_heating
#define __pyx_n_s_sensor_port __pyx_mstate_global->__pyx_n_s_sensor_port
#define __pyx_n_s_setstate __pyx_mstate_global->__pyx_n_s_setstate
#define __pyx_n_s_setstate_cython __pyx_mstate_global->__pyx_n_s_setstate_cython
#define __pyx_n_s_size __pyx_mstate_global->__pyx_n_s_size
#define __pyx_n_s_slot __pyx_mstate_global->__pyx_n_s_slot
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_state __pyx_mstate_global->__pyx_n_s_state
#define __pyx_n_s_staticmethod __pyx_mstate_global->__pyx_n_s_staticmethod
#define __pyx_n_s_status __pyx_mstate_global->__pyx_n_s_status
#define __pyx_n_s_status_code __pyx_mstate_global->__pyx_n_s_status_code
#define __pyx_kp_s_stringsource __pyx_mstate_global->__pyx_kp_s_stringsource
#define __pyx_n_s_sync_status __pyx_mstate_global->__pyx_n_s_sync_status
#define __pyx_n_s_system_status __pyx_mstate_global->__pyx_n_s_system_status
#define __pyx_n_s_tag __pyx_mstate_global->__pyx_n_s_tag
#define __pyx_n_s_tag1 __pyx_mstate_global->__pyx_n_s_tag1
#define __pyx_n_s_tag2 __pyx_mstate_global->__pyx_n_s_tag2
#define __pyx_n_s_tag3 __pyx_mstate_global->__pyx_n_s_tag3
#define __pyx_n_s_temp_status __pyx_mstate_global->__pyx_n_s_temp_status
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_theta __pyx_mstate_global->__pyx_n_s_theta
#define __pyx_n_s_time_sync_status __pyx_mstate_global->__pyx_n_s_time_sync_status
#define __pyx_n_s_timestamp __pyx_mstate_global->__pyx_n_s_timestamp
#define __pyx_n_s_timestamp_type __pyx_mstate_global->__pyx_n_s_timestamp_type
#define __pyx_n_s_type __pyx_mstate_global->__pyx_n_s_type
#define __pyx_n_s_update __pyx_mstate_global->__pyx_n_s_update
#define __pyx_n_s_use_setstate __pyx_mstate_global->__pyx_n_s_use_setstate
#define __pyx_kp_u_utf_8 __pyx_mstate_global->__pyx_kp_u_utf_8
#define __pyx_n_s_version __pyx_mstate_global->__pyx_n_s_version
#define __pyx_n_s_volt_status __pyx_mstate_global->__pyx_n_s_volt_status
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_n_s_x1 __pyx_mstate_global->__pyx_n_s_x1
#define __pyx_n_s_x2 __pyx_mstate_global->__pyx_n_s_x2
#define __pyx_n_s_x3 __pyx_mstate_global->__pyx_n_s_x3
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_y1 __pyx_mstate_global->__pyx_n_s_y1
#define __pyx_n_s_y2 __pyx_mstate_global->__pyx_n_s_y2
#define __pyx_n_s_y3 __pyx_mstate_global->__pyx_n_s_y3
#define __pyx_n_s_z __pyx_mstate_global->__pyx_n_s_z
#define __pyx_n_s_z1 __pyx_mstate_global->__pyx_n_s_z1
#define __pyx_n_s_z2 __pyx_mstate_global->__pyx_n_s_z2
#define __pyx_n_s_z3 __pyx_mstate_global->__pyx_n_s_z3
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_2 __pyx_mstate_global->__pyx_int_2
#define __pyx_int_3 __pyx_mstate_global->__pyx_int_3
#define __pyx_int_4 __pyx_mstate_global->__pyx_int_4
#define __pyx_int_8 __pyx_mstate_global->__pyx_int_8
#define __pyx_int_16 __pyx_mstate_global->__pyx_int_16
#define __pyx_int_32 __pyx_mstate_global->__pyx_int_32
#define __pyx_int_222419149 __pyx_mstate_global->__pyx_int_222419149
#define __pyx_int_228825662 __pyx_mstate_global->__pyx_int_228825662
#define __pyx_int_238750788 __pyx_mstate_global->__pyx_int_238750788
#define __pyx_k__17 __pyx_mstate_global->__pyx_k__17
#define __pyx_k__18 __pyx_mstate_global->__pyx_k__18
#define __pyx_k__19 __pyx_mstate_global->__pyx_k__19
#define __pyx_k__20 __pyx_mstate_global->__pyx_k__20
#define __pyx_k__23 __pyx_mstate_global->__pyx_k__23
#define __pyx_k__24 __pyx_mstate_global->__pyx_k__24
#define __pyx_k__25 __pyx_mstate_global->__pyx_k__25
#define __pyx_k__26 __pyx_mstate_global->__pyx_k__26
#define __pyx_k__27 __pyx_mstate_global->__pyx_k__27
#define __pyx_k__28 __pyx_mstate_global->__pyx_k__28
#define __pyx_k__31 __pyx_mstate_global->__pyx_k__31
#define __pyx_k__32 __pyx_mstate_global->__pyx_k__32
#define __pyx_k__33 __pyx_mstate_global->__pyx_k__33
#define __pyx_k__34 __pyx_mstate_global->__pyx_k__34
#define __pyx_k__35 __pyx_mstate_global->__pyx_k__35
#define __pyx_k__36 __pyx_mstate_global->__pyx_k__36
#define __pyx_k__37 __pyx_mstate_global->__pyx_k__37
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__3 __pyx_mstate_global->__pyx_tuple__3
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__8 __pyx_mstate_global->__pyx_tuple__8
#define __pyx_tuple__9 __pyx_mstate_global->__pyx_tuple__9
#define __pyx_slice__21 __pyx_mstate_global->__pyx_slice__21
#define __pyx_slice__22 __pyx_mstate_global->__pyx_slice__22
#define __pyx_slice__29 __pyx_mstate_global->__pyx_slice__29
#define __pyx_slice__30 __pyx_mstate_global->__pyx_slice__30
#define __pyx_tuple__10 __pyx_mstate_global->__pyx_tuple__10
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__38 __pyx_mstate_global->__pyx_tuple__38
#define __pyx_tuple__46 __pyx_mstate_global->__pyx_tuple__46
#define __pyx_tuple__48 __pyx_mstate_global->__pyx_tuple__48
#define __pyx_tuple__51 __pyx_mstate_global->__pyx_tuple__51
#define __pyx_tuple__53 __pyx_mstate_global->__pyx_tuple__53
#define __pyx_tuple__57 __pyx_mstate_global->__pyx_tuple__57
#define __pyx_tuple__60 __pyx_mstate_global->__pyx_tuple__60
#define __pyx_tuple__68 __pyx_mstate_global->__pyx_tuple__68
#define __pyx_tuple__70 __pyx_mstate_global->__pyx_tuple__70
#define __pyx_tuple__145 __pyx_mstate_global->__pyx_tuple__145
#define __pyx_tuple__192 __pyx_mstate_global->__pyx_tuple__192
#define __pyx_codeobj__41 __pyx_mstate_global->__pyx_codeobj__41
#define __pyx_codeobj__42 __pyx_mstate_global->__pyx_codeobj__42
#define __pyx_codeobj__43 __pyx_mstate_global->__pyx_codeobj__43
#define __pyx_codeobj__44 __pyx_mstate_global->__pyx_codeobj__44
#define __pyx_codeobj__45 __pyx_mstate_global->__pyx_codeobj__45
#define __pyx_codeobj__47 __pyx_mstate_global->__pyx_codeobj__47
#define __pyx_codeobj__49 __pyx_mstate_global->__pyx_codeobj__49
#define __pyx_codeobj__50 __pyx_mstate_global->__pyx_codeobj__50
#define __pyx_codeobj__52 __pyx_mstate_global->__pyx_codeobj__52
#define __pyx_codeobj__54 __pyx_mstate_global->__pyx_codeobj__54
#define __pyx_codeobj__55 __pyx_mstate_global->__pyx_codeobj__55
#define __pyx_codeobj__56 __pyx_mstate_global->__pyx_codeobj__56
#define __pyx_codeobj__58 __pyx_mstate_global->__pyx_codeobj__58
#define __pyx_codeobj__59 __pyx_mstate_global->__pyx_codeobj__59
#define __pyx_codeobj__61 __pyx_mstate_global->__pyx_codeobj__61
#define __pyx_codeobj__62 __pyx_mstate_global->__pyx_codeobj__62
#define __pyx_codeobj__63 __pyx_mstate_global->__pyx_codeobj__63
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__65 __pyx_mstate_global->__pyx_codeobj__65
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__67 __pyx_mstate_global->__pyx_codeobj__67
#define __pyx_codeobj__69 __pyx_mstate_global->__pyx_codeobj__69
#define __pyx_codeobj__71 __pyx_mstate_global->__pyx_codeobj__71
#define __pyx_codeobj__72 __pyx_mstate_global->__pyx_codeobj__72
#define __pyx_codeobj__73 __pyx_mstate_global->__pyx_codeobj__73
#define __pyx_codeobj__74 __pyx_mstate_global->__pyx_codeobj__74
#define __pyx_codeobj__75 __pyx_mstate_global->__pyx_codeobj__75
#define __pyx_codeobj__76 __pyx_mstate_global->__pyx_codeobj__76
#define __pyx_codeobj__77 __pyx_mstate_global->__pyx_codeobj__77
#define __pyx_codeobj__78 __pyx_mstate_global->__pyx_codeobj__78
#define __pyx_codeobj__79 __pyx_mstate_global->__pyx_codeobj__79
#define __pyx_codeobj__80 __pyx_mstate_global->__pyx_codeobj__80
#define __pyx_codeobj__81 __pyx_mstate_global->__pyx_codeobj__81
#define __pyx_codeobj__82 __pyx_mstate_global->__pyx_codeobj__82
#define __pyx_codeobj__83 __pyx_mstate_global->__pyx_codeobj__83
#define __pyx_codeobj__84 __pyx_mstate_global->__pyx_codeobj__84
#define __pyx_codeobj__85 __pyx_mstate_global->__pyx_codeobj__85
#define __pyx_codeobj__86 __pyx_mstate_global->__pyx_codeobj__86
#define __pyx_codeobj__87 __pyx_mstate_global->__pyx_codeobj__87
#define __pyx_codeobj__88 __pyx_mstate_global->__pyx_codeobj__88
#define __pyx_codeobj__89 __pyx_mstate_global->__pyx_codeobj__89
#define __pyx_codeobj__90 __pyx_mstate_global->__pyx_codeobj__90
#define __pyx_codeobj__91 __pyx_mstate_global->__pyx_codeobj__91
#define __pyx_codeobj__92 __pyx_mstate_global->__pyx_codeobj__92
#define __pyx_codeobj__93 __pyx_mstate_global->__pyx_codeobj__93
#define __pyx_codeobj__94 __pyx_mstate_global->__pyx_codeobj__94
#define __pyx_codeobj__95 __pyx_mstate_global->__pyx_codeobj__95
#define __pyx_codeobj__96 __pyx_mstate_global->__pyx_codeobj__96
#define __pyx_codeobj__97 __pyx_mstate_global->__pyx_codeobj__97
#define __pyx_codeobj__98 __pyx_mstate_global->__pyx_codeobj__98
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__100 __pyx_mstate_global->__pyx_codeobj__100
#define __pyx_codeobj__101 __pyx_mstate_global->__pyx_codeobj__101
#define __pyx_codeobj__102 __pyx_mstate_global->__pyx_codeobj__102
#define __pyx_codeobj__103 __pyx_mstate_global->__pyx_codeobj__103
#define __pyx_codeobj__104 __pyx_mstate_global->__pyx_codeobj__104
#define __pyx_codeobj__105 __pyx_mstate_global->__pyx_codeobj__105
#define __pyx_codeobj__106 __pyx_mstate_global->__pyx_codeobj__106
#define __pyx_codeobj__107 __pyx_mstate_global->__pyx_codeobj__107
#define __pyx_codeobj__108 __pyx_mstate_global->__pyx_codeobj__108
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
#define __pyx_codeobj__110 __pyx_mstate_global->__pyx_codeobj__110
#define __pyx_codeobj__111 __pyx_mstate_global->__pyx_codeobj__111
#define __pyx_codeobj__112 __pyx_mstate_global->__pyx_codeobj__112
#define __pyx_codeobj__113 __pyx_mstate_global->__pyx_codeobj__113
#define __pyx_codeobj__114 __pyx_mstate_global->__pyx_codeobj__114
#define __pyx_codeobj__115 __pyx_mstate_global->__pyx_codeobj__115
#define __pyx_codeobj__116 __pyx_mstate_global->__pyx_codeobj__116
#define __pyx_codeobj__117 __pyx_mstate_global->__pyx_codeobj__117
#define __pyx_codeobj__118 __pyx_mstate_global->__pyx_codeobj__118
#define __pyx_codeobj__119 __pyx_mstate_global->__pyx_codeobj__119
#define __pyx_codeobj__120 __pyx_mstate_global->__pyx_codeobj__120
#define __pyx_codeobj__121 __pyx_mstate_global->__pyx_codeobj__121
#define __pyx_codeobj__122 __pyx_mstate_global->__pyx_codeobj__122
#define __pyx_codeobj__123 __pyx_mstate_global->__pyx_codeobj__123
#define __pyx_codeobj__124 __pyx_mstate_global->__pyx_codeobj__124
#define __pyx_codeobj__125 __pyx_mstate_global->__pyx_codeobj__125
#define __pyx_codeobj__126 __pyx_mstate_global->__pyx_codeobj__126
#define __pyx_codeobj__127 __pyx_mstate_global->__pyx_codeobj__127
#define __pyx_codeobj__128 __pyx_mstate_global->__pyx_codeobj__128
#define __pyx_codeobj__129 __pyx_mstate_global->__pyx_codeobj__129
#define __pyx_codeobj__130 __pyx_mstate_global->__pyx_codeobj__130
#define __pyx_codeobj__131 __pyx_mstate_global->__pyx_codeobj__131
#define __pyx_codeobj__132 __pyx_mstate_global->__pyx_codeobj__132
#define __pyx_codeobj__133 __pyx_mstate_global->__pyx_codeobj__133
#define __pyx_codeobj__134 __pyx_mstate_global->__pyx_codeobj__134
#define __pyx_codeobj__135 __pyx_mstate_global->__pyx_codeobj__135
#define __pyx_codeobj__136 __pyx_mstate_global->__pyx_codeobj__136
#define __pyx_codeobj__137 __pyx_mstate_global->__pyx_codeobj__137
#define __pyx_codeobj__138 __pyx_mstate_global->__pyx_codeobj__138
#define __pyx_codeobj__139 __pyx_mstate_global->__pyx_codeobj__139
#define __pyx_codeobj__140 __pyx_mstate_global->__pyx_codeobj__140
#define __pyx_codeobj__141 __pyx_mstate_global->__pyx_codeobj__141
#define __pyx_codeobj__142 __pyx_mstate_global->__pyx_codeobj__142
#define __pyx_codeobj__143 __pyx_mstate_global->__pyx_codeobj__143
#define __pyx_codeobj__144 __pyx_mstate_global->__pyx_codeobj__144
#define __pyx_codeobj__146 __pyx_mstate_global->__pyx_codeobj__146
#define __pyx_codeobj__147 __pyx_mstate_global->__pyx_codeobj__147
#define __pyx_codeobj__148 __pyx_mstate_global->__pyx_codeobj__148
#define __pyx_codeobj__149 __pyx_mstate_global->__pyx_codeobj__149
#define __pyx_codeobj__150 __pyx_mstate_global->__pyx_codeobj__150
#define __pyx_codeobj__151 __pyx_mstate_global->__pyx_codeobj__151
#define __pyx_codeobj__152 __pyx_mstate_global->__pyx_codeobj__152
#define __pyx_codeobj__153 __pyx_mstate_global->__pyx_codeobj__153
#define __pyx_codeobj__154 __pyx_mstate_global->__pyx_codeobj__154
#define __pyx_codeobj__155 __pyx_mstate_global->__pyx_codeobj__155
#define __pyx_codeobj__156 __pyx_mstate_global->__pyx_codeobj__156
#define __pyx_codeobj__157 __pyx_mstate_global->__pyx_codeobj__157
#define __pyx_codeobj__158 __pyx_mstate_global->__pyx_codeobj__158
#define __pyx_codeobj__159 __pyx_mstate_global->__pyx_codeobj__159
#define __pyx_codeobj__160 __pyx_mstate_global->__pyx_codeobj__160
#define __pyx_codeobj__161 __pyx_mstate_global->__pyx_codeobj__161
#define __pyx_codeobj__162 __pyx_mstate_global->__pyx_codeobj__162
#define __pyx_codeobj__163 __pyx_mstate_global->__pyx_codeobj__163
#define __pyx_codeobj__164 __pyx_mstate_global->__pyx_codeobj__164
#define __pyx_codeobj__165 __pyx_mstate_global->__pyx_codeobj__165
#define __pyx_codeobj__166 __pyx_mstate_global->__pyx_codeobj__166
#define __pyx_codeobj__167 __pyx_mstate_global->__pyx_codeobj__167
#define __pyx_codeobj__168 __pyx_mstate_global->__pyx_codeobj__168
#define __pyx_codeobj__169 __pyx_mstate_global->__pyx_codeobj__169
#define __pyx_codeobj__170 __pyx_mstate_global->__pyx_codeobj__170
#define __pyx_codeobj__171 __pyx_mstate_global->__pyx_codeobj__171
#define __pyx_codeobj__172 __pyx_mstate_global->__pyx_codeobj__172
#define __pyx_codeobj__173 __pyx_mstate_global->__pyx_codeobj__173
#define __pyx_codeobj__174 __pyx_mstate_global->__pyx_codeobj__174
#define __pyx_codeobj__175 __pyx_mstate_global->__pyx_codeobj__175
#define __pyx_codeobj__176 __pyx_mstate_global->__pyx_codeobj__176
#define __pyx_codeobj__177 __pyx_mstate_global->__pyx_codeobj__177
#define __pyx_codeobj__178 __pyx_mstate_global->__pyx_codeobj__178
#define __pyx_codeobj__179 __pyx_mstate_global->__pyx_codeobj__179
#define __pyx_codeobj__180 __pyx_mstate_global->__pyx_codeobj__180
#define __pyx_codeobj__181 __pyx_mstate_global->__pyx_codeobj__181
#define __pyx_codeobj__182 __pyx_mstate_global->__pyx_codeobj__182
#define __pyx_codeobj__183 __pyx_mstate_global->__pyx_codeobj__183
#define __pyx_codeobj__184 __pyx_mstate_global->__pyx_codeobj__184
#define __pyx_codeobj__185 __pyx_mstate_global->__pyx_codeobj__185
#define __pyx_codeobj__186 __pyx_mstate_global->__pyx_codeobj__186
#define __pyx_codeobj__187 __pyx_mstate_global->__pyx_codeobj__187
#define __pyx_codeobj__188 __pyx_mstate_global->__pyx_codeobj__188
#define __pyx_codeobj__189 __pyx_mstate_global->__pyx_codeobj__189
#define __pyx_codeobj__190 __pyx_mstate_global->__pyx_codeobj__190
#define __pyx_codeobj__191 __pyx_mstate_global->__pyx_codeobj__191
#define __pyx_codeobj__193 __pyx_mstate_global->__pyx_codeobj__193
#define __pyx_codeobj__194 __pyx_mstate_global->__pyx_codeobj__194
#define __pyx_codeobj__195 __pyx_mstate_global->__pyx_codeobj__195
#define __pyx_codeobj__196 __pyx_mstate_global->__pyx_codeobj__196
#define __pyx_codeobj__197 __pyx_mstate_global->__pyx_codeobj__197
#define __pyx_codeobj__198 __pyx_mstate_global->__pyx_codeobj__198
#define __pyx_codeobj__199 __pyx_mstate_global->__pyx_codeobj__199
#define __pyx_codeobj__200 __pyx_mstate_global->__pyx_codeobj__200
#define __pyx_codeobj__201 __pyx_mstate_global->__pyx_codeobj__201
#define __pyx_codeobj__202 __pyx_mstate_global->__pyx_codeobj__202
#define __pyx_codeobj__203 __pyx_mstate_global->__pyx_codeobj__203
#define __pyx_codeobj__204 __pyx_mstate_global->__pyx_codeobj__204
/* #### Code section: module_code ### */

/* "FromPyStructUtility":12
 * 
 * @cname("__pyx_convert__from_py_LidarErrorCode")
 * cdef struct_type __pyx_convert__from_py_LidarErrorCode(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):
 */

static LidarErrorCode __pyx_convert__from_py_LidarErrorCode(PyObject *__pyx_v_obj) {
  LidarErrorCode __pyx_v_result;
  PyObject *__pyx_v_value = NULL;
  LidarErrorCode __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  uint32_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert__from_py_LidarErrorCode", 1);

  /* "FromPyStructUtility":14
 * cdef struct_type __pyx_convert__from_py_LidarErrorCode(obj) except *:
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  __pyx_t_1 = (!PyMapping_Check(__pyx_v_obj));
  if (__pyx_t_1) {

    /* "FromPyStructUtility":15
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)             # <<<<<<<<<<<<<<
 * 
 *     try:
 */
    __pyx_t_2 = __Pyx_RaiseUnexpectedTypeError(((char const *)"a mapping"), __pyx_v_obj); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(1, 15, __pyx_L1_error)

    /* "FromPyStructUtility":14
 * cdef struct_type __pyx_convert__from_py_LidarErrorCode(obj) except *:
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  }

  /* "FromPyStructUtility":17
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['temp_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":18
 * 
 *     try:
 *         value = obj['temp_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_temp_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 18, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_v_value = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":17
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['temp_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L9_try_end;
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "FromPyStructUtility":19
 *     try:
 *         value = obj['temp_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 19, __pyx_L6_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":20
 *         value = obj['temp_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")             # <<<<<<<<<<<<<<
 *     result.temp_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 20, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 20, __pyx_L6_except_error)
    }
    goto __pyx_L6_except_error;

    /* "FromPyStructUtility":17
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['temp_status']
 *     except KeyError:
 */
    __pyx_L6_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L9_try_end:;
  }

  /* "FromPyStructUtility":21
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['volt_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 21, __pyx_L1_error)
  __pyx_v_result.temp_status = __pyx_t_10;

  /* "FromPyStructUtility":22
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['volt_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":23
 *     result.temp_status = value
 *     try:
 *         value = obj['volt_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'volt_status'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_volt_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 23, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":22
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['volt_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L17_try_end;
    __pyx_L12_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":24
 *     try:
 *         value = obj['volt_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'volt_status'")
 *     result.volt_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 24, __pyx_L14_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":25
 *         value = obj['volt_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'volt_status'")             # <<<<<<<<<<<<<<
 *     result.volt_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 25, __pyx_L14_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 25, __pyx_L14_except_error)
    }
    goto __pyx_L14_except_error;

    /* "FromPyStructUtility":22
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['volt_status']
 *     except KeyError:
 */
    __pyx_L14_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L17_try_end:;
  }

  /* "FromPyStructUtility":26
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'volt_status'")
 *     result.volt_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['motor_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 26, __pyx_L1_error)
  __pyx_v_result.volt_status = __pyx_t_10;

  /* "FromPyStructUtility":27
 *         raise ValueError("No value specified for struct attribute 'volt_status'")
 *     result.volt_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['motor_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":28
 *     result.volt_status = value
 *     try:
 *         value = obj['motor_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'motor_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_motor_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 28, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":27
 *         raise ValueError("No value specified for struct attribute 'volt_status'")
 *     result.volt_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['motor_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L25_try_end;
    __pyx_L20_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":29
 *     try:
 *         value = obj['motor_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'motor_status'")
 *     result.motor_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 29, __pyx_L22_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":30
 *         value = obj['motor_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'motor_status'")             # <<<<<<<<<<<<<<
 *     result.motor_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 30, __pyx_L22_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 30, __pyx_L22_except_error)
    }
    goto __pyx_L22_except_error;

    /* "FromPyStructUtility":27
 *         raise ValueError("No value specified for struct attribute 'volt_status'")
 *     result.volt_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['motor_status']
 *     except KeyError:
 */
    __pyx_L22_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L25_try_end:;
  }

  /* "FromPyStructUtility":31
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'motor_status'")
 *     result.motor_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['dirty_warn']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 31, __pyx_L1_error)
  __pyx_v_result.motor_status = __pyx_t_10;

  /* "FromPyStructUtility":32
 *         raise ValueError("No value specified for struct attribute 'motor_status'")
 *     result.motor_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['dirty_warn']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":33
 *     result.motor_status = value
 *     try:
 *         value = obj['dirty_warn']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_dirty_warn); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 33, __pyx_L28_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":32
 *         raise ValueError("No value specified for struct attribute 'motor_status'")
 *     result.motor_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['dirty_warn']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L33_try_end;
    __pyx_L28_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":34
 *     try:
 *         value = obj['dirty_warn']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")
 *     result.dirty_warn = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 34, __pyx_L30_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":35
 *         value = obj['dirty_warn']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")             # <<<<<<<<<<<<<<
 *     result.dirty_warn = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 35, __pyx_L30_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 35, __pyx_L30_except_error)
    }
    goto __pyx_L30_except_error;

    /* "FromPyStructUtility":32
 *         raise ValueError("No value specified for struct attribute 'motor_status'")
 *     result.motor_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['dirty_warn']
 *     except KeyError:
 */
    __pyx_L30_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L33_try_end:;
  }

  /* "FromPyStructUtility":36
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")
 *     result.dirty_warn = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['firmware_err']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 36, __pyx_L1_error)
  __pyx_v_result.dirty_warn = __pyx_t_10;

  /* "FromPyStructUtility":37
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")
 *     result.dirty_warn = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['firmware_err']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":38
 *     result.dirty_warn = value
 *     try:
 *         value = obj['firmware_err']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_firmware_err); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 38, __pyx_L36_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":37
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")
 *     result.dirty_warn = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['firmware_err']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L41_try_end;
    __pyx_L36_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":39
 *     try:
 *         value = obj['firmware_err']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 39, __pyx_L38_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":40
 *         value = obj['firmware_err']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")             # <<<<<<<<<<<<<<
 *     result.firmware_err = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 40, __pyx_L38_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 40, __pyx_L38_except_error)
    }
    goto __pyx_L38_except_error;

    /* "FromPyStructUtility":37
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")
 *     result.dirty_warn = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['firmware_err']
 *     except KeyError:
 */
    __pyx_L38_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L41_try_end:;
  }

  /* "FromPyStructUtility":41
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['pps_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 41, __pyx_L1_error)
  __pyx_v_result.firmware_err = __pyx_t_10;

  /* "FromPyStructUtility":42
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['pps_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":43
 *     result.firmware_err = value
 *     try:
 *         value = obj['pps_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'pps_status'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_pps_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 43, __pyx_L44_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":42
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['pps_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L49_try_end;
    __pyx_L44_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":44
 *     try:
 *         value = obj['pps_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'pps_status'")
 *     result.pps_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 44, __pyx_L46_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":45
 *         value = obj['pps_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'pps_status'")             # <<<<<<<<<<<<<<
 *     result.pps_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 45, __pyx_L46_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 45, __pyx_L46_except_error)
    }
    goto __pyx_L46_except_error;

    /* "FromPyStructUtility":42
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['pps_status']
 *     except KeyError:
 */
    __pyx_L46_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L49_try_end:;
  }

  /* "FromPyStructUtility":46
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'pps_status'")
 *     result.pps_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['device_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 46, __pyx_L1_error)
  __pyx_v_result.pps_status = __pyx_t_10;

  /* "FromPyStructUtility":47
 *         raise ValueError("No value specified for struct attribute 'pps_status'")
 *     result.pps_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['device_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":48
 *     result.pps_status = value
 *     try:
 *         value = obj['device_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'device_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_device_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 48, __pyx_L52_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":47
 *         raise ValueError("No value specified for struct attribute 'pps_status'")
 *     result.pps_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['device_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L57_try_end;
    __pyx_L52_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":49
 *     try:
 *         value = obj['device_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'device_status'")
 *     result.device_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 49, __pyx_L54_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":50
 *         value = obj['device_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'device_status'")             # <<<<<<<<<<<<<<
 *     result.device_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 50, __pyx_L54_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 50, __pyx_L54_except_error)
    }
    goto __pyx_L54_except_error;

    /* "FromPyStructUtility":47
 *         raise ValueError("No value specified for struct attribute 'pps_status'")
 *     result.pps_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['device_status']
 *     except KeyError:
 */
    __pyx_L54_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L57_try_end:;
  }

  /* "FromPyStructUtility":51
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'device_status'")
 *     result.device_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['fan_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 51, __pyx_L1_error)
  __pyx_v_result.device_status = __pyx_t_10;

  /* "FromPyStructUtility":52
 *         raise ValueError("No value specified for struct attribute 'device_status'")
 *     result.device_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['fan_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":53
 *     result.device_status = value
 *     try:
 *         value = obj['fan_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'fan_status'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_fan_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 53, __pyx_L60_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":52
 *         raise ValueError("No value specified for struct attribute 'device_status'")
 *     result.device_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['fan_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L65_try_end;
    __pyx_L60_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":54
 *     try:
 *         value = obj['fan_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'fan_status'")
 *     result.fan_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 54, __pyx_L62_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":55
 *         value = obj['fan_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'fan_status'")             # <<<<<<<<<<<<<<
 *     result.fan_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 55, __pyx_L62_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 55, __pyx_L62_except_error)
    }
    goto __pyx_L62_except_error;

    /* "FromPyStructUtility":52
 *         raise ValueError("No value specified for struct attribute 'device_status'")
 *     result.device_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['fan_status']
 *     except KeyError:
 */
    __pyx_L62_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L65_try_end:;
  }

  /* "FromPyStructUtility":56
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'fan_status'")
 *     result.fan_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['self_heating']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 56, __pyx_L1_error)
  __pyx_v_result.fan_status = __pyx_t_10;

  /* "FromPyStructUtility":57
 *         raise ValueError("No value specified for struct attribute 'fan_status'")
 *     result.fan_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['self_heating']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":58
 *     result.fan_status = value
 *     try:
 *         value = obj['self_heating']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'self_heating'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_self_heating); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 58, __pyx_L68_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":57
 *         raise ValueError("No value specified for struct attribute 'fan_status'")
 *     result.fan_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['self_heating']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L73_try_end;
    __pyx_L68_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":59
 *     try:
 *         value = obj['self_heating']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'self_heating'")
 *     result.self_heating = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 59, __pyx_L70_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":60
 *         value = obj['self_heating']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'self_heating'")             # <<<<<<<<<<<<<<
 *     result.self_heating = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 60, __pyx_L70_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 60, __pyx_L70_except_error)
    }
    goto __pyx_L70_except_error;

    /* "FromPyStructUtility":57
 *         raise ValueError("No value specified for struct attribute 'fan_status'")
 *     result.fan_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['self_heating']
 *     except KeyError:
 */
    __pyx_L70_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L73_try_end:;
  }

  /* "FromPyStructUtility":61
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'self_heating'")
 *     result.self_heating = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['ptp_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 61, __pyx_L1_error)
  __pyx_v_result.self_heating = __pyx_t_10;

  /* "FromPyStructUtility":62
 *         raise ValueError("No value specified for struct attribute 'self_heating'")
 *     result.self_heating = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['ptp_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":63
 *     result.self_heating = value
 *     try:
 *         value = obj['ptp_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_ptp_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 63, __pyx_L76_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":62
 *         raise ValueError("No value specified for struct attribute 'self_heating'")
 *     result.self_heating = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['ptp_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L81_try_end;
    __pyx_L76_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":64
 *     try:
 *         value = obj['ptp_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")
 *     result.ptp_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 64, __pyx_L78_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":65
 *         value = obj['ptp_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")             # <<<<<<<<<<<<<<
 *     result.ptp_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 65, __pyx_L78_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 65, __pyx_L78_except_error)
    }
    goto __pyx_L78_except_error;

    /* "FromPyStructUtility":62
 *         raise ValueError("No value specified for struct attribute 'self_heating'")
 *     result.self_heating = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['ptp_status']
 *     except KeyError:
 */
    __pyx_L78_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L81_try_end:;
  }

  /* "FromPyStructUtility":66
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")
 *     result.ptp_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['time_sync_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 66, __pyx_L1_error)
  __pyx_v_result.ptp_status = __pyx_t_10;

  /* "FromPyStructUtility":67
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")
 *     result.ptp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['time_sync_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":68
 *     result.ptp_status = value
 *     try:
 *         value = obj['time_sync_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_time_sync_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 68, __pyx_L84_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":67
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")
 *     result.ptp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['time_sync_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L89_try_end;
    __pyx_L84_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":69
 *     try:
 *         value = obj['time_sync_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")
 *     result.time_sync_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 69, __pyx_L86_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":70
 *         value = obj['time_sync_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")             # <<<<<<<<<<<<<<
 *     result.time_sync_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 70, __pyx_L86_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 70, __pyx_L86_except_error)
    }
    goto __pyx_L86_except_error;

    /* "FromPyStructUtility":67
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")
 *     result.ptp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['time_sync_status']
 *     except KeyError:
 */
    __pyx_L86_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L89_try_end:;
  }

  /* "FromPyStructUtility":71
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")
 *     result.time_sync_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['rsvd']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 71, __pyx_L1_error)
  __pyx_v_result.time_sync_status = __pyx_t_10;

  /* "FromPyStructUtility":72
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")
 *     result.time_sync_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['rsvd']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":73
 *     result.time_sync_status = value
 *     try:
 *         value = obj['rsvd']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_rsvd); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 73, __pyx_L92_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":72
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")
 *     result.time_sync_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['rsvd']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L97_try_end;
    __pyx_L92_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":74
 *     try:
 *         value = obj['rsvd']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 74, __pyx_L94_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":75
 *         value = obj['rsvd']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")             # <<<<<<<<<<<<<<
 *     result.rsvd = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 75, __pyx_L94_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 75, __pyx_L94_except_error)
    }
    goto __pyx_L94_except_error;

    /* "FromPyStructUtility":72
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")
 *     result.time_sync_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['rsvd']
 *     except KeyError:
 */
    __pyx_L94_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L97_try_end:;
  }

  /* "FromPyStructUtility":76
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['system_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 76, __pyx_L1_error)
  __pyx_v_result.rsvd = __pyx_t_10;

  /* "FromPyStructUtility":77
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['system_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":78
 *     result.rsvd = value
 *     try:
 *         value = obj['system_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_system_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 78, __pyx_L100_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":77
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['system_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L105_try_end;
    __pyx_L100_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":79
 *     try:
 *         value = obj['system_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 *     result.system_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 79, __pyx_L102_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":80
 *         value = obj['system_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")             # <<<<<<<<<<<<<<
 *     result.system_status = value
 *     return result
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 80, __pyx_L102_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 80, __pyx_L102_except_error)
    }
    goto __pyx_L102_except_error;

    /* "FromPyStructUtility":77
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['system_status']
 *     except KeyError:
 */
    __pyx_L102_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L105_try_end:;
  }

  /* "FromPyStructUtility":81
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 *     result.system_status = value             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 81, __pyx_L1_error)
  __pyx_v_result.system_status = __pyx_t_10;

  /* "FromPyStructUtility":82
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 *     result.system_status = value
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "FromPyStructUtility":12
 * 
 * @cname("__pyx_convert__from_py_LidarErrorCode")
 * cdef struct_type __pyx_convert__from_py_LidarErrorCode(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_LidarErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static HubErrorCode __pyx_convert__from_py_HubErrorCode(PyObject *__pyx_v_obj) {
  HubErrorCode __pyx_v_result;
  PyObject *__pyx_v_value = NULL;
  HubErrorCode __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  uint32_t __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert__from_py_HubErrorCode", 1);

  /* "FromPyStructUtility":14
 * cdef struct_type __pyx_convert__from_py_HubErrorCode(obj) except *:
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  __pyx_t_1 = (!PyMapping_Check(__pyx_v_obj));
  if (__pyx_t_1) {

    /* "FromPyStructUtility":15
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)             # <<<<<<<<<<<<<<
 * 
 *     try:
 */
    __pyx_t_2 = __Pyx_RaiseUnexpectedTypeError(((char const *)"a mapping"), __pyx_v_obj); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(1, 15, __pyx_L1_error)

    /* "FromPyStructUtility":14
 * cdef struct_type __pyx_convert__from_py_HubErrorCode(obj) except *:
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  }

  /* "FromPyStructUtility":17
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['sync_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":18
 * 
 *     try:
 *         value = obj['sync_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'sync_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_sync_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 18, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_v_value = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":17
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['sync_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L9_try_end;
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "FromPyStructUtility":19
 *     try:
 *         value = obj['sync_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'sync_status'")
 *     result.sync_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 19, __pyx_L6_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":20
 *         value = obj['sync_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'sync_status'")             # <<<<<<<<<<<<<<
 *     result.sync_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 20, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 20, __pyx_L6_except_error)
    }
    goto __pyx_L6_except_error;

    /* "FromPyStructUtility":17
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['sync_status']
 *     except KeyError:
 */
    __pyx_L6_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L9_try_end:;
  }

  /* "FromPyStructUtility":21
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'sync_status'")
 *     result.sync_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['temp_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 21, __pyx_L1_error)
  __pyx_v_result.sync_status = __pyx_t_10;

  /* "FromPyStructUtility":22
 *         raise ValueError("No value specified for struct attribute 'sync_status'")
 *     result.sync_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['temp_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":23
 *     result.sync_status = value
 *     try:
 *         value = obj['temp_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_temp_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 23, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":22
 *         raise ValueError("No value specified for struct attribute 'sync_status'")
 *     result.sync_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['temp_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L17_try_end;
    __pyx_L12_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":24
 *     try:
 *         value = obj['temp_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 24, __pyx_L14_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":25
 *         value = obj['temp_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")             # <<<<<<<<<<<<<<
 *     result.temp_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 25, __pyx_L14_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 25, __pyx_L14_except_error)
    }
    goto __pyx_L14_except_error;

    /* "FromPyStructUtility":22
 *         raise ValueError("No value specified for struct attribute 'sync_status'")
 *     result.sync_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['temp_status']
 *     except KeyError:
 */
    __pyx_L14_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L17_try_end:;
  }

  /* "FromPyStructUtility":26
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['lidar_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 26, __pyx_L1_error)
  __pyx_v_result.temp_status = __pyx_t_10;

  /* "FromPyStructUtility":27
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['lidar_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":28
 *     result.temp_status = value
 *     try:
 *         value = obj['lidar_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_lidar_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 28, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":27
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['lidar_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L25_try_end;
    __pyx_L20_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":29
 *     try:
 *         value = obj['lidar_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")
 *     result.lidar_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 29, __pyx_L22_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":30
 *         value = obj['lidar_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")             # <<<<<<<<<<<<<<
 *     result.lidar_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 30, __pyx_L22_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 30, __pyx_L22_except_error)
    }
    goto __pyx_L22_except_error;

    /* "FromPyStructUtility":27
 *         raise ValueError("No value specified for struct attribute 'temp_status'")
 *     result.temp_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['lidar_status']
 *     except KeyError:
 */
    __pyx_L22_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L25_try_end:;
  }

  /* "FromPyStructUtility":31
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")
 *     result.lidar_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['lidar_link_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 31, __pyx_L1_error)
  __pyx_v_result.lidar_status = __pyx_t_10;

  /* "FromPyStructUtility":32
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")
 *     result.lidar_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['lidar_link_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":33
 *     result.lidar_status = value
 *     try:
 *         value = obj['lidar_link_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_lidar_link_status); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 33, __pyx_L28_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":32
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")
 *     result.lidar_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['lidar_link_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L33_try_end;
    __pyx_L28_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":34
 *     try:
 *         value = obj['lidar_link_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")
 *     result.lidar_link_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 34, __pyx_L30_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":35
 *         value = obj['lidar_link_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")             # <<<<<<<<<<<<<<
 *     result.lidar_link_status = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 35, __pyx_L30_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 35, __pyx_L30_except_error)
    }
    goto __pyx_L30_except_error;

    /* "FromPyStructUtility":32
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")
 *     result.lidar_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['lidar_link_status']
 *     except KeyError:
 */
    __pyx_L30_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L33_try_end:;
  }

  /* "FromPyStructUtility":36
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")
 *     result.lidar_link_status = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['firmware_err']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 36, __pyx_L1_error)
  __pyx_v_result.lidar_link_status = __pyx_t_10;

  /* "FromPyStructUtility":37
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")
 *     result.lidar_link_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['firmware_err']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":38
 *     result.lidar_link_status = value
 *     try:
 *         value = obj['firmware_err']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_firmware_err); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 38, __pyx_L36_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":37
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")
 *     result.lidar_link_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['firmware_err']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L41_try_end;
    __pyx_L36_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":39
 *     try:
 *         value = obj['firmware_err']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 39, __pyx_L38_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":40
 *         value = obj['firmware_err']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")             # <<<<<<<<<<<<<<
 *     result.firmware_err = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 40, __pyx_L38_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 40, __pyx_L38_except_error)
    }
    goto __pyx_L38_except_error;

    /* "FromPyStructUtility":37
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")
 *     result.lidar_link_status = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['firmware_err']
 *     except KeyError:
 */
    __pyx_L38_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L41_try_end:;
  }

  /* "FromPyStructUtility":41
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['rsvd']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 41, __pyx_L1_error)
  __pyx_v_result.firmware_err = __pyx_t_10;

  /* "FromPyStructUtility":42
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['rsvd']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_4, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "FromPyStructUtility":43
 *     result.firmware_err = value
 *     try:
 *         value = obj['rsvd']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 */
      __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_rsvd); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 43, __pyx_L44_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "FromPyStructUtility":42
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['rsvd']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L49_try_end;
    __pyx_L44_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":44
 *     try:
 *         value = obj['rsvd']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(1, 44, __pyx_L46_except_error)
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);

      /* "FromPyStructUtility":45
 *         value = obj['rsvd']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")             # <<<<<<<<<<<<<<
 *     result.rsvd = value
 *     try:
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 45, __pyx_L46_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 45, __pyx_L46_except_error)
    }
    goto __pyx_L46_except_error;

    /* "FromPyStructUtility":42
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")
 *     result.firmware_err = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['rsvd']
 *     except KeyError:
 */
    __pyx_L46_except_error:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_4, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L49_try_end:;
  }

  /* "FromPyStructUtility":46
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value             # <<<<<<<<<<<<<<
 *     try:
 *         value = obj['system_status']
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 46, __pyx_L1_error)
  __pyx_v_result.rsvd = __pyx_t_10;

  /* "FromPyStructUtility":47
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['system_status']
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "FromPyStructUtility":48
 *     result.rsvd = value
 *     try:
 *         value = obj['system_status']             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 */
      __pyx_t_6 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_system_status); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 48, __pyx_L52_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_value, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "FromPyStructUtility":47
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['system_status']
 *     except KeyError:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L57_try_end;
    __pyx_L52_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "FromPyStructUtility":49
 *     try:
 *         value = obj['system_status']
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 *     result.system_status = value
 */
    __pyx_t_2 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_2) {
      __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(1, 49, __pyx_L54_except_error)
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "FromPyStructUtility":50
 *         value = obj['system_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")             # <<<<<<<<<<<<<<
 *     result.system_status = value
 *     return result
 */
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 50, __pyx_L54_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_Raise(__pyx_t_9, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_ERR(1, 50, __pyx_L54_except_error)
    }
    goto __pyx_L54_except_error;

    /* "FromPyStructUtility":47
 *         raise ValueError("No value specified for struct attribute 'rsvd'")
 *     result.rsvd = value
 *     try:             # <<<<<<<<<<<<<<
 *         value = obj['system_status']
 *     except KeyError:
 */
    __pyx_L54_except_error:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L57_try_end:;
  }

  /* "FromPyStructUtility":51
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 *     result.system_status = value             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
  __pyx_t_10 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_10 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 51, __pyx_L1_error)
  __pyx_v_result.system_status = __pyx_t_10;

  /* "FromPyStructUtility":52
 *         raise ValueError("No value specified for struct attribute 'system_status'")
 *     result.system_status = value
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "FromPyStructUtility":12
 * 
 * @cname("__pyx_convert__from_py_HubErrorCode")
 * cdef struct_type __pyx_convert__from_py_HubErrorCode(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     if not PyMapping_Check(obj):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("FromPyStructUtility.__pyx_convert__from_py_HubErrorCode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "carray.from_py":79
 * 
 * @cname("__Pyx_carray_from_py_uint8_t")
 * cdef int __Pyx_carray_from_py_uint8_t(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

static int __Pyx_carray_from_py_uint8_t(PyObject *__pyx_v_o, uint8_t *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  uint8_t __pyx_t_11;
  char const *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_from_py_uint8_t", 1);

  /* "carray.from_py":80
 * @cname("__Pyx_carray_from_py_uint8_t")
 * cdef int __Pyx_carray_from_py_uint8_t(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length             # <<<<<<<<<<<<<<
 *     try:
 *         i = len(o)
 */
  __pyx_v_i = __pyx_v_length;

  /* "carray.from_py":81
 * cdef int __Pyx_carray_from_py_uint8_t(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "carray.from_py":82
 *     cdef Py_ssize_t i = length
 *     try:
 *         i = len(o)             # <<<<<<<<<<<<<<
 *     except (TypeError, OverflowError):
 *         pass
 */
      __pyx_t_4 = PyObject_Length(__pyx_v_o); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 82, __pyx_L3_error)
      __pyx_v_i = __pyx_t_4;

      /* "carray.from_py":81
 * cdef int __Pyx_carray_from_py_uint8_t(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "carray.from_py":83
 *     try:
 *         i = len(o)
 *     except (TypeError, OverflowError):             # <<<<<<<<<<<<<<
 *         pass
 *     if i == length:
 */
    __pyx_t_5 = __Pyx_PyErr_ExceptionMatches2(__pyx_builtin_TypeError, __pyx_builtin_OverflowError);
    if (__pyx_t_5) {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "carray.from_py":81
 * cdef int __Pyx_carray_from_py_uint8_t(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "carray.from_py":85
 *     except (TypeError, OverflowError):
 *         pass
 *     if i == length:             # <<<<<<<<<<<<<<
 *         for i, item in enumerate(o):
 *             if i >= length:
 */
  __pyx_t_6 = (__pyx_v_i == __pyx_v_length);
  if (__pyx_t_6) {

    /* "carray.from_py":86
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
      __pyx_t_7 = __pyx_v_o; __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 86, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 86, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_7))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_7);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
            #endif
            if (__pyx_t_8 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_10 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
          #else
          __pyx_t_10 = __Pyx_PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_7);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
            #endif
            if (__pyx_t_8 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_10 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
          #else
          __pyx_t_10 = __Pyx_PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          #endif
        }
      } else {
        __pyx_t_10 = __pyx_t_9(__pyx_t_7);
        if (unlikely(!__pyx_t_10)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(1, 86, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_10);
      }
      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_10);
      __pyx_t_10 = 0;
      __pyx_v_i = __pyx_t_4;
      __pyx_t_4 = (__pyx_t_4 + 1);

      /* "carray.from_py":87
 *     if i == length:
 *         for i, item in enumerate(o):
 *             if i >= length:             # <<<<<<<<<<<<<<
 *                 break
 *             v[i] = item
 */
      __pyx_t_6 = (__pyx_v_i >= __pyx_v_length);
      if (__pyx_t_6) {

        /* "carray.from_py":88
 *         for i, item in enumerate(o):
 *             if i >= length:
 *                 break             # <<<<<<<<<<<<<<
 *             v[i] = item
 *         else:
 */
        goto __pyx_L11_break;

        /* "carray.from_py":87
 *     if i == length:
 *         for i, item in enumerate(o):
 *             if i >= length:             # <<<<<<<<<<<<<<
 *                 break
 *             v[i] = item
 */
      }

      /* "carray.from_py":89
 *             if i >= length:
 *                 break
 *             v[i] = item             # <<<<<<<<<<<<<<
 *         else:
 *             i += 1  # convert index to length
 */
      __pyx_t_11 = __Pyx_PyInt_As_uint8_t(__pyx_v_item); if (unlikely((__pyx_t_11 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 89, __pyx_L1_error)
      (__pyx_v_v[__pyx_v_i]) = __pyx_t_11;

      /* "carray.from_py":86
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L13_for_else;
    __pyx_L11_break:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L14_for_end;
    /*else*/ {
      __pyx_L13_for_else:;

      /* "carray.from_py":91
 *             v[i] = item
 *         else:
 *             i += 1  # convert index to length             # <<<<<<<<<<<<<<
 *             if i == length:
 *                 return 0
 */
      __pyx_v_i = (__pyx_v_i + 1);

      /* "carray.from_py":92
 *         else:
 *             i += 1  # convert index to length
 *             if i == length:             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
      __pyx_t_6 = (__pyx_v_i == __pyx_v_length);
      if (__pyx_t_6) {

        /* "carray.from_py":93
 *             i += 1  # convert index to length
 *             if i == length:
 *                 return 0             # <<<<<<<<<<<<<<
 * 
 *     PyErr_Format(
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "carray.from_py":92
 *         else:
 *             i += 1  # convert index to length
 *             if i == length:             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
      }
    }
    __pyx_L14_for_end:;

    /* "carray.from_py":85
 *     except (TypeError, OverflowError):
 *         pass
 *     if i == length:             # <<<<<<<<<<<<<<
 *         for i, item in enumerate(o):
 *             if i >= length:
 */
  }

  /* "carray.from_py":98
 *         IndexError,
 *         ("too many values found during array assignment, expected %zd"
 *          if i >= length else             # <<<<<<<<<<<<<<
 *          "not enough values found during array assignment, expected %zd, got %zd"),
 *         length, i)
 */
  __pyx_t_6 = (__pyx_v_i >= __pyx_v_length);
  if (__pyx_t_6) {
    __pyx_t_12 = ((char const *)"too many values found during array assignment, expected %zd");
  } else {
    __pyx_t_12 = ((char const *)"not enough values found during array assignment, expected %zd, got %zd");
  }

  /* "carray.from_py":95
 *                 return 0
 * 
 *     PyErr_Format(             # <<<<<<<<<<<<<<
 *         IndexError,
 *         ("too many values found during array assignment, expected %zd"
 */
  __pyx_t_7 = PyErr_Format(__pyx_builtin_IndexError, __pyx_t_12, __pyx_v_length, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "carray.from_py":79
 * 
 * @cname("__Pyx_carray_from_py_uint8_t")
 * cdef int __Pyx_carray_from_py_uint8_t(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("carray.from_py.__Pyx_carray_from_py_uint8_t", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "FromPyUnionUtility":38
 * 
 * @cname("__pyx_convert__from_py_ErrorMessage")
 * cdef struct_type __pyx_convert__from_py_ErrorMessage(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 */

static ErrorMessage __pyx_convert__from_py_ErrorMessage(PyObject *__pyx_v_obj) {
  ErrorMessage __pyx_v_result;
  Py_ssize_t __pyx_v_length;
  PyObject *__pyx_v_last_found = NULL;
  ErrorMessage __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  uint32_t __pyx_t_6;
  LidarErrorCode __pyx_t_7;
  HubErrorCode __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert__from_py_ErrorMessage", 1);

  /* "FromPyUnionUtility":41
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  __pyx_t_1 = (!PyMapping_Check(__pyx_v_obj));
  if (__pyx_t_1) {

    /* "FromPyUnionUtility":42
 *     cdef Py_ssize_t length
 *     if not PyMapping_Check(obj):
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)             # <<<<<<<<<<<<<<
 * 
 *     last_found = None
 */
    __pyx_t_2 = __Pyx_RaiseUnexpectedTypeError(((char const *)"a mapping"), __pyx_v_obj); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(1, 42, __pyx_L1_error)

    /* "FromPyUnionUtility":41
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  }

  /* "FromPyUnionUtility":44
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     last_found = None             # <<<<<<<<<<<<<<
 *     length = len(obj)
 *     if length:
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_last_found = Py_None;

  /* "FromPyUnionUtility":45
 * 
 *     last_found = None
 *     length = len(obj)             # <<<<<<<<<<<<<<
 *     if length:
 *         if 'error_code' in obj:
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_obj); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 45, __pyx_L1_error)
  __pyx_v_length = __pyx_t_3;

  /* "FromPyUnionUtility":46
 *     last_found = None
 *     length = len(obj)
 *     if length:             # <<<<<<<<<<<<<<
 *         if 'error_code' in obj:
 *             if last_found is not None:
 */
  __pyx_t_1 = (__pyx_v_length != 0);
  if (__pyx_t_1) {

    /* "FromPyUnionUtility":47
 *     length = len(obj)
 *     if length:
 *         if 'error_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))
 */
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_error_code, __pyx_v_obj, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "FromPyUnionUtility":48
 *     if length:
 *         if 'error_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))
 *             last_found = 'error_code'
 */
      __pyx_t_1 = (__pyx_v_last_found != Py_None);
      if (unlikely(__pyx_t_1)) {

        /* "FromPyUnionUtility":49
 *         if 'error_code' in obj:
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))             # <<<<<<<<<<<<<<
 *             last_found = 'error_code'
 *             result.error_code = obj['error_code']
 */
        __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 49, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_last_found);
        __Pyx_GIVEREF(__pyx_v_last_found);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_last_found)) __PYX_ERR(1, 49, __pyx_L1_error);
        __Pyx_INCREF(__pyx_n_s_error_code);
        __Pyx_GIVEREF(__pyx_n_s_error_code);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_error_code)) __PYX_ERR(1, 49, __pyx_L1_error);
        __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_More_than_one_union_attribute_pa, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 49, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 49, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 49, __pyx_L1_error)

        /* "FromPyUnionUtility":48
 *     if length:
 *         if 'error_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))
 *             last_found = 'error_code'
 */
      }

      /* "FromPyUnionUtility":50
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))
 *             last_found = 'error_code'             # <<<<<<<<<<<<<<
 *             result.error_code = obj['error_code']
 *             length -= 1
 */
      __Pyx_INCREF(__pyx_n_s_error_code);
      __Pyx_DECREF_SET(__pyx_v_last_found, __pyx_n_s_error_code);

      /* "FromPyUnionUtility":51
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))
 *             last_found = 'error_code'
 *             result.error_code = obj['error_code']             # <<<<<<<<<<<<<<
 *             length -= 1
 *             if not length:
 */
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_error_code); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyInt_As_uint32_t(__pyx_t_4); if (unlikely((__pyx_t_6 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 51, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_result.error_code = __pyx_t_6;

      /* "FromPyUnionUtility":52
 *             last_found = 'error_code'
 *             result.error_code = obj['error_code']
 *             length -= 1             # <<<<<<<<<<<<<<
 *             if not length:
 *                 return result
 */
      __pyx_v_length = (__pyx_v_length - 1);

      /* "FromPyUnionUtility":53
 *             result.error_code = obj['error_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *         if 'lidar_error_code' in obj:
 */
      __pyx_t_1 = (!(__pyx_v_length != 0));
      if (__pyx_t_1) {

        /* "FromPyUnionUtility":54
 *             length -= 1
 *             if not length:
 *                 return result             # <<<<<<<<<<<<<<
 *         if 'lidar_error_code' in obj:
 *             if last_found is not None:
 */
        __pyx_r = __pyx_v_result;
        goto __pyx_L0;

        /* "FromPyUnionUtility":53
 *             result.error_code = obj['error_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *         if 'lidar_error_code' in obj:
 */
      }

      /* "FromPyUnionUtility":47
 *     length = len(obj)
 *     if length:
 *         if 'error_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'error_code'))
 */
    }

    /* "FromPyUnionUtility":55
 *             if not length:
 *                 return result
 *         if 'lidar_error_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))
 */
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_lidar_error_code, __pyx_v_obj, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(1, 55, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "FromPyUnionUtility":56
 *                 return result
 *         if 'lidar_error_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))
 *             last_found = 'lidar_error_code'
 */
      __pyx_t_1 = (__pyx_v_last_found != Py_None);
      if (unlikely(__pyx_t_1)) {

        /* "FromPyUnionUtility":57
 *         if 'lidar_error_code' in obj:
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))             # <<<<<<<<<<<<<<
 *             last_found = 'lidar_error_code'
 *             result.lidar_error_code = obj['lidar_error_code']
 */
        __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 57, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_last_found);
        __Pyx_GIVEREF(__pyx_v_last_found);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_last_found)) __PYX_ERR(1, 57, __pyx_L1_error);
        __Pyx_INCREF(__pyx_n_s_lidar_error_code);
        __Pyx_GIVEREF(__pyx_n_s_lidar_error_code);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_lidar_error_code)) __PYX_ERR(1, 57, __pyx_L1_error);
        __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_More_than_one_union_attribute_pa, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 57, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 57, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 57, __pyx_L1_error)

        /* "FromPyUnionUtility":56
 *                 return result
 *         if 'lidar_error_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))
 *             last_found = 'lidar_error_code'
 */
      }

      /* "FromPyUnionUtility":58
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))
 *             last_found = 'lidar_error_code'             # <<<<<<<<<<<<<<
 *             result.lidar_error_code = obj['lidar_error_code']
 *             length -= 1
 */
      __Pyx_INCREF(__pyx_n_s_lidar_error_code);
      __Pyx_DECREF_SET(__pyx_v_last_found, __pyx_n_s_lidar_error_code);

      /* "FromPyUnionUtility":59
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))
 *             last_found = 'lidar_error_code'
 *             result.lidar_error_code = obj['lidar_error_code']             # <<<<<<<<<<<<<<
 *             length -= 1
 *             if not length:
 */
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_lidar_error_code); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 59, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __pyx_convert__from_py_LidarErrorCode(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 59, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_result.lidar_error_code = __pyx_t_7;

      /* "FromPyUnionUtility":60
 *             last_found = 'lidar_error_code'
 *             result.lidar_error_code = obj['lidar_error_code']
 *             length -= 1             # <<<<<<<<<<<<<<
 *             if not length:
 *                 return result
 */
      __pyx_v_length = (__pyx_v_length - 1);

      /* "FromPyUnionUtility":61
 *             result.lidar_error_code = obj['lidar_error_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *         if 'hub_error_code' in obj:
 */
      __pyx_t_1 = (!(__pyx_v_length != 0));
      if (__pyx_t_1) {

        /* "FromPyUnionUtility":62
 *             length -= 1
 *             if not length:
 *                 return result             # <<<<<<<<<<<<<<
 *         if 'hub_error_code' in obj:
 *             if last_found is not None:
 */
        __pyx_r = __pyx_v_result;
        goto __pyx_L0;

        /* "FromPyUnionUtility":61
 *             result.lidar_error_code = obj['lidar_error_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *         if 'hub_error_code' in obj:
 */
      }

      /* "FromPyUnionUtility":55
 *             if not length:
 *                 return result
 *         if 'lidar_error_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'lidar_error_code'))
 */
    }

    /* "FromPyUnionUtility":63
 *             if not length:
 *                 return result
 *         if 'hub_error_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))
 */
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_hub_error_code, __pyx_v_obj, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(1, 63, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "FromPyUnionUtility":64
 *                 return result
 *         if 'hub_error_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))
 *             last_found = 'hub_error_code'
 */
      __pyx_t_1 = (__pyx_v_last_found != Py_None);
      if (unlikely(__pyx_t_1)) {

        /* "FromPyUnionUtility":65
 *         if 'hub_error_code' in obj:
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))             # <<<<<<<<<<<<<<
 *             last_found = 'hub_error_code'
 *             result.hub_error_code = obj['hub_error_code']
 */
        __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 65, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_last_found);
        __Pyx_GIVEREF(__pyx_v_last_found);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_last_found)) __PYX_ERR(1, 65, __pyx_L1_error);
        __Pyx_INCREF(__pyx_n_s_hub_error_code);
        __Pyx_GIVEREF(__pyx_n_s_hub_error_code);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_hub_error_code)) __PYX_ERR(1, 65, __pyx_L1_error);
        __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_More_than_one_union_attribute_pa, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 65, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 65, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 65, __pyx_L1_error)

        /* "FromPyUnionUtility":64
 *                 return result
 *         if 'hub_error_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))
 *             last_found = 'hub_error_code'
 */
      }

      /* "FromPyUnionUtility":66
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))
 *             last_found = 'hub_error_code'             # <<<<<<<<<<<<<<
 *             result.hub_error_code = obj['hub_error_code']
 *             length -= 1
 */
      __Pyx_INCREF(__pyx_n_s_hub_error_code);
      __Pyx_DECREF_SET(__pyx_v_last_found, __pyx_n_s_hub_error_code);

      /* "FromPyUnionUtility":67
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))
 *             last_found = 'hub_error_code'
 *             result.hub_error_code = obj['hub_error_code']             # <<<<<<<<<<<<<<
 *             length -= 1
 *             if not length:
 */
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_hub_error_code); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 67, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = __pyx_convert__from_py_HubErrorCode(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 67, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_result.hub_error_code = __pyx_t_8;

      /* "FromPyUnionUtility":68
 *             last_found = 'hub_error_code'
 *             result.hub_error_code = obj['hub_error_code']
 *             length -= 1             # <<<<<<<<<<<<<<
 *             if not length:
 *                 return result
 */
      __pyx_v_length = (__pyx_v_length - 1);

      /* "FromPyUnionUtility":69
 *             result.hub_error_code = obj['hub_error_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *     if last_found is None:
 */
      __pyx_t_1 = (!(__pyx_v_length != 0));
      if (__pyx_t_1) {

        /* "FromPyUnionUtility":70
 *             length -= 1
 *             if not length:
 *                 return result             # <<<<<<<<<<<<<<
 *     if last_found is None:
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 */
        __pyx_r = __pyx_v_result;
        goto __pyx_L0;

        /* "FromPyUnionUtility":69
 *             result.hub_error_code = obj['hub_error_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *     if last_found is None:
 */
      }

      /* "FromPyUnionUtility":63
 *             if not length:
 *                 return result
 *         if 'hub_error_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'hub_error_code'))
 */
    }

    /* "FromPyUnionUtility":46
 *     last_found = None
 *     length = len(obj)
 *     if length:             # <<<<<<<<<<<<<<
 *         if 'error_code' in obj:
 *             if last_found is not None:
 */
  }

  /* "FromPyUnionUtility":71
 *             if not length:
 *                 return result
 *     if last_found is None:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 *                          'error_code, lidar_error_code, hub_error_code')
 */
  __pyx_t_1 = (__pyx_v_last_found == Py_None);
  if (unlikely(__pyx_t_1)) {

    /* "FromPyUnionUtility":72
 *                 return result
 *     if last_found is None:
 *         raise ValueError("No value specified for any of the union attributes (%s)" %             # <<<<<<<<<<<<<<
 *                          'error_code, lidar_error_code, hub_error_code')
 *     return result
 */
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_No_value_specified_for_any_of_th, __pyx_kp_s_error_code_lidar_error_code_hub); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_ERR(1, 72, __pyx_L1_error)

    /* "FromPyUnionUtility":71
 *             if not length:
 *                 return result
 *     if last_found is None:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 *                          'error_code, lidar_error_code, hub_error_code')
 */
  }

  /* "FromPyUnionUtility":74
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 *                          'error_code, lidar_error_code, hub_error_code')
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "FromPyUnionUtility":38
 * 
 * @cname("__pyx_convert__from_py_ErrorMessage")
 * cdef struct_type __pyx_convert__from_py_ErrorMessage(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("FromPyUnionUtility.__pyx_convert__from_py_ErrorMessage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_last_found);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "carray.from_py":79
 * 
 * @cname("__Pyx_carray_from_py_char")
 * cdef int __Pyx_carray_from_py_char(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

static int __Pyx_carray_from_py_char(PyObject *__pyx_v_o, char *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  char __pyx_t_11;
  char const *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_from_py_char", 1);

  /* "carray.from_py":80
 * @cname("__Pyx_carray_from_py_char")
 * cdef int __Pyx_carray_from_py_char(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length             # <<<<<<<<<<<<<<
 *     try:
 *         i = len(o)
 */
  __pyx_v_i = __pyx_v_length;

  /* "carray.from_py":81
 * cdef int __Pyx_carray_from_py_char(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "carray.from_py":82
 *     cdef Py_ssize_t i = length
 *     try:
 *         i = len(o)             # <<<<<<<<<<<<<<
 *     except (TypeError, OverflowError):
 *         pass
 */
      __pyx_t_4 = PyObject_Length(__pyx_v_o); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 82, __pyx_L3_error)
      __pyx_v_i = __pyx_t_4;

      /* "carray.from_py":81
 * cdef int __Pyx_carray_from_py_char(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "carray.from_py":83
 *     try:
 *         i = len(o)
 *     except (TypeError, OverflowError):             # <<<<<<<<<<<<<<
 *         pass
 *     if i == length:
 */
    __pyx_t_5 = __Pyx_PyErr_ExceptionMatches2(__pyx_builtin_TypeError, __pyx_builtin_OverflowError);
    if (__pyx_t_5) {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "carray.from_py":81
 * cdef int __Pyx_carray_from_py_char(object o, base_type *v, Py_ssize_t length) except -1:
 *     cdef Py_ssize_t i = length
 *     try:             # <<<<<<<<<<<<<<
 *         i = len(o)
 *     except (TypeError, OverflowError):
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "carray.from_py":85
 *     except (TypeError, OverflowError):
 *         pass
 *     if i == length:             # <<<<<<<<<<<<<<
 *         for i, item in enumerate(o):
 *             if i >= length:
 */
  __pyx_t_6 = (__pyx_v_i == __pyx_v_length);
  if (__pyx_t_6) {

    /* "carray.from_py":86
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    __pyx_t_4 = 0;
    if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
      __pyx_t_7 = __pyx_v_o; __Pyx_INCREF(__pyx_t_7);
      __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 86, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 86, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_7))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_7);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
            #endif
            if (__pyx_t_8 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_10 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
          #else
          __pyx_t_10 = __Pyx_PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_7);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
            #endif
            if (__pyx_t_8 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_10 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(1, 86, __pyx_L1_error)
          #else
          __pyx_t_10 = __Pyx_PySequence_ITEM(__pyx_t_7, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 86, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          #endif
        }
      } else {
        __pyx_t_10 = __pyx_t_9(__pyx_t_7);
        if (unlikely(!__pyx_t_10)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(1, 86, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_10);
      }
      __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_10);
      __pyx_t_10 = 0;
      __pyx_v_i = __pyx_t_4;
      __pyx_t_4 = (__pyx_t_4 + 1);

      /* "carray.from_py":87
 *     if i == length:
 *         for i, item in enumerate(o):
 *             if i >= length:             # <<<<<<<<<<<<<<
 *                 break
 *             v[i] = item
 */
      __pyx_t_6 = (__pyx_v_i >= __pyx_v_length);
      if (__pyx_t_6) {

        /* "carray.from_py":88
 *         for i, item in enumerate(o):
 *             if i >= length:
 *                 break             # <<<<<<<<<<<<<<
 *             v[i] = item
 *         else:
 */
        goto __pyx_L11_break;

        /* "carray.from_py":87
 *     if i == length:
 *         for i, item in enumerate(o):
 *             if i >= length:             # <<<<<<<<<<<<<<
 *                 break
 *             v[i] = item
 */
      }

      /* "carray.from_py":89
 *             if i >= length:
 *                 break
 *             v[i] = item             # <<<<<<<<<<<<<<
 *         else:
 *             i += 1  # convert index to length
 */
      __pyx_t_11 = __Pyx_PyInt_As_char(__pyx_v_item); if (unlikely((__pyx_t_11 == (char)-1) && PyErr_Occurred())) __PYX_ERR(1, 89, __pyx_L1_error)
      (__pyx_v_v[__pyx_v_i]) = __pyx_t_11;

      /* "carray.from_py":86
 *         pass
 *     if i == length:
 *         for i, item in enumerate(o):             # <<<<<<<<<<<<<<
 *             if i >= length:
 *                 break
 */
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L13_for_else;
    __pyx_L11_break:;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L14_for_end;
    /*else*/ {
      __pyx_L13_for_else:;

      /* "carray.from_py":91
 *             v[i] = item
 *         else:
 *             i += 1  # convert index to length             # <<<<<<<<<<<<<<
 *             if i == length:
 *                 return 0
 */
      __pyx_v_i = (__pyx_v_i + 1);

      /* "carray.from_py":92
 *         else:
 *             i += 1  # convert index to length
 *             if i == length:             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
      __pyx_t_6 = (__pyx_v_i == __pyx_v_length);
      if (__pyx_t_6) {

        /* "carray.from_py":93
 *             i += 1  # convert index to length
 *             if i == length:
 *                 return 0             # <<<<<<<<<<<<<<
 * 
 *     PyErr_Format(
 */
        __pyx_r = 0;
        goto __pyx_L0;

        /* "carray.from_py":92
 *         else:
 *             i += 1  # convert index to length
 *             if i == length:             # <<<<<<<<<<<<<<
 *                 return 0
 * 
 */
      }
    }
    __pyx_L14_for_end:;

    /* "carray.from_py":85
 *     except (TypeError, OverflowError):
 *         pass
 *     if i == length:             # <<<<<<<<<<<<<<
 *         for i, item in enumerate(o):
 *             if i >= length:
 */
  }

  /* "carray.from_py":98
 *         IndexError,
 *         ("too many values found during array assignment, expected %zd"
 *          if i >= length else             # <<<<<<<<<<<<<<
 *          "not enough values found during array assignment, expected %zd, got %zd"),
 *         length, i)
 */
  __pyx_t_6 = (__pyx_v_i >= __pyx_v_length);
  if (__pyx_t_6) {
    __pyx_t_12 = ((char const *)"too many values found during array assignment, expected %zd");
  } else {
    __pyx_t_12 = ((char const *)"not enough values found during array assignment, expected %zd, got %zd");
  }

  /* "carray.from_py":95
 *                 return 0
 * 
 *     PyErr_Format(             # <<<<<<<<<<<<<<
 *         IndexError,
 *         ("too many values found during array assignment, expected %zd"
 */
  __pyx_t_7 = PyErr_Format(__pyx_builtin_IndexError, __pyx_t_12, __pyx_v_length, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "carray.from_py":79
 * 
 * @cname("__Pyx_carray_from_py_char")
 * cdef int __Pyx_carray_from_py_char(object o, base_type *v, Py_ssize_t length) except -1:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t i = length
 *     try:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("carray.from_py.__Pyx_carray_from_py_char", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "FromPyUnionUtility":38
 * 
 * @cname("__pyx_convert__from_py_StatusUnion")
 * cdef struct_type __pyx_convert__from_py_StatusUnion(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 */

static StatusUnion __pyx_convert__from_py_StatusUnion(PyObject *__pyx_v_obj) {
  StatusUnion __pyx_v_result;
  Py_ssize_t __pyx_v_length;
  PyObject *__pyx_v_last_found = NULL;
  StatusUnion __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  uint32_t __pyx_t_6;
  ErrorMessage __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert__from_py_StatusUnion", 1);

  /* "FromPyUnionUtility":41
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  __pyx_t_1 = (!PyMapping_Check(__pyx_v_obj));
  if (__pyx_t_1) {

    /* "FromPyUnionUtility":42
 *     cdef Py_ssize_t length
 *     if not PyMapping_Check(obj):
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)             # <<<<<<<<<<<<<<
 * 
 *     last_found = None
 */
    __pyx_t_2 = __Pyx_RaiseUnexpectedTypeError(((char const *)"a mapping"), __pyx_v_obj); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(1, 42, __pyx_L1_error)

    /* "FromPyUnionUtility":41
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 *     if not PyMapping_Check(obj):             # <<<<<<<<<<<<<<
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 */
  }

  /* "FromPyUnionUtility":44
 *         __Pyx_RaiseUnexpectedTypeError(b"a mapping", obj)
 * 
 *     last_found = None             # <<<<<<<<<<<<<<
 *     length = len(obj)
 *     if length:
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_last_found = Py_None;

  /* "FromPyUnionUtility":45
 * 
 *     last_found = None
 *     length = len(obj)             # <<<<<<<<<<<<<<
 *     if length:
 *         if 'progress' in obj:
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_obj); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 45, __pyx_L1_error)
  __pyx_v_length = __pyx_t_3;

  /* "FromPyUnionUtility":46
 *     last_found = None
 *     length = len(obj)
 *     if length:             # <<<<<<<<<<<<<<
 *         if 'progress' in obj:
 *             if last_found is not None:
 */
  __pyx_t_1 = (__pyx_v_length != 0);
  if (__pyx_t_1) {

    /* "FromPyUnionUtility":47
 *     length = len(obj)
 *     if length:
 *         if 'progress' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))
 */
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_progress, __pyx_v_obj, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "FromPyUnionUtility":48
 *     if length:
 *         if 'progress' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))
 *             last_found = 'progress'
 */
      __pyx_t_1 = (__pyx_v_last_found != Py_None);
      if (unlikely(__pyx_t_1)) {

        /* "FromPyUnionUtility":49
 *         if 'progress' in obj:
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))             # <<<<<<<<<<<<<<
 *             last_found = 'progress'
 *             result.progress = obj['progress']
 */
        __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 49, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_last_found);
        __Pyx_GIVEREF(__pyx_v_last_found);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_last_found)) __PYX_ERR(1, 49, __pyx_L1_error);
        __Pyx_INCREF(__pyx_n_s_progress);
        __Pyx_GIVEREF(__pyx_n_s_progress);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_progress)) __PYX_ERR(1, 49, __pyx_L1_error);
        __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_More_than_one_union_attribute_pa, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 49, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 49, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 49, __pyx_L1_error)

        /* "FromPyUnionUtility":48
 *     if length:
 *         if 'progress' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))
 *             last_found = 'progress'
 */
      }

      /* "FromPyUnionUtility":50
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))
 *             last_found = 'progress'             # <<<<<<<<<<<<<<
 *             result.progress = obj['progress']
 *             length -= 1
 */
      __Pyx_INCREF(__pyx_n_s_progress);
      __Pyx_DECREF_SET(__pyx_v_last_found, __pyx_n_s_progress);

      /* "FromPyUnionUtility":51
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))
 *             last_found = 'progress'
 *             result.progress = obj['progress']             # <<<<<<<<<<<<<<
 *             length -= 1
 *             if not length:
 */
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_progress); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 51, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyInt_As_uint32_t(__pyx_t_4); if (unlikely((__pyx_t_6 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 51, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_result.progress = __pyx_t_6;

      /* "FromPyUnionUtility":52
 *             last_found = 'progress'
 *             result.progress = obj['progress']
 *             length -= 1             # <<<<<<<<<<<<<<
 *             if not length:
 *                 return result
 */
      __pyx_v_length = (__pyx_v_length - 1);

      /* "FromPyUnionUtility":53
 *             result.progress = obj['progress']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *         if 'status_code' in obj:
 */
      __pyx_t_1 = (!(__pyx_v_length != 0));
      if (__pyx_t_1) {

        /* "FromPyUnionUtility":54
 *             length -= 1
 *             if not length:
 *                 return result             # <<<<<<<<<<<<<<
 *         if 'status_code' in obj:
 *             if last_found is not None:
 */
        __pyx_r = __pyx_v_result;
        goto __pyx_L0;

        /* "FromPyUnionUtility":53
 *             result.progress = obj['progress']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *         if 'status_code' in obj:
 */
      }

      /* "FromPyUnionUtility":47
 *     length = len(obj)
 *     if length:
 *         if 'progress' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'progress'))
 */
    }

    /* "FromPyUnionUtility":55
 *             if not length:
 *                 return result
 *         if 'status_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))
 */
    __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_status_code, __pyx_v_obj, Py_EQ)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(1, 55, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "FromPyUnionUtility":56
 *                 return result
 *         if 'status_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))
 *             last_found = 'status_code'
 */
      __pyx_t_1 = (__pyx_v_last_found != Py_None);
      if (unlikely(__pyx_t_1)) {

        /* "FromPyUnionUtility":57
 *         if 'status_code' in obj:
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))             # <<<<<<<<<<<<<<
 *             last_found = 'status_code'
 *             result.status_code = obj['status_code']
 */
        __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 57, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_last_found);
        __Pyx_GIVEREF(__pyx_v_last_found);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_last_found)) __PYX_ERR(1, 57, __pyx_L1_error);
        __Pyx_INCREF(__pyx_n_s_status_code);
        __Pyx_GIVEREF(__pyx_n_s_status_code);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_status_code)) __PYX_ERR(1, 57, __pyx_L1_error);
        __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_More_than_one_union_attribute_pa, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 57, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 57, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(1, 57, __pyx_L1_error)

        /* "FromPyUnionUtility":56
 *                 return result
 *         if 'status_code' in obj:
 *             if last_found is not None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))
 *             last_found = 'status_code'
 */
      }

      /* "FromPyUnionUtility":58
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))
 *             last_found = 'status_code'             # <<<<<<<<<<<<<<
 *             result.status_code = obj['status_code']
 *             length -= 1
 */
      __Pyx_INCREF(__pyx_n_s_status_code);
      __Pyx_DECREF_SET(__pyx_v_last_found, __pyx_n_s_status_code);

      /* "FromPyUnionUtility":59
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))
 *             last_found = 'status_code'
 *             result.status_code = obj['status_code']             # <<<<<<<<<<<<<<
 *             length -= 1
 *             if not length:
 */
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_obj, __pyx_n_s_status_code); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 59, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __pyx_convert__from_py_ErrorMessage(__pyx_t_4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 59, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_result.status_code = __pyx_t_7;

      /* "FromPyUnionUtility":60
 *             last_found = 'status_code'
 *             result.status_code = obj['status_code']
 *             length -= 1             # <<<<<<<<<<<<<<
 *             if not length:
 *                 return result
 */
      __pyx_v_length = (__pyx_v_length - 1);

      /* "FromPyUnionUtility":61
 *             result.status_code = obj['status_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *     if last_found is None:
 */
      __pyx_t_1 = (!(__pyx_v_length != 0));
      if (__pyx_t_1) {

        /* "FromPyUnionUtility":62
 *             length -= 1
 *             if not length:
 *                 return result             # <<<<<<<<<<<<<<
 *     if last_found is None:
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 */
        __pyx_r = __pyx_v_result;
        goto __pyx_L0;

        /* "FromPyUnionUtility":61
 *             result.status_code = obj['status_code']
 *             length -= 1
 *             if not length:             # <<<<<<<<<<<<<<
 *                 return result
 *     if last_found is None:
 */
      }

      /* "FromPyUnionUtility":55
 *             if not length:
 *                 return result
 *         if 'status_code' in obj:             # <<<<<<<<<<<<<<
 *             if last_found is not None:
 *                 raise ValueError("More than one union attribute passed: '%s' and '%s'" % (last_found, 'status_code'))
 */
    }

    /* "FromPyUnionUtility":46
 *     last_found = None
 *     length = len(obj)
 *     if length:             # <<<<<<<<<<<<<<
 *         if 'progress' in obj:
 *             if last_found is not None:
 */
  }

  /* "FromPyUnionUtility":63
 *             if not length:
 *                 return result
 *     if last_found is None:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 *                          'progress, status_code')
 */
  __pyx_t_1 = (__pyx_v_last_found == Py_None);
  if (unlikely(__pyx_t_1)) {

    /* "FromPyUnionUtility":64
 *                 return result
 *     if last_found is None:
 *         raise ValueError("No value specified for any of the union attributes (%s)" %             # <<<<<<<<<<<<<<
 *                          'progress, status_code')
 *     return result
 */
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_No_value_specified_for_any_of_th, __pyx_kp_s_progress_status_code); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 64, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 64, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_ERR(1, 64, __pyx_L1_error)

    /* "FromPyUnionUtility":63
 *             if not length:
 *                 return result
 *     if last_found is None:             # <<<<<<<<<<<<<<
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 *                          'progress, status_code')
 */
  }

  /* "FromPyUnionUtility":66
 *         raise ValueError("No value specified for any of the union attributes (%s)" %
 *                          'progress, status_code')
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "FromPyUnionUtility":38
 * 
 * @cname("__pyx_convert__from_py_StatusUnion")
 * cdef struct_type __pyx_convert__from_py_StatusUnion(obj) except *:             # <<<<<<<<<<<<<<
 *     cdef struct_type result
 *     cdef Py_ssize_t length
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("FromPyUnionUtility.__pyx_convert__from_py_StatusUnion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_last_found);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/complex.pxd":19
 * 
 *         @property
 *         cdef inline double real(self) noexcept:             # <<<<<<<<<<<<<<
 *             return self.cval.real
 * 
 */

static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4real_real(PyComplexObject *__pyx_v_self) {
  double __pyx_r;

  /* "cpython/complex.pxd":20
 *         @property
 *         cdef inline double real(self) noexcept:
 *             return self.cval.real             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = __pyx_v_self->cval.real;
  goto __pyx_L0;

  /* "cpython/complex.pxd":19
 * 
 *         @property
 *         cdef inline double real(self) noexcept:             # <<<<<<<<<<<<<<
 *             return self.cval.real
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "cpython/complex.pxd":23
 * 
 *         @property
 *         cdef inline double imag(self) noexcept:             # <<<<<<<<<<<<<<
 *             return self.cval.imag
 * 
 */

static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4imag_imag(PyComplexObject *__pyx_v_self) {
  double __pyx_r;

  /* "cpython/complex.pxd":24
 *         @property
 *         cdef inline double imag(self) noexcept:
 *             return self.cval.imag             # <<<<<<<<<<<<<<
 * 
 *     # PyTypeObject PyComplex_Type
 */
  __pyx_r = __pyx_v_self->cval.imag;
  goto __pyx_L0;

  /* "cpython/complex.pxd":23
 * 
 *         @property
 *         cdef inline double imag(self) noexcept:             # <<<<<<<<<<<<<<
 *             return self.cval.imag
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */

static CYTHON_INLINE PyObject *__pyx_f_7cpython_11contextvars_get_value(PyObject *__pyx_v_var, struct __pyx_opt_args_7cpython_11contextvars_get_value *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject *)Py_None);
  PyObject *__pyx_v_value;
  PyObject *__pyx_v_pyvalue = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }

  /* "cpython/contextvars.pxd":117
 *     or None if no such value or default was found.
 *     """
 *     cdef PyObject *value = NULL             # <<<<<<<<<<<<<<
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:
 */
  __pyx_v_value = NULL;

  /* "cpython/contextvars.pxd":118
 *     """
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)             # <<<<<<<<<<<<<<
 *     if value is NULL:
 *         # context variable does not have a default
 */
  __pyx_t_1 = PyContextVar_Get(__pyx_v_var, NULL, (&__pyx_v_value)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 118, __pyx_L1_error)

  /* "cpython/contextvars.pxd":119
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:             # <<<<<<<<<<<<<<
 *         # context variable does not have a default
 *         pyvalue = default_value
 */
  __pyx_t_2 = (__pyx_v_value == NULL);
  if (__pyx_t_2) {

    /* "cpython/contextvars.pxd":121
 *     if value is NULL:
 *         # context variable does not have a default
 *         pyvalue = default_value             # <<<<<<<<<<<<<<
 *     else:
 *         # value or default value of context variable
 */
    __Pyx_INCREF(__pyx_v_default_value);
    __pyx_v_pyvalue = __pyx_v_default_value;

    /* "cpython/contextvars.pxd":119
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:             # <<<<<<<<<<<<<<
 *         # context variable does not have a default
 *         pyvalue = default_value
 */
    goto __pyx_L3;
  }

  /* "cpython/contextvars.pxd":124
 *     else:
 *         # value or default value of context variable
 *         pyvalue = <object>value             # <<<<<<<<<<<<<<
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue
 */
  /*else*/ {
    __pyx_t_3 = ((PyObject *)__pyx_v_value);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_pyvalue = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "cpython/contextvars.pxd":125
 *         # value or default value of context variable
 *         pyvalue = <object>value
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'             # <<<<<<<<<<<<<<
 *     return pyvalue
 * 
 */
    Py_XDECREF(__pyx_v_value);
  }
  __pyx_L3:;

  /* "cpython/contextvars.pxd":126
 *         pyvalue = <object>value
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyvalue);
  __pyx_r = __pyx_v_pyvalue;
  goto __pyx_L0;

  /* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cpython.contextvars.get_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */

static CYTHON_INLINE PyObject *__pyx_f_7cpython_11contextvars_get_value_no_default(PyObject *__pyx_v_var, struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject *)Py_None);
  PyObject *__pyx_v_value;
  PyObject *__pyx_v_pyvalue = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value_no_default", 1);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }

  /* "cpython/contextvars.pxd":135
 *     Ignores the default value of the context variable, if any.
 *     """
 *     cdef PyObject *value = NULL             # <<<<<<<<<<<<<<
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)
 *     # value of context variable or 'default_value'
 */
  __pyx_v_value = NULL;

  /* "cpython/contextvars.pxd":136
 *     """
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)             # <<<<<<<<<<<<<<
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value
 */
  __pyx_t_1 = PyContextVar_Get(__pyx_v_var, ((PyObject *)__pyx_v_default_value), (&__pyx_v_value)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 136, __pyx_L1_error)

  /* "cpython/contextvars.pxd":138
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value             # <<<<<<<<<<<<<<
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_value);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_pyvalue = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cpython/contextvars.pxd":139
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'             # <<<<<<<<<<<<<<
 *     return pyvalue
 */
  Py_XDECREF(__pyx_v_value);

  /* "cpython/contextvars.pxd":140
 *     pyvalue = <object>value
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyvalue);
  __pyx_r = __pyx_v_pyvalue;
  goto __pyx_L0;

  /* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cpython.contextvars.get_value_no_default", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "array.pxd":104
 *             __data_union data
 * 
 *         def __getbuffer__(self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

/* Python wrapper */
CYTHON_UNUSED static int __pyx_pw_7cpython_5array_5array_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
CYTHON_UNUSED static int __pyx_pw_7cpython_5array_5array_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7cpython_5array_5array___getbuffer__(((arrayobject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cpython_5array_5array___getbuffer__(arrayobject *__pyx_v_self, Py_buffer *__pyx_v_info, CYTHON_UNUSED int __pyx_v_flags) {
  PyObject *__pyx_v_item_count = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  char *__pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  char __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  if (unlikely(__pyx_v_info == NULL)) {
    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
    return -1;
  }
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "array.pxd":109
 *             # In particular strided access is always provided regardless
 *             # of flags
 *             item_count = Py_SIZE(self)             # <<<<<<<<<<<<<<
 * 
 *             info.suboffsets = NULL
 */
  __pyx_t_1 = PyInt_FromSsize_t(Py_SIZE(((PyObject *)__pyx_v_self))); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_item_count = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "array.pxd":111
 *             item_count = Py_SIZE(self)
 * 
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.buf = self.data.as_chars
 *             info.readonly = 0
 */
  __pyx_v_info->suboffsets = NULL;

  /* "array.pxd":112
 * 
 *             info.suboffsets = NULL
 *             info.buf = self.data.as_chars             # <<<<<<<<<<<<<<
 *             info.readonly = 0
 *             info.ndim = 1
 */
  __pyx_t_2 = __pyx_v_self->data.as_chars;
  __pyx_v_info->buf = __pyx_t_2;

  /* "array.pxd":113
 *             info.suboffsets = NULL
 *             info.buf = self.data.as_chars
 *             info.readonly = 0             # <<<<<<<<<<<<<<
 *             info.ndim = 1
 *             info.itemsize = self.ob_descr.itemsize   # e.g. sizeof(float)
 */
  __pyx_v_info->readonly = 0;

  /* "array.pxd":114
 *             info.buf = self.data.as_chars
 *             info.readonly = 0
 *             info.ndim = 1             # <<<<<<<<<<<<<<
 *             info.itemsize = self.ob_descr.itemsize   # e.g. sizeof(float)
 *             info.len = info.itemsize * item_count
 */
  __pyx_v_info->ndim = 1;

  /* "array.pxd":115
 *             info.readonly = 0
 *             info.ndim = 1
 *             info.itemsize = self.ob_descr.itemsize   # e.g. sizeof(float)             # <<<<<<<<<<<<<<
 *             info.len = info.itemsize * item_count
 * 
 */
  __pyx_t_3 = __pyx_v_self->ob_descr->itemsize;
  __pyx_v_info->itemsize = __pyx_t_3;

  /* "array.pxd":116
 *             info.ndim = 1
 *             info.itemsize = self.ob_descr.itemsize   # e.g. sizeof(float)
 *             info.len = info.itemsize * item_count             # <<<<<<<<<<<<<<
 * 
 *             info.shape = <Py_ssize_t*> PyObject_Malloc(sizeof(Py_ssize_t) + 2)
 */
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_v_info->itemsize); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_v_item_count); if (unlikely(!__pyx_t_4)) __PYX_ERR(3, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_t_4); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(3, 116, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_info->len = __pyx_t_5;

  /* "array.pxd":118
 *             info.len = info.itemsize * item_count
 * 
 *             info.shape = <Py_ssize_t*> PyObject_Malloc(sizeof(Py_ssize_t) + 2)             # <<<<<<<<<<<<<<
 *             if not info.shape:
 *                 raise MemoryError()
 */
  __pyx_v_info->shape = ((Py_ssize_t *)PyObject_Malloc(((sizeof(Py_ssize_t)) + 2)));

  /* "array.pxd":119
 * 
 *             info.shape = <Py_ssize_t*> PyObject_Malloc(sizeof(Py_ssize_t) + 2)
 *             if not info.shape:             # <<<<<<<<<<<<<<
 *                 raise MemoryError()
 *             info.shape[0] = item_count      # constant regardless of resizing
 */
  __pyx_t_6 = (!(__pyx_v_info->shape != 0));
  if (unlikely(__pyx_t_6)) {

    /* "array.pxd":120
 *             info.shape = <Py_ssize_t*> PyObject_Malloc(sizeof(Py_ssize_t) + 2)
 *             if not info.shape:
 *                 raise MemoryError()             # <<<<<<<<<<<<<<
 *             info.shape[0] = item_count      # constant regardless of resizing
 *             info.strides = &info.itemsize
 */
    PyErr_NoMemory(); __PYX_ERR(3, 120, __pyx_L1_error)

    /* "array.pxd":119
 * 
 *             info.shape = <Py_ssize_t*> PyObject_Malloc(sizeof(Py_ssize_t) + 2)
 *             if not info.shape:             # <<<<<<<<<<<<<<
 *                 raise MemoryError()
 *             info.shape[0] = item_count      # constant regardless of resizing
 */
  }

  /* "array.pxd":121
 *             if not info.shape:
 *                 raise MemoryError()
 *             info.shape[0] = item_count      # constant regardless of resizing             # <<<<<<<<<<<<<<
 *             info.strides = &info.itemsize
 * 
 */
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_item_count); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(3, 121, __pyx_L1_error)
  (__pyx_v_info->shape[0]) = __pyx_t_5;

  /* "array.pxd":122
 *                 raise MemoryError()
 *             info.shape[0] = item_count      # constant regardless of resizing
 *             info.strides = &info.itemsize             # <<<<<<<<<<<<<<
 * 
 *             info.format = <char*> (info.shape + 1)
 */
  __pyx_v_info->strides = (&__pyx_v_info->itemsize);

  /* "array.pxd":124
 *             info.strides = &info.itemsize
 * 
 *             info.format = <char*> (info.shape + 1)             # <<<<<<<<<<<<<<
 *             info.format[0] = self.ob_descr.typecode
 *             info.format[1] = 0
 */
  __pyx_v_info->format = ((char *)(__pyx_v_info->shape + 1));

  /* "array.pxd":125
 * 
 *             info.format = <char*> (info.shape + 1)
 *             info.format[0] = self.ob_descr.typecode             # <<<<<<<<<<<<<<
 *             info.format[1] = 0
 *             info.obj = self
 */
  __pyx_t_7 = __pyx_v_self->ob_descr->typecode;
  (__pyx_v_info->format[0]) = __pyx_t_7;

  /* "array.pxd":126
 *             info.format = <char*> (info.shape + 1)
 *             info.format[0] = self.ob_descr.typecode
 *             info.format[1] = 0             # <<<<<<<<<<<<<<
 *             info.obj = self
 * 
 */
  (__pyx_v_info->format[1]) = 0;

  /* "array.pxd":127
 *             info.format[0] = self.ob_descr.typecode
 *             info.format[1] = 0
 *             info.obj = self             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(self, Py_buffer* info):
 */
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "array.pxd":104
 *             __data_union data
 * 
 *         def __getbuffer__(self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fulfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cpython.array.array.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_item_count);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "array.pxd":129
 *             info.obj = self
 * 
 *         def __releasebuffer__(self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             PyObject_Free(info.shape)
 * 
 */

/* Python wrapper */
CYTHON_UNUSED static void __pyx_pw_7cpython_5array_5array_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
CYTHON_UNUSED static void __pyx_pw_7cpython_5array_5array_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_7cpython_5array_5array_2__releasebuffer__(((arrayobject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_7cpython_5array_5array_2__releasebuffer__(CYTHON_UNUSED arrayobject *__pyx_v_self, Py_buffer *__pyx_v_info) {

  /* "array.pxd":130
 * 
 *         def __releasebuffer__(self, Py_buffer* info):
 *             PyObject_Free(info.shape)             # <<<<<<<<<<<<<<
 * 
 *     array newarrayobject(PyTypeObject* type, Py_ssize_t size, arraydescr *descr)
 */
  PyObject_Free(__pyx_v_info->shape);

  /* "array.pxd":129
 *             info.obj = self
 * 
 *         def __releasebuffer__(self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             PyObject_Free(info.shape)
 * 
 */

  /* function exit code */
}

/* "array.pxd":141
 * 
 * 
 * cdef inline array clone(array template, Py_ssize_t length, bint zero):             # <<<<<<<<<<<<<<
 *     """ fast creation of a new array, given a template array.
 *     type will be same as template.
 */

static CYTHON_INLINE arrayobject *__pyx_f_7cpython_5array_clone(arrayobject *__pyx_v_template, Py_ssize_t __pyx_v_length, int __pyx_v_zero) {
  arrayobject *__pyx_v_op = 0;
  arrayobject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clone", 1);

  /* "array.pxd":145
 *     type will be same as template.
 *     if zero is true, new array will be initialized with zeroes."""
 *     cdef array op = newarrayobject(Py_TYPE(template), length, template.ob_descr)             # <<<<<<<<<<<<<<
 *     if zero and op is not None:
 *         memset(op.data.as_chars, 0, length * op.ob_descr.itemsize)
 */
  __pyx_t_1 = ((PyObject *)newarrayobject(Py_TYPE(((PyObject *)__pyx_v_template)), __pyx_v_length, __pyx_v_template->ob_descr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_op = ((arrayobject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "array.pxd":146
 *     if zero is true, new array will be initialized with zeroes."""
 *     cdef array op = newarrayobject(Py_TYPE(template), length, template.ob_descr)
 *     if zero and op is not None:             # <<<<<<<<<<<<<<
 *         memset(op.data.as_chars, 0, length * op.ob_descr.itemsize)
 *     return op
 */
  if (__pyx_v_zero) {
  } else {
    __pyx_t_2 = __pyx_v_zero;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (((PyObject *)__pyx_v_op) != Py_None);
  __pyx_t_2 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "array.pxd":147
 *     cdef array op = newarrayobject(Py_TYPE(template), length, template.ob_descr)
 *     if zero and op is not None:
 *         memset(op.data.as_chars, 0, length * op.ob_descr.itemsize)             # <<<<<<<<<<<<<<
 *     return op
 * 
 */
    (void)(memset(__pyx_v_op->data.as_chars, 0, (__pyx_v_length * __pyx_v_op->ob_descr->itemsize)));

    /* "array.pxd":146
 *     if zero is true, new array will be initialized with zeroes."""
 *     cdef array op = newarrayobject(Py_TYPE(template), length, template.ob_descr)
 *     if zero and op is not None:             # <<<<<<<<<<<<<<
 *         memset(op.data.as_chars, 0, length * op.ob_descr.itemsize)
 *     return op
 */
  }

  /* "array.pxd":148
 *     if zero and op is not None:
 *         memset(op.data.as_chars, 0, length * op.ob_descr.itemsize)
 *     return op             # <<<<<<<<<<<<<<
 * 
 * cdef inline array copy(array self):
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_op);
  __pyx_r = __pyx_v_op;
  goto __pyx_L0;

  /* "array.pxd":141
 * 
 * 
 * cdef inline array clone(array template, Py_ssize_t length, bint zero):             # <<<<<<<<<<<<<<
 *     """ fast creation of a new array, given a template array.
 *     type will be same as template.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cpython.array.clone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_op);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "array.pxd":150
 *     return op
 * 
 * cdef inline array copy(array self):             # <<<<<<<<<<<<<<
 *     """ make a copy of an array. """
 *     cdef array op = newarrayobject(Py_TYPE(self), Py_SIZE(self), self.ob_descr)
 */

static CYTHON_INLINE arrayobject *__pyx_f_7cpython_5array_copy(arrayobject *__pyx_v_self) {
  arrayobject *__pyx_v_op = 0;
  arrayobject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy", 1);

  /* "array.pxd":152
 * cdef inline array copy(array self):
 *     """ make a copy of an array. """
 *     cdef array op = newarrayobject(Py_TYPE(self), Py_SIZE(self), self.ob_descr)             # <<<<<<<<<<<<<<
 *     memcpy(op.data.as_chars, self.data.as_chars, Py_SIZE(op) * op.ob_descr.itemsize)
 *     return op
 */
  __pyx_t_1 = ((PyObject *)newarrayobject(Py_TYPE(((PyObject *)__pyx_v_self)), Py_SIZE(((PyObject *)__pyx_v_self)), __pyx_v_self->ob_descr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_op = ((arrayobject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "array.pxd":153
 *     """ make a copy of an array. """
 *     cdef array op = newarrayobject(Py_TYPE(self), Py_SIZE(self), self.ob_descr)
 *     memcpy(op.data.as_chars, self.data.as_chars, Py_SIZE(op) * op.ob_descr.itemsize)             # <<<<<<<<<<<<<<
 *     return op
 * 
 */
  (void)(memcpy(__pyx_v_op->data.as_chars, __pyx_v_self->data.as_chars, (Py_SIZE(((PyObject *)__pyx_v_op)) * __pyx_v_op->ob_descr->itemsize)));

  /* "array.pxd":154
 *     cdef array op = newarrayobject(Py_TYPE(self), Py_SIZE(self), self.ob_descr)
 *     memcpy(op.data.as_chars, self.data.as_chars, Py_SIZE(op) * op.ob_descr.itemsize)
 *     return op             # <<<<<<<<<<<<<<
 * 
 * cdef inline int extend_buffer(array self, char* stuff, Py_ssize_t n) except -1:
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_op);
  __pyx_r = __pyx_v_op;
  goto __pyx_L0;

  /* "array.pxd":150
 *     return op
 * 
 * cdef inline array copy(array self):             # <<<<<<<<<<<<<<
 *     """ make a copy of an array. """
 *     cdef array op = newarrayobject(Py_TYPE(self), Py_SIZE(self), self.ob_descr)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cpython.array.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_op);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "array.pxd":156
 *     return op
 * 
 * cdef inline int extend_buffer(array self, char* stuff, Py_ssize_t n) except -1:             # <<<<<<<<<<<<<<
 *     """ efficient appending of new stuff of same type
 *     (e.g. of same array type)
 */

static CYTHON_INLINE int __pyx_f_7cpython_5array_extend_buffer(arrayobject *__pyx_v_self, char *__pyx_v_stuff, Py_ssize_t __pyx_v_n) {
  Py_ssize_t __pyx_v_itemsize;
  Py_ssize_t __pyx_v_origsize;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "array.pxd":160
 *     (e.g. of same array type)
 *     n: number of elements (not number of bytes!) """
 *     cdef Py_ssize_t itemsize = self.ob_descr.itemsize             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t origsize = Py_SIZE(self)
 *     resize_smart(self, origsize + n)
 */
  __pyx_t_1 = __pyx_v_self->ob_descr->itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "array.pxd":161
 *     n: number of elements (not number of bytes!) """
 *     cdef Py_ssize_t itemsize = self.ob_descr.itemsize
 *     cdef Py_ssize_t origsize = Py_SIZE(self)             # <<<<<<<<<<<<<<
 *     resize_smart(self, origsize + n)
 *     memcpy(self.data.as_chars + origsize * itemsize, stuff, n * itemsize)
 */
  __pyx_v_origsize = Py_SIZE(((PyObject *)__pyx_v_self));

  /* "array.pxd":162
 *     cdef Py_ssize_t itemsize = self.ob_descr.itemsize
 *     cdef Py_ssize_t origsize = Py_SIZE(self)
 *     resize_smart(self, origsize + n)             # <<<<<<<<<<<<<<
 *     memcpy(self.data.as_chars + origsize * itemsize, stuff, n * itemsize)
 *     return 0
 */
  __pyx_t_1 = resize_smart(__pyx_v_self, (__pyx_v_origsize + __pyx_v_n)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(3, 162, __pyx_L1_error)

  /* "array.pxd":163
 *     cdef Py_ssize_t origsize = Py_SIZE(self)
 *     resize_smart(self, origsize + n)
 *     memcpy(self.data.as_chars + origsize * itemsize, stuff, n * itemsize)             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
  (void)(memcpy((__pyx_v_self->data.as_chars + (__pyx_v_origsize * __pyx_v_itemsize)), __pyx_v_stuff, (__pyx_v_n * __pyx_v_itemsize)));

  /* "array.pxd":164
 *     resize_smart(self, origsize + n)
 *     memcpy(self.data.as_chars + origsize * itemsize, stuff, n * itemsize)
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * cdef inline int extend(array self, array other) except -1:
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "array.pxd":156
 *     return op
 * 
 * cdef inline int extend_buffer(array self, char* stuff, Py_ssize_t n) except -1:             # <<<<<<<<<<<<<<
 *     """ efficient appending of new stuff of same type
 *     (e.g. of same array type)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cpython.array.extend_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "array.pxd":166
 *     return 0
 * 
 * cdef inline int extend(array self, array other) except -1:             # <<<<<<<<<<<<<<
 *     """ extend array with data from another array; types must match. """
 *     if self.ob_descr.typecode != other.ob_descr.typecode:
 */

static CYTHON_INLINE int __pyx_f_7cpython_5array_extend(arrayobject *__pyx_v_self, arrayobject *__pyx_v_other) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "array.pxd":168
 * cdef inline int extend(array self, array other) except -1:
 *     """ extend array with data from another array; types must match. """
 *     if self.ob_descr.typecode != other.ob_descr.typecode:             # <<<<<<<<<<<<<<
 *         PyErr_BadArgument()
 *     return extend_buffer(self, other.data.as_chars, Py_SIZE(other))
 */
  __pyx_t_1 = (__pyx_v_self->ob_descr->typecode != __pyx_v_other->ob_descr->typecode);
  if (__pyx_t_1) {

    /* "array.pxd":169
 *     """ extend array with data from another array; types must match. """
 *     if self.ob_descr.typecode != other.ob_descr.typecode:
 *         PyErr_BadArgument()             # <<<<<<<<<<<<<<
 *     return extend_buffer(self, other.data.as_chars, Py_SIZE(other))
 * 
 */
    __pyx_t_2 = PyErr_BadArgument(); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(3, 169, __pyx_L1_error)

    /* "array.pxd":168
 * cdef inline int extend(array self, array other) except -1:
 *     """ extend array with data from another array; types must match. """
 *     if self.ob_descr.typecode != other.ob_descr.typecode:             # <<<<<<<<<<<<<<
 *         PyErr_BadArgument()
 *     return extend_buffer(self, other.data.as_chars, Py_SIZE(other))
 */
  }

  /* "array.pxd":170
 *     if self.ob_descr.typecode != other.ob_descr.typecode:
 *         PyErr_BadArgument()
 *     return extend_buffer(self, other.data.as_chars, Py_SIZE(other))             # <<<<<<<<<<<<<<
 * 
 * cdef inline void zero(array self) noexcept:
 */
  __pyx_t_2 = __pyx_f_7cpython_5array_extend_buffer(__pyx_v_self, __pyx_v_other->data.as_chars, Py_SIZE(((PyObject *)__pyx_v_other))); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(3, 170, __pyx_L1_error)
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "array.pxd":166
 *     return 0
 * 
 * cdef inline int extend(array self, array other) except -1:             # <<<<<<<<<<<<<<
 *     """ extend array with data from another array; types must match. """
 *     if self.ob_descr.typecode != other.ob_descr.typecode:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cpython.array.extend", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "array.pxd":172
 *     return extend_buffer(self, other.data.as_chars, Py_SIZE(other))
 * 
 * cdef inline void zero(array self) noexcept:             # <<<<<<<<<<<<<<
 *     """ set all elements of array to zero. """
 *     memset(self.data.as_chars, 0, Py_SIZE(self) * self.ob_descr.itemsize)
 */

static CYTHON_INLINE void __pyx_f_7cpython_5array_zero(arrayobject *__pyx_v_self) {

  /* "array.pxd":174
 * cdef inline void zero(array self) noexcept:
 *     """ set all elements of array to zero. """
 *     memset(self.data.as_chars, 0, Py_SIZE(self) * self.ob_descr.itemsize)             # <<<<<<<<<<<<<<
 */
  (void)(memset(__pyx_v_self->data.as_chars, 0, (Py_SIZE(((PyObject *)__pyx_v_self)) * __pyx_v_self->ob_descr->itemsize)));

  /* "array.pxd":172
 *     return extend_buffer(self, other.data.as_chars, Py_SIZE(other))
 * 
 * cdef inline void zero(array self) noexcept:             # <<<<<<<<<<<<<<
 *     """ set all elements of array to zero. """
 *     memset(self.data.as_chars, 0, Py_SIZE(self) * self.ob_descr.itemsize)
 */

  /* function exit code */
}

/* "pylivox.pyx":35
 *     livox_status GetConnectedDevices(DeviceInfo *devices, uint8_t *size)
 * 
 * def PyInit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Initialize the SDK.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_1PyInit(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_PyInit, "\n    * Initialize the SDK.\n    * @return true if successfully initialized, otherwise false.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_1PyInit = {"PyInit", (PyCFunction)__pyx_pw_7pylivox_1PyInit, METH_NOARGS, __pyx_doc_7pylivox_PyInit};
static PyObject *__pyx_pw_7pylivox_1PyInit(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyInit (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_PyInit(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_PyInit(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyInit", 1);

  /* "pylivox.pyx":40
 *     * @return true if successfully initialized, otherwise false.
 *     '''
 *     return Init()             # <<<<<<<<<<<<<<
 * 
 * def PyUninit():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(Init()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":35
 *     livox_status GetConnectedDevices(DeviceInfo *devices, uint8_t *size)
 * 
 * def PyInit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Initialize the SDK.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyInit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":42
 *     return Init()
 * 
 * def PyUninit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_3PyUninit(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_2PyUninit, "\n    * Save the log file.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_3PyUninit = {"PyUninit", (PyCFunction)__pyx_pw_7pylivox_3PyUninit, METH_NOARGS, __pyx_doc_7pylivox_2PyUninit};
static PyObject *__pyx_pw_7pylivox_3PyUninit(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyUninit (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_2PyUninit(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_2PyUninit(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyUninit", 1);

  /* "pylivox.pyx":46
 *     * Save the log file.
 *     '''
 *     Uninit()             # <<<<<<<<<<<<<<
 * 
 * def PyStart():
 */
  Uninit();

  /* "pylivox.pyx":42
 *     return Init()
 * 
 * def PyUninit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":48
 *     Uninit()
 * 
 * def PyStart():             # <<<<<<<<<<<<<<
 *     '''
 *     * Start the device scanning routine which runs on a separate thread.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_5PyStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_4PyStart, "\n    * Start the device scanning routine which runs on a separate thread.\n    * @return true if successfully started, otherwise false.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_5PyStart = {"PyStart", (PyCFunction)__pyx_pw_7pylivox_5PyStart, METH_NOARGS, __pyx_doc_7pylivox_4PyStart};
static PyObject *__pyx_pw_7pylivox_5PyStart(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyStart (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_4PyStart(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_4PyStart(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyStart", 1);

  /* "pylivox.pyx":53
 *     * @return true if successfully started, otherwise false.
 *     '''
 *     return Start()             # <<<<<<<<<<<<<<
 * 
 * def PyDisableConsoleLogger():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(Start()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":48
 *     Uninit()
 * 
 * def PyStart():             # <<<<<<<<<<<<<<
 *     '''
 *     * Start the device scanning routine which runs on a separate thread.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyStart", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":55
 *     return Start()
 * 
 * def PyDisableConsoleLogger():             # <<<<<<<<<<<<<<
 *     '''
 *     * Disable console log output.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_7PyDisableConsoleLogger(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_6PyDisableConsoleLogger, "\n    * Disable console log output.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_7PyDisableConsoleLogger = {"PyDisableConsoleLogger", (PyCFunction)__pyx_pw_7pylivox_7PyDisableConsoleLogger, METH_NOARGS, __pyx_doc_7pylivox_6PyDisableConsoleLogger};
static PyObject *__pyx_pw_7pylivox_7PyDisableConsoleLogger(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyDisableConsoleLogger (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_6PyDisableConsoleLogger(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_6PyDisableConsoleLogger(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyDisableConsoleLogger", 1);

  /* "pylivox.pyx":59
 *     * Disable console log output.
 *     '''
 *     return DisableConsoleLogger()             # <<<<<<<<<<<<<<
 * 
 * def PySaveLoggerFile():
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(DisableConsoleLogger()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":55
 *     return Start()
 * 
 * def PyDisableConsoleLogger():             # <<<<<<<<<<<<<<
 *     '''
 *     * Disable console log output.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDisableConsoleLogger", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":61
 *     return DisableConsoleLogger()
 * 
 * def PySaveLoggerFile():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_9PySaveLoggerFile(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_8PySaveLoggerFile, "\n    * Save the log file.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_9PySaveLoggerFile = {"PySaveLoggerFile", (PyCFunction)__pyx_pw_7pylivox_9PySaveLoggerFile, METH_NOARGS, __pyx_doc_7pylivox_8PySaveLoggerFile};
static PyObject *__pyx_pw_7pylivox_9PySaveLoggerFile(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PySaveLoggerFile (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_8PySaveLoggerFile(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_8PySaveLoggerFile(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PySaveLoggerFile", 1);

  /* "pylivox.pyx":65
 *     * Save the log file.
 *     '''
 *     return SaveLoggerFile()             # <<<<<<<<<<<<<<
 * 
 * def PyGetLivoxSdkVersion(version: PyLivoxSdkVersion):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(SaveLoggerFile()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":61
 *     return DisableConsoleLogger()
 * 
 * def PySaveLoggerFile():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PySaveLoggerFile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":67
 *     return SaveLoggerFile()
 * 
 * def PyGetLivoxSdkVersion(version: PyLivoxSdkVersion):             # <<<<<<<<<<<<<<
 *     '''
 *     * Return SDK's version information in a numeric form.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_11PyGetLivoxSdkVersion(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_10PyGetLivoxSdkVersion, "\n    * Return SDK's version information in a numeric form.\n    * @param version Pointer to a version structure for returning the version information.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_11PyGetLivoxSdkVersion = {"PyGetLivoxSdkVersion", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyGetLivoxSdkVersion, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_10PyGetLivoxSdkVersion};
static PyObject *__pyx_pw_7pylivox_11PyGetLivoxSdkVersion(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_version = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyGetLivoxSdkVersion (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_version,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_version)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyGetLivoxSdkVersion") < 0)) __PYX_ERR(0, 67, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_version = ((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyGetLivoxSdkVersion", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 67, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyGetLivoxSdkVersion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_version), __pyx_ptype_7pylivox_PyLivoxSdkVersion, 0, "version", 0))) __PYX_ERR(0, 67, __pyx_L1_error)
  __pyx_r = __pyx_pf_7pylivox_10PyGetLivoxSdkVersion(__pyx_self, __pyx_v_version);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_10PyGetLivoxSdkVersion(CYTHON_UNUSED PyObject *__pyx_self, struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_version) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyGetLivoxSdkVersion", 1);

  /* "pylivox.pyx":72
 *     * @param version Pointer to a version structure for returning the version information.
 *     '''
 *     GetLivoxSdkVersion(&version.core)             # <<<<<<<<<<<<<<
 * 
 * cdef void callCommonCommandCallback(livox_status status, uint8_t handle, uint8_t response, void* f) noexcept:
 */
  GetLivoxSdkVersion((&__pyx_v_version->core));

  /* "pylivox.pyx":67
 *     return SaveLoggerFile()
 * 
 * def PyGetLivoxSdkVersion(version: PyLivoxSdkVersion):             # <<<<<<<<<<<<<<
 *     '''
 *     * Return SDK's version information in a numeric form.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":74
 *     GetLivoxSdkVersion(&version.core)
 * 
 * cdef void callCommonCommandCallback(livox_status status, uint8_t handle, uint8_t response, void* f) noexcept:             # <<<<<<<<<<<<<<
 *     (<object>f)(status, handle, response)
 * 
 */

static void __pyx_f_7pylivox_callCommonCommandCallback(__pyx_t_7pylivox_livox_status __pyx_v_status, uint8_t __pyx_v_handle, uint8_t __pyx_v_response, void *__pyx_v_f) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  unsigned int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("callCommonCommandCallback", 1);

  /* "pylivox.pyx":75
 * 
 * cdef void callCommonCommandCallback(livox_status status, uint8_t handle, uint8_t response, void* f) noexcept:
 *     (<object>f)(status, handle, response)             # <<<<<<<<<<<<<<
 * 
 * def PyHubStartSampling(cb):
 */
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(__pyx_v_status); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_uint8_t(__pyx_v_handle); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_uint8_t(__pyx_v_response); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(((PyObject *)__pyx_v_f));
  __pyx_t_5 = ((PyObject *)__pyx_v_f); __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_t_2, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pylivox.pyx":74
 *     GetLivoxSdkVersion(&version.core)
 * 
 * cdef void callCommonCommandCallback(livox_status status, uint8_t handle, uint8_t response, void* f) noexcept:             # <<<<<<<<<<<<<<
 *     (<object>f)(status, handle, response)
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_WriteUnraisable("pylivox.callCommonCommandCallback", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "pylivox.pyx":77
 *     (<object>f)(status, handle, response)
 * 
 * def PyHubStartSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Start hub sampling.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyHubStartSampling(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_12PyHubStartSampling, "\n    * Start hub sampling.\n    * @param  cb            callback for the command.\n    * @param  client_data   user data associated with the command.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_13PyHubStartSampling = {"PyHubStartSampling", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyHubStartSampling, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_12PyHubStartSampling};
static PyObject *__pyx_pw_7pylivox_13PyHubStartSampling(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_cb = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyHubStartSampling (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cb,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cb)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 77, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyHubStartSampling") < 0)) __PYX_ERR(0, 77, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_cb = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyHubStartSampling", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 77, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyHubStartSampling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyHubStartSampling(__pyx_self, __pyx_v_cb);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyHubStartSampling(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyHubStartSampling", 1);

  /* "pylivox.pyx":84
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return HubStartSampling(callCommonCommandCallback, <void*> cb)             # <<<<<<<<<<<<<<
 * 
 * def PyHubStopSampling(cb):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(HubStartSampling(__pyx_f_7pylivox_callCommonCommandCallback, ((void *)__pyx_v_cb))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":77
 *     (<object>f)(status, handle, response)
 * 
 * def PyHubStartSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Start hub sampling.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubStartSampling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":86
 *     return HubStartSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubStopSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Stop the Livox Hub's sampling.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyHubStopSampling(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_14PyHubStopSampling, "\n    * Stop the Livox Hub's sampling.\n    * @param  cb            callback for the command.\n    * @param  client_data   user data associated with the command.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_15PyHubStopSampling = {"PyHubStopSampling", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyHubStopSampling, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_14PyHubStopSampling};
static PyObject *__pyx_pw_7pylivox_15PyHubStopSampling(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_cb = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyHubStopSampling (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cb,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cb)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 86, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyHubStopSampling") < 0)) __PYX_ERR(0, 86, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_cb = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyHubStopSampling", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 86, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyHubStopSampling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_14PyHubStopSampling(__pyx_self, __pyx_v_cb);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubStopSampling(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_cb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyHubStopSampling", 1);

  /* "pylivox.pyx":93
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return HubStopSampling(callCommonCommandCallback, <void*> cb)             # <<<<<<<<<<<<<<
 * 
 * def PyHubGetLidarHandle(slot, id):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(HubStopSampling(__pyx_f_7pylivox_callCommonCommandCallback, ((void *)__pyx_v_cb))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":86
 *     return HubStartSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubStopSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Stop the Livox Hub's sampling.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubStopSampling", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":95
 *     return HubStopSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubGetLidarHandle(slot, id):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get the LiDAR unit handle used in the Livox Hub data callback function from slot and id.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyHubGetLidarHandle(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_16PyHubGetLidarHandle, "\n    * Get the LiDAR unit handle used in the Livox Hub data callback function from slot and id.\n    * @param  slot   Livox Hub's slot.\n    * @param  id     Livox Hub's id.\n    * @return LiDAR unit handle.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_17PyHubGetLidarHandle = {"PyHubGetLidarHandle", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyHubGetLidarHandle, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_16PyHubGetLidarHandle};
static PyObject *__pyx_pw_7pylivox_17PyHubGetLidarHandle(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_slot = 0;
  PyObject *__pyx_v_id = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyHubGetLidarHandle (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_slot,&__pyx_n_s_id,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_slot)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 95, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_id)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 95, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PyHubGetLidarHandle", 1, 2, 2, 1); __PYX_ERR(0, 95, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyHubGetLidarHandle") < 0)) __PYX_ERR(0, 95, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_slot = values[0];
    __pyx_v_id = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyHubGetLidarHandle", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 95, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyHubGetLidarHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_16PyHubGetLidarHandle(__pyx_self, __pyx_v_slot, __pyx_v_id);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyHubGetLidarHandle(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_slot, PyObject *__pyx_v_id) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  uint8_t __pyx_t_1;
  uint8_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyHubGetLidarHandle", 1);

  /* "pylivox.pyx":102
 *     * @return LiDAR unit handle.
 *     '''
 *     return HubGetLidarHandle(slot, id)             # <<<<<<<<<<<<<<
 * 
 * def PyDisconnectDevice(handle, cb):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_slot); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 102, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_uint8_t(__pyx_v_id); if (unlikely((__pyx_t_2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 102, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_uint8_t(HubGetLidarHandle(__pyx_t_1, __pyx_t_2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":95
 *     return HubStopSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubGetLidarHandle(slot, id):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get the LiDAR unit handle used in the Livox Hub data callback function from slot and id.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyHubGetLidarHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":104
 *     return HubGetLidarHandle(slot, id)
 * 
 * def PyDisconnectDevice(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Disconnect divice.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_19PyDisconnectDevice(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_18PyDisconnectDevice, "\n    * Disconnect divice.\n    * @param  handle        device handle.\n    * @param  cb            callback for the command.\n    * @param  client_data   user data associated with the command.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_19PyDisconnectDevice = {"PyDisconnectDevice", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_19PyDisconnectDevice, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_18PyDisconnectDevice};
static PyObject *__pyx_pw_7pylivox_19PyDisconnectDevice(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_handle = 0;
  PyObject *__pyx_v_cb = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyDisconnectDevice (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_cb,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_handle)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 104, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cb)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 104, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PyDisconnectDevice", 1, 2, 2, 1); __PYX_ERR(0, 104, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyDisconnectDevice") < 0)) __PYX_ERR(0, 104, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_handle = values[0];
    __pyx_v_cb = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyDisconnectDevice", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 104, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDisconnectDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_18PyDisconnectDevice(__pyx_self, __pyx_v_handle, __pyx_v_cb);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_18PyDisconnectDevice(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_handle, PyObject *__pyx_v_cb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  uint8_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyDisconnectDevice", 1);

  /* "pylivox.pyx":112
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return DisconnectDevice(handle, callCommonCommandCallback, <void*> cb)             # <<<<<<<<<<<<<<
 * 
 * def PySetCartesianCoordinate(handle, cb):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_handle); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 112, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(DisconnectDevice(__pyx_t_1, __pyx_f_7pylivox_callCommonCommandCallback, ((void *)__pyx_v_cb))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":104
 *     return HubGetLidarHandle(slot, id)
 * 
 * def PyDisconnectDevice(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Disconnect divice.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pylivox.PyDisconnectDevice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":114
 *     return DisconnectDevice(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetCartesianCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to cartesian coordinate.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PySetCartesianCoordinate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_20PySetCartesianCoordinate, "\n    * Change point cloud coordinate system to cartesian coordinate.\n    * @param  handle        device handle.\n    * @param  cb            callback for the command.\n    * @param  client_data   user data associated with the command.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_21PySetCartesianCoordinate = {"PySetCartesianCoordinate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PySetCartesianCoordinate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_20PySetCartesianCoordinate};
static PyObject *__pyx_pw_7pylivox_21PySetCartesianCoordinate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_handle = 0;
  PyObject *__pyx_v_cb = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PySetCartesianCoordinate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_cb,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_handle)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 114, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cb)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 114, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PySetCartesianCoordinate", 1, 2, 2, 1); __PYX_ERR(0, 114, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PySetCartesianCoordinate") < 0)) __PYX_ERR(0, 114, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_handle = values[0];
    __pyx_v_cb = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PySetCartesianCoordinate", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 114, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PySetCartesianCoordinate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_20PySetCartesianCoordinate(__pyx_self, __pyx_v_handle, __pyx_v_cb);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PySetCartesianCoordinate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_handle, PyObject *__pyx_v_cb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  uint8_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PySetCartesianCoordinate", 1);

  /* "pylivox.pyx":122
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return SetCartesianCoordinate(handle, callCommonCommandCallback, <void*> cb)             # <<<<<<<<<<<<<<
 * 
 * def PySetSphericalCoordinate(handle, cb):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_handle); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 122, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(SetCartesianCoordinate(__pyx_t_1, __pyx_f_7pylivox_callCommonCommandCallback, ((void *)__pyx_v_cb))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":114
 *     return DisconnectDevice(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetCartesianCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to cartesian coordinate.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pylivox.PySetCartesianCoordinate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":124
 *     return SetCartesianCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetSphericalCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to spherical coordinate.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PySetSphericalCoordinate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_22PySetSphericalCoordinate, "\n    * Change point cloud coordinate system to spherical coordinate.\n    * @param  handle        device handle.\n    * @param  cb            callback for the command.\n    * @param  client_data   user data associated with the command.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_23PySetSphericalCoordinate = {"PySetSphericalCoordinate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_23PySetSphericalCoordinate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_22PySetSphericalCoordinate};
static PyObject *__pyx_pw_7pylivox_23PySetSphericalCoordinate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_handle = 0;
  PyObject *__pyx_v_cb = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PySetSphericalCoordinate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_handle,&__pyx_n_s_cb,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_handle)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 124, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cb)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 124, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PySetSphericalCoordinate", 1, 2, 2, 1); __PYX_ERR(0, 124, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PySetSphericalCoordinate") < 0)) __PYX_ERR(0, 124, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_handle = values[0];
    __pyx_v_cb = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PySetSphericalCoordinate", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 124, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PySetSphericalCoordinate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_22PySetSphericalCoordinate(__pyx_self, __pyx_v_handle, __pyx_v_cb);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PySetSphericalCoordinate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_handle, PyObject *__pyx_v_cb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  uint8_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PySetSphericalCoordinate", 1);

  /* "pylivox.pyx":132
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return SetSphericalCoordinate(handle, callCommonCommandCallback, <void*> cb)             # <<<<<<<<<<<<<<
 * 
 * def PyAddHubToConnect(broadcast_code, handle):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_handle); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 132, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(SetSphericalCoordinate(__pyx_t_1, __pyx_f_7pylivox_callCommonCommandCallback, ((void *)__pyx_v_cb))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":124
 *     return SetCartesianCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetSphericalCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to spherical coordinate.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pylivox.PySetSphericalCoordinate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":134
 *     return SetSphericalCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PyAddHubToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Add a broadcast code to the connecting list and only devices with broadcast code in this list will be connected. The
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyAddHubToConnect(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_24PyAddHubToConnect, "\n    * Add a broadcast code to the connecting list and only devices with broadcast code in this list will be connected. The\n    * broadcast code is unique for every device.\n    * @param broadcast_code device's broadcast code.\n    * @param handle device handle. For Livox Hub, the handle is always 31; for LiDAR units connected to the Livox Hub,\n    * the corresponding handle is (slot-1)*3+id-1.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_25PyAddHubToConnect = {"PyAddHubToConnect", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_25PyAddHubToConnect, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_24PyAddHubToConnect};
static PyObject *__pyx_pw_7pylivox_25PyAddHubToConnect(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_broadcast_code = 0;
  PyObject *__pyx_v_handle = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyAddHubToConnect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_handle,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 134, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_handle)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 134, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PyAddHubToConnect", 1, 2, 2, 1); __PYX_ERR(0, 134, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyAddHubToConnect") < 0)) __PYX_ERR(0, 134, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_broadcast_code = values[0];
    __pyx_v_handle = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyAddHubToConnect", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 134, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyAddHubToConnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_24PyAddHubToConnect(__pyx_self, __pyx_v_broadcast_code, __pyx_v_handle);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_24PyAddHubToConnect(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_broadcast_code, PyObject *__pyx_v_handle) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  uint8_t *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyAddHubToConnect", 1);

  /* "pylivox.pyx":143
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return AddHubToConnect(<char*> broadcast_code, <uint8_t*> handle)             # <<<<<<<<<<<<<<
 * 
 * def PyAddLidarToConnect(broadcast_code, handle):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_AsWritableString(__pyx_v_broadcast_code); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 143, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_AsWritableUString(__pyx_v_handle); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 143, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_int32_t(AddHubToConnect(((char *)__pyx_t_1), ((uint8_t *)__pyx_t_2))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":134
 *     return SetSphericalCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PyAddHubToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Add a broadcast code to the connecting list and only devices with broadcast code in this list will be connected. The
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyAddHubToConnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":145
 *     return AddHubToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyAddLidarToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get all connected devices' information.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyAddLidarToConnect(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_26PyAddLidarToConnect, "\n    * Get all connected devices' information.\n    * @param devices list of connected devices' information.\n    * @param size    number of devices connected.\n    * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_27PyAddLidarToConnect = {"PyAddLidarToConnect", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyAddLidarToConnect, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_26PyAddLidarToConnect};
static PyObject *__pyx_pw_7pylivox_27PyAddLidarToConnect(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_broadcast_code = 0;
  PyObject *__pyx_v_handle = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyAddLidarToConnect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_handle,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 145, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_handle)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PyAddLidarToConnect", 1, 2, 2, 1); __PYX_ERR(0, 145, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyAddLidarToConnect") < 0)) __PYX_ERR(0, 145, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_broadcast_code = values[0];
    __pyx_v_handle = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyAddLidarToConnect", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 145, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyAddLidarToConnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_26PyAddLidarToConnect(__pyx_self, __pyx_v_broadcast_code, __pyx_v_handle);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_26PyAddLidarToConnect(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_broadcast_code, PyObject *__pyx_v_handle) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  uint8_t *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyAddLidarToConnect", 1);

  /* "pylivox.pyx":152
 *     * @return kStatusSuccess on successful return, see \ref LivoxStatus for other error code.
 *     '''
 *     return AddLidarToConnect(<char*> broadcast_code, <uint8_t*> handle)             # <<<<<<<<<<<<<<
 * 
 * def PyGetConnectedDevices(devices, size):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_AsWritableString(__pyx_v_broadcast_code); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 152, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_AsWritableUString(__pyx_v_handle); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 152, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_int32_t(AddLidarToConnect(((char *)__pyx_t_1), ((uint8_t *)__pyx_t_2))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":145
 *     return AddHubToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyAddLidarToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get all connected devices' information.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyAddLidarToConnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":154
 *     return AddLidarToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyGetConnectedDevices(devices, size):             # <<<<<<<<<<<<<<
 *     '''
 *     * Function type of callback that queries device's information.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyGetConnectedDevices(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7pylivox_28PyGetConnectedDevices, "\n    * Function type of callback that queries device's information.\n    * @param status   kStatusSuccess on successful return, kStatusTimeout on timeout, see \ref LivoxStatus for other\n    * error code.\n    * @param handle   device handle.\n    * @param response response from the device.\n    * @param client_data user data associated with the command.\n    ");
static PyMethodDef __pyx_mdef_7pylivox_29PyGetConnectedDevices = {"PyGetConnectedDevices", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_29PyGetConnectedDevices, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7pylivox_28PyGetConnectedDevices};
static PyObject *__pyx_pw_7pylivox_29PyGetConnectedDevices(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_devices = 0;
  PyObject *__pyx_v_size = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PyGetConnectedDevices (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_devices,&__pyx_n_s_size,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_devices)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 154, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 154, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("PyGetConnectedDevices", 1, 2, 2, 1); __PYX_ERR(0, 154, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "PyGetConnectedDevices") < 0)) __PYX_ERR(0, 154, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_devices = values[0];
    __pyx_v_size = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("PyGetConnectedDevices", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 154, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyGetConnectedDevices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_28PyGetConnectedDevices(__pyx_self, __pyx_v_devices, __pyx_v_size);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_28PyGetConnectedDevices(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_devices, PyObject *__pyx_v_size) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  uint8_t *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyGetConnectedDevices", 1);

  /* "pylivox.pyx":163
 *     * @param client_data user data associated with the command.
 *     '''
 *     return GetConnectedDevices(<DeviceInfo*> devices, <uint8_t*> size)             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "../sdk_core/include/livox_def.h":
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_AsWritableUString(__pyx_v_size); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 163, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_int32_t(GetConnectedDevices(((DeviceInfo *)__pyx_v_devices), ((uint8_t *)__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":154
 *     return AddLidarToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyGetConnectedDevices(devices, size):             # <<<<<<<<<<<<<<
 *     '''
 *     * Function type of callback that queries device's information.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pylivox.PyGetConnectedDevices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":436
 *     Device type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeHub():
 *         return DeviceType.kDeviceTypeHub
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_1DeviceTypeHub(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_1DeviceTypeHub = {"DeviceTypeHub", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_1DeviceTypeHub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_1DeviceTypeHub(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeviceTypeHub (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("DeviceTypeHub", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DeviceTypeHub", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_DeviceTypeHub();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_DeviceTypeHub(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeviceTypeHub", 1);

  /* "pylivox.pyx":438
 *     @staticmethod
 *     def DeviceTypeHub():
 *         return DeviceType.kDeviceTypeHub             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceType(kDeviceTypeHub); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":436
 *     Device type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeHub():
 *         return DeviceType.kDeviceTypeHub
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.DeviceTypeHub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":440
 *         return DeviceType.kDeviceTypeHub
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid40():
 *         return DeviceType.kDeviceTypeLidarMid40
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_3DeviceTypeLidarMid40(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_3DeviceTypeLidarMid40 = {"DeviceTypeLidarMid40", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_3DeviceTypeLidarMid40, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_3DeviceTypeLidarMid40(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeviceTypeLidarMid40 (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("DeviceTypeLidarMid40", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DeviceTypeLidarMid40", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_2DeviceTypeLidarMid40();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_2DeviceTypeLidarMid40(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeviceTypeLidarMid40", 1);

  /* "pylivox.pyx":442
 *     @staticmethod
 *     def DeviceTypeLidarMid40():
 *         return DeviceType.kDeviceTypeLidarMid40             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceType(kDeviceTypeLidarMid40); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":440
 *         return DeviceType.kDeviceTypeHub
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid40():
 *         return DeviceType.kDeviceTypeLidarMid40
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.DeviceTypeLidarMid40", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":444
 *         return DeviceType.kDeviceTypeLidarMid40
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarTele():
 *         return DeviceType.kDeviceTypeLidarTele
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_5DeviceTypeLidarTele(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_5DeviceTypeLidarTele = {"DeviceTypeLidarTele", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_5DeviceTypeLidarTele, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_5DeviceTypeLidarTele(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeviceTypeLidarTele (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("DeviceTypeLidarTele", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DeviceTypeLidarTele", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_4DeviceTypeLidarTele();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_4DeviceTypeLidarTele(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeviceTypeLidarTele", 1);

  /* "pylivox.pyx":446
 *     @staticmethod
 *     def DeviceTypeLidarTele():
 *         return DeviceType.kDeviceTypeLidarTele             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceType(kDeviceTypeLidarTele); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":444
 *         return DeviceType.kDeviceTypeLidarMid40
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarTele():
 *         return DeviceType.kDeviceTypeLidarTele
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.DeviceTypeLidarTele", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":448
 *         return DeviceType.kDeviceTypeLidarTele
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarHorizon():
 *         return DeviceType.kDeviceTypeLidarHorizon
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_7DeviceTypeLidarHorizon(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_7DeviceTypeLidarHorizon = {"DeviceTypeLidarHorizon", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_7DeviceTypeLidarHorizon, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_7DeviceTypeLidarHorizon(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeviceTypeLidarHorizon (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("DeviceTypeLidarHorizon", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DeviceTypeLidarHorizon", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_6DeviceTypeLidarHorizon();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_6DeviceTypeLidarHorizon(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeviceTypeLidarHorizon", 1);

  /* "pylivox.pyx":450
 *     @staticmethod
 *     def DeviceTypeLidarHorizon():
 *         return DeviceType.kDeviceTypeLidarHorizon             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceType(kDeviceTypeLidarHorizon); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":448
 *         return DeviceType.kDeviceTypeLidarTele
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarHorizon():
 *         return DeviceType.kDeviceTypeLidarHorizon
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.DeviceTypeLidarHorizon", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":452
 *         return DeviceType.kDeviceTypeLidarHorizon
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid70():
 *         return DeviceType.kDeviceTypeLidarMid70
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_9DeviceTypeLidarMid70(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_9DeviceTypeLidarMid70 = {"DeviceTypeLidarMid70", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_9DeviceTypeLidarMid70, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_9DeviceTypeLidarMid70(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeviceTypeLidarMid70 (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("DeviceTypeLidarMid70", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DeviceTypeLidarMid70", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_8DeviceTypeLidarMid70();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_8DeviceTypeLidarMid70(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeviceTypeLidarMid70", 1);

  /* "pylivox.pyx":454
 *     @staticmethod
 *     def DeviceTypeLidarMid70():
 *         return DeviceType.kDeviceTypeLidarMid70             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceType(kDeviceTypeLidarMid70); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":452
 *         return DeviceType.kDeviceTypeLidarHorizon
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid70():
 *         return DeviceType.kDeviceTypeLidarMid70
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.DeviceTypeLidarMid70", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":456
 *         return DeviceType.kDeviceTypeLidarMid70
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarAvia():
 *         return DeviceType.kDeviceTypeLidarAvia
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_11DeviceTypeLidarAvia(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_11DeviceTypeLidarAvia = {"DeviceTypeLidarAvia", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_11DeviceTypeLidarAvia, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_11DeviceTypeLidarAvia(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeviceTypeLidarAvia (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("DeviceTypeLidarAvia", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "DeviceTypeLidarAvia", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_10DeviceTypeLidarAvia();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_10DeviceTypeLidarAvia(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeviceTypeLidarAvia", 1);

  /* "pylivox.pyx":458
 *     @staticmethod
 *     def DeviceTypeLidarAvia():
 *         return DeviceType.kDeviceTypeLidarAvia             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLidarState:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceType(kDeviceTypeLidarAvia); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":456
 *         return DeviceType.kDeviceTypeLidarMid70
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarAvia():
 *         return DeviceType.kDeviceTypeLidarAvia
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.DeviceTypeLidarAvia", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_12__reduce_cython__(((struct __pyx_obj_7pylivox_PyDeviceType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_12__reduce_cython__(struct __pyx_obj_7pylivox_PyDeviceType *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyDeviceType); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyDeviceType__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyDeviceType); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyDeviceType.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceType__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceType_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceType_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDeviceType.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceType_14__setstate_cython__(((struct __pyx_obj_7pylivox_PyDeviceType *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceType_14__setstate_cython__(struct __pyx_obj_7pylivox_PyDeviceType *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyDeviceType__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyDeviceType__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceType__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceType.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":464
 *     Lidar state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateInit():
 *         return LidarState.kLidarStateInit
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_1LidarStateInit(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_1LidarStateInit = {"LidarStateInit", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_1LidarStateInit, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_1LidarStateInit(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStateInit (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStateInit", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStateInit", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_LidarStateInit();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_LidarStateInit(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStateInit", 1);

  /* "pylivox.pyx":466
 *     @staticmethod
 *     def LidarStateInit():
 *         return LidarState.kLidarStateInit             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(kLidarStateInit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":464
 *     Lidar state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateInit():
 *         return LidarState.kLidarStateInit
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.LidarStateInit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":468
 *         return LidarState.kLidarStateInit
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateNormal():
 *         return LidarState.kLidarStateNormal
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_3LidarStateNormal(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_3LidarStateNormal = {"LidarStateNormal", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_3LidarStateNormal, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_3LidarStateNormal(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStateNormal (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStateNormal", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStateNormal", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_2LidarStateNormal();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_2LidarStateNormal(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStateNormal", 1);

  /* "pylivox.pyx":470
 *     @staticmethod
 *     def LidarStateNormal():
 *         return LidarState.kLidarStateNormal             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(kLidarStateNormal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":468
 *         return LidarState.kLidarStateInit
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateNormal():
 *         return LidarState.kLidarStateNormal
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.LidarStateNormal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":472
 *         return LidarState.kLidarStateNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStatePowerSaving():
 *         return LidarState.kLidarStatePowerSaving
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_5LidarStatePowerSaving(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_5LidarStatePowerSaving = {"LidarStatePowerSaving", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_5LidarStatePowerSaving, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_5LidarStatePowerSaving(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStatePowerSaving (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStatePowerSaving", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStatePowerSaving", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_4LidarStatePowerSaving();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_4LidarStatePowerSaving(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStatePowerSaving", 1);

  /* "pylivox.pyx":474
 *     @staticmethod
 *     def LidarStatePowerSaving():
 *         return LidarState.kLidarStatePowerSaving             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(kLidarStatePowerSaving); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":472
 *         return LidarState.kLidarStateNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStatePowerSaving():
 *         return LidarState.kLidarStatePowerSaving
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.LidarStatePowerSaving", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":476
 *         return LidarState.kLidarStatePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateStandBy():
 *         return LidarState.kLidarStateStandBy
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_7LidarStateStandBy(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_7LidarStateStandBy = {"LidarStateStandBy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_7LidarStateStandBy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_7LidarStateStandBy(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStateStandBy (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStateStandBy", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStateStandBy", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_6LidarStateStandBy();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_6LidarStateStandBy(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStateStandBy", 1);

  /* "pylivox.pyx":478
 *     @staticmethod
 *     def LidarStateStandBy():
 *         return LidarState.kLidarStateStandBy             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(kLidarStateStandBy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":476
 *         return LidarState.kLidarStatePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateStandBy():
 *         return LidarState.kLidarStateStandBy
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.LidarStateStandBy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":480
 *         return LidarState.kLidarStateStandBy
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateError():
 *         return LidarState.kLidarStateError
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_9LidarStateError(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_9LidarStateError = {"LidarStateError", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_9LidarStateError, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_9LidarStateError(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStateError (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStateError", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStateError", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_8LidarStateError();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_8LidarStateError(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStateError", 1);

  /* "pylivox.pyx":482
 *     @staticmethod
 *     def LidarStateError():
 *         return LidarState.kLidarStateError             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(kLidarStateError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":480
 *         return LidarState.kLidarStateStandBy
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateError():
 *         return LidarState.kLidarStateError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.LidarStateError", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":484
 *         return LidarState.kLidarStateError
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateUnknown():
 *         return LidarState.kLidarStateUnknown
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_11LidarStateUnknown(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_11LidarStateUnknown = {"LidarStateUnknown", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_11LidarStateUnknown, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_11LidarStateUnknown(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStateUnknown (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStateUnknown", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStateUnknown", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_10LidarStateUnknown();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_10LidarStateUnknown(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStateUnknown", 1);

  /* "pylivox.pyx":486
 *     @staticmethod
 *     def LidarStateUnknown():
 *         return LidarState.kLidarStateUnknown             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(kLidarStateUnknown); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":484
 *         return LidarState.kLidarStateError
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateUnknown():
 *         return LidarState.kLidarStateUnknown
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.LidarStateUnknown", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_12__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_12__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyLidarState); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarState__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyLidarState); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyLidarState.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarState__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLidarState_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLidarState_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLidarState_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarState.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyLidarState_14__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarState *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLidarState_14__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarState__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarState__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarState__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarState.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":493
 *     Lidar mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeNormal():
 *         return LidarMode.kLidarModeNormal
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_1LidarModeNormal(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_11PyLidarMode_1LidarModeNormal = {"LidarModeNormal", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_1LidarModeNormal, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_1LidarModeNormal(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarModeNormal (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarModeNormal", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarModeNormal", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_11PyLidarMode_LidarModeNormal();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_11PyLidarMode_LidarModeNormal(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarModeNormal", 1);

  /* "pylivox.pyx":495
 *     @staticmethod
 *     def LidarModeNormal():
 *         return LidarMode.kLidarModeNormal             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarMode(kLidarModeNormal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":493
 *     Lidar mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeNormal():
 *         return LidarMode.kLidarModeNormal
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarMode.LidarModeNormal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":497
 *         return LidarMode.kLidarModeNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModePowerSaving():
 *         return LidarMode.kLidarModePowerSaving
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_3LidarModePowerSaving(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_11PyLidarMode_3LidarModePowerSaving = {"LidarModePowerSaving", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_3LidarModePowerSaving, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_3LidarModePowerSaving(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarModePowerSaving (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarModePowerSaving", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarModePowerSaving", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_11PyLidarMode_2LidarModePowerSaving();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_11PyLidarMode_2LidarModePowerSaving(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarModePowerSaving", 1);

  /* "pylivox.pyx":499
 *     @staticmethod
 *     def LidarModePowerSaving():
 *         return LidarMode.kLidarModePowerSaving             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarMode(kLidarModePowerSaving); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":497
 *         return LidarMode.kLidarModeNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModePowerSaving():
 *         return LidarMode.kLidarModePowerSaving
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarMode.LidarModePowerSaving", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":501
 *         return LidarMode.kLidarModePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeStandby():
 *         return LidarMode.kLidarModeStandby
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_5LidarModeStandby(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_11PyLidarMode_5LidarModeStandby = {"LidarModeStandby", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_5LidarModeStandby, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_5LidarModeStandby(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarModeStandby (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarModeStandby", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarModeStandby", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_11PyLidarMode_4LidarModeStandby();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_11PyLidarMode_4LidarModeStandby(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarModeStandby", 1);

  /* "pylivox.pyx":503
 *     @staticmethod
 *     def LidarModeStandby():
 *         return LidarMode.kLidarModeStandby             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLidarFeature:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarMode(kLidarModeStandby); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":501
 *         return LidarMode.kLidarModePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeStandby():
 *         return LidarMode.kLidarModeStandby
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarMode.LidarModeStandby", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_11PyLidarMode_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_11PyLidarMode_6__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_11PyLidarMode_6__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarMode *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyLidarMode); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarMode__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyLidarMode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyLidarMode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarMode__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_11PyLidarMode_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_11PyLidarMode_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_11PyLidarMode_8__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarMode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_11PyLidarMode_8__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarMode *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarMode__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarMode__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarMode__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":509
 *     Lidar feature.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureNone():
 *         return LidarFeature.kLidarFeatureNone
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_1LidarFeatureNone(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyLidarFeature_1LidarFeatureNone = {"LidarFeatureNone", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_1LidarFeatureNone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_1LidarFeatureNone(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarFeatureNone (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarFeatureNone", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarFeatureNone", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_14PyLidarFeature_LidarFeatureNone();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_LidarFeatureNone(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarFeatureNone", 1);

  /* "pylivox.pyx":511
 *     @staticmethod
 *     def LidarFeatureNone():
 *         return LidarFeature.kLidarFeatureNone             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarFeature(kLidarFeatureNone); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 511, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":509
 *     Lidar feature.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureNone():
 *         return LidarFeature.kLidarFeatureNone
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarFeature.LidarFeatureNone", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":513
 *         return LidarFeature.kLidarFeatureNone
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureRainFog():
 *         return LidarFeature.kLidarFeatureRainFog
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_3LidarFeatureRainFog(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyLidarFeature_3LidarFeatureRainFog = {"LidarFeatureRainFog", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_3LidarFeatureRainFog, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_3LidarFeatureRainFog(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarFeatureRainFog (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarFeatureRainFog", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarFeatureRainFog", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_14PyLidarFeature_2LidarFeatureRainFog();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_2LidarFeatureRainFog(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarFeatureRainFog", 1);

  /* "pylivox.pyx":515
 *     @staticmethod
 *     def LidarFeatureRainFog():
 *         return LidarFeature.kLidarFeatureRainFog             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLidarIpMode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarFeature(kLidarFeatureRainFog); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 515, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":513
 *         return LidarFeature.kLidarFeatureNone
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureRainFog():
 *         return LidarFeature.kLidarFeatureRainFog
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarFeature.LidarFeatureRainFog", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyLidarFeature_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_14PyLidarFeature_4__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarFeature *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_4__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyLidarFeature); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarFeature__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyLidarFeature); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyLidarFeature.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarFeature__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyLidarFeature_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyLidarFeature_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarFeature.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_14PyLidarFeature_6__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarFeature *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyLidarFeature_6__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarFeature__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarFeature__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarFeature__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarFeature.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":521
 *     Lidar IP mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarDynamicIpMode():
 *         return LidarIpMode.kLidarDynamicIpMode
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_1LidarDynamicIpMode(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLidarIpMode_1LidarDynamicIpMode = {"LidarDynamicIpMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_1LidarDynamicIpMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_1LidarDynamicIpMode(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarDynamicIpMode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarDynamicIpMode", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarDynamicIpMode", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLidarIpMode_LidarDynamicIpMode();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_LidarDynamicIpMode(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarDynamicIpMode", 1);

  /* "pylivox.pyx":523
 *     @staticmethod
 *     def LidarDynamicIpMode():
 *         return LidarIpMode.kLidarDynamicIpMode             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarIpMode(kLidarDynamicIpMode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":521
 *     Lidar IP mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarDynamicIpMode():
 *         return LidarIpMode.kLidarDynamicIpMode
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarIpMode.LidarDynamicIpMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":525
 *         return LidarIpMode.kLidarDynamicIpMode
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStaticIpMode():
 *         return LidarIpMode.kLidarStaticIpMode
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_3LidarStaticIpMode(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLidarIpMode_3LidarStaticIpMode = {"LidarStaticIpMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_3LidarStaticIpMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_3LidarStaticIpMode(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("LidarStaticIpMode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("LidarStaticIpMode", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "LidarStaticIpMode", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLidarIpMode_2LidarStaticIpMode();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_2LidarStaticIpMode(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LidarStaticIpMode", 1);

  /* "pylivox.pyx":527
 *     @staticmethod
 *     def LidarStaticIpMode():
 *         return LidarIpMode.kLidarStaticIpMode             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLidarScanPattern:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarIpMode(kLidarStaticIpMode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":525
 *         return LidarIpMode.kLidarDynamicIpMode
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStaticIpMode():
 *         return LidarIpMode.kLidarStaticIpMode
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarIpMode.LidarStaticIpMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLidarIpMode_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLidarIpMode_4__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarIpMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_4__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarIpMode *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyLidarIpMode); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarIpMode__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyLidarIpMode); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyLidarIpMode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarIpMode__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLidarIpMode_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLidarIpMode_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarIpMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_13PyLidarIpMode_6__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarIpMode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLidarIpMode_6__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarIpMode *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarIpMode__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarIpMode__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarIpMode__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarIpMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":533
 *     Lidar Scan Pattern.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def NoneRepetitiveScanPattern():
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_1NoneRepetitiveScanPattern(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_18PyLidarScanPattern_1NoneRepetitiveScanPattern = {"NoneRepetitiveScanPattern", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_1NoneRepetitiveScanPattern, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_1NoneRepetitiveScanPattern(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("NoneRepetitiveScanPattern (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("NoneRepetitiveScanPattern", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "NoneRepetitiveScanPattern", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_18PyLidarScanPattern_NoneRepetitiveScanPattern();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_NoneRepetitiveScanPattern(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NoneRepetitiveScanPattern", 1);

  /* "pylivox.pyx":535
 *     @staticmethod
 *     def NoneRepetitiveScanPattern():
 *         return LidarScanPattern.kNoneRepetitiveScanPattern             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarScanPattern(kNoneRepetitiveScanPattern); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":533
 *     Lidar Scan Pattern.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def NoneRepetitiveScanPattern():
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarScanPattern.NoneRepetitiveScanPattern", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":537
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def RepetitiveScanPattern():
 *         return LidarScanPattern.kRepetitiveScanPattern
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_3RepetitiveScanPattern(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_18PyLidarScanPattern_3RepetitiveScanPattern = {"RepetitiveScanPattern", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_3RepetitiveScanPattern, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_3RepetitiveScanPattern(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("RepetitiveScanPattern (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("RepetitiveScanPattern", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "RepetitiveScanPattern", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_18PyLidarScanPattern_2RepetitiveScanPattern();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_2RepetitiveScanPattern(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("RepetitiveScanPattern", 1);

  /* "pylivox.pyx":539
 *     @staticmethod
 *     def RepetitiveScanPattern():
 *         return LidarScanPattern.kRepetitiveScanPattern             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLivoxStatus:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarScanPattern(kRepetitiveScanPattern); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":537
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def RepetitiveScanPattern():
 *         return LidarScanPattern.kRepetitiveScanPattern
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarScanPattern.RepetitiveScanPattern", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_18PyLidarScanPattern_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_18PyLidarScanPattern_4__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarScanPattern *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_4__reduce_cython__(struct __pyx_obj_7pylivox_PyLidarScanPattern *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyLidarScanPatter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarScanPattern__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyLidarScanPatter); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyLidarScanPattern.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarScanPattern__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_18PyLidarScanPattern_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_18PyLidarScanPattern_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarScanPattern.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_18PyLidarScanPattern_6__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarScanPattern *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_18PyLidarScanPattern_6__setstate_cython__(struct __pyx_obj_7pylivox_PyLidarScanPattern *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLidarScanPattern__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarScanPattern__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarScanPattern__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarScanPattern.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":545
 *     Function return value definition.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSendFailed():
 *         return LivoxStatus.kStatusSendFailed
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_1StatusSendFailed(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_1StatusSendFailed = {"StatusSendFailed", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_1StatusSendFailed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_1StatusSendFailed(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusSendFailed (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusSendFailed", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusSendFailed", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_StatusSendFailed();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_StatusSendFailed(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusSendFailed", 1);

  /* "pylivox.pyx":547
 *     @staticmethod
 *     def StatusSendFailed():
 *         return LivoxStatus.kStatusSendFailed             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusSendFailed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":545
 *     Function return value definition.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSendFailed():
 *         return LivoxStatus.kStatusSendFailed
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusSendFailed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":549
 *         return LivoxStatus.kStatusSendFailed
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusHandlerImplNotExist():
 *         return LivoxStatus.kStatusHandlerImplNotExist
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_3StatusHandlerImplNotExist(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_3StatusHandlerImplNotExist = {"StatusHandlerImplNotExist", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_3StatusHandlerImplNotExist, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_3StatusHandlerImplNotExist(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusHandlerImplNotExist (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusHandlerImplNotExist", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusHandlerImplNotExist", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_2StatusHandlerImplNotExist();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_2StatusHandlerImplNotExist(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusHandlerImplNotExist", 1);

  /* "pylivox.pyx":551
 *     @staticmethod
 *     def StatusHandlerImplNotExist():
 *         return LivoxStatus.kStatusHandlerImplNotExist             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusHandlerImplNotExist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":549
 *         return LivoxStatus.kStatusSendFailed
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusHandlerImplNotExist():
 *         return LivoxStatus.kStatusHandlerImplNotExist
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusHandlerImplNotExist", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":553
 *         return LivoxStatus.kStatusHandlerImplNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusInvalidHandle():
 *         return LivoxStatus.kStatusInvalidHandle
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_5StatusInvalidHandle(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_5StatusInvalidHandle = {"StatusInvalidHandle", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_5StatusInvalidHandle, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_5StatusInvalidHandle(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusInvalidHandle (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusInvalidHandle", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusInvalidHandle", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_4StatusInvalidHandle();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_4StatusInvalidHandle(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusInvalidHandle", 1);

  /* "pylivox.pyx":555
 *     @staticmethod
 *     def StatusInvalidHandle():
 *         return LivoxStatus.kStatusInvalidHandle             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusInvalidHandle); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":553
 *         return LivoxStatus.kStatusHandlerImplNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusInvalidHandle():
 *         return LivoxStatus.kStatusInvalidHandle
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusInvalidHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":557
 *         return LivoxStatus.kStatusInvalidHandle
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusChannelNotExist():
 *         return LivoxStatus.kStatusChannelNotExist
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_7StatusChannelNotExist(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_7StatusChannelNotExist = {"StatusChannelNotExist", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_7StatusChannelNotExist, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_7StatusChannelNotExist(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusChannelNotExist (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusChannelNotExist", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusChannelNotExist", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_6StatusChannelNotExist();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_6StatusChannelNotExist(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusChannelNotExist", 1);

  /* "pylivox.pyx":559
 *     @staticmethod
 *     def StatusChannelNotExist():
 *         return LivoxStatus.kStatusChannelNotExist             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusChannelNotExist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":557
 *         return LivoxStatus.kStatusInvalidHandle
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusChannelNotExist():
 *         return LivoxStatus.kStatusChannelNotExist
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusChannelNotExist", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":561
 *         return LivoxStatus.kStatusChannelNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotEnoughMemory():
 *         return LivoxStatus.kStatusNotEnoughMemory
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_9StatusNotEnoughMemory(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_9StatusNotEnoughMemory = {"StatusNotEnoughMemory", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_9StatusNotEnoughMemory, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_9StatusNotEnoughMemory(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusNotEnoughMemory (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusNotEnoughMemory", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusNotEnoughMemory", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_8StatusNotEnoughMemory();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_8StatusNotEnoughMemory(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusNotEnoughMemory", 1);

  /* "pylivox.pyx":563
 *     @staticmethod
 *     def StatusNotEnoughMemory():
 *         return LivoxStatus.kStatusNotEnoughMemory             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusNotEnoughMemory); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":561
 *         return LivoxStatus.kStatusChannelNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotEnoughMemory():
 *         return LivoxStatus.kStatusNotEnoughMemory
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusNotEnoughMemory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":565
 *         return LivoxStatus.kStatusNotEnoughMemory
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusTimeout():
 *         return LivoxStatus.kStatusTimeout
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_11StatusTimeout(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_11StatusTimeout = {"StatusTimeout", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_11StatusTimeout, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_11StatusTimeout(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusTimeout (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusTimeout", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusTimeout", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_10StatusTimeout();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_10StatusTimeout(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusTimeout", 1);

  /* "pylivox.pyx":567
 *     @staticmethod
 *     def StatusTimeout():
 *         return LivoxStatus.kStatusTimeout             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusTimeout); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":565
 *         return LivoxStatus.kStatusNotEnoughMemory
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusTimeout():
 *         return LivoxStatus.kStatusTimeout
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusTimeout", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":569
 *         return LivoxStatus.kStatusTimeout
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotSupported():
 *         return LivoxStatus.kStatusNotSupported
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_13StatusNotSupported(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_13StatusNotSupported = {"StatusNotSupported", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_13StatusNotSupported, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_13StatusNotSupported(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusNotSupported (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusNotSupported", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusNotSupported", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_12StatusNotSupported();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_12StatusNotSupported(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusNotSupported", 1);

  /* "pylivox.pyx":571
 *     @staticmethod
 *     def StatusNotSupported():
 *         return LivoxStatus.kStatusNotSupported             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusNotSupported); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":569
 *         return LivoxStatus.kStatusTimeout
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotSupported():
 *         return LivoxStatus.kStatusNotSupported
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusNotSupported", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":573
 *         return LivoxStatus.kStatusNotSupported
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotConnected():
 *         return LivoxStatus.kStatusNotConnected
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_15StatusNotConnected(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_15StatusNotConnected = {"StatusNotConnected", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_15StatusNotConnected, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_15StatusNotConnected(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusNotConnected (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusNotConnected", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusNotConnected", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_14StatusNotConnected();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_14StatusNotConnected(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusNotConnected", 1);

  /* "pylivox.pyx":575
 *     @staticmethod
 *     def StatusNotConnected():
 *         return LivoxStatus.kStatusNotConnected             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusNotConnected); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":573
 *         return LivoxStatus.kStatusNotSupported
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotConnected():
 *         return LivoxStatus.kStatusNotConnected
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusNotConnected", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":577
 *         return LivoxStatus.kStatusNotConnected
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusFailure():
 *         return LivoxStatus.kStatusFailure
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_17StatusFailure(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_17StatusFailure = {"StatusFailure", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_17StatusFailure, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_17StatusFailure(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusFailure (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusFailure", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusFailure", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_16StatusFailure();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_16StatusFailure(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusFailure", 1);

  /* "pylivox.pyx":579
 *     @staticmethod
 *     def StatusFailure():
 *         return LivoxStatus.kStatusFailure             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusFailure); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":577
 *         return LivoxStatus.kStatusNotConnected
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusFailure():
 *         return LivoxStatus.kStatusFailure
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusFailure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":581
 *         return LivoxStatus.kStatusFailure
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSuccess():
 *         return LivoxStatus.kStatusSuccess
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_19StatusSuccess(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_19StatusSuccess = {"StatusSuccess", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_19StatusSuccess, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_19StatusSuccess(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StatusSuccess (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("StatusSuccess", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "StatusSuccess", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_18StatusSuccess();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_18StatusSuccess(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StatusSuccess", 1);

  /* "pylivox.pyx":583
 *     @staticmethod
 *     def StatusSuccess():
 *         return LivoxStatus.kStatusSuccess             # <<<<<<<<<<<<<<
 * 
 * cdef class PyDeviceEvent:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LivoxStatus(kStatusSuccess); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 583, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":581
 *         return LivoxStatus.kStatusFailure
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSuccess():
 *         return LivoxStatus.kStatusSuccess
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.StatusSuccess", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_21__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_21__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_21__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_21__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_20__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxStatus *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_20__reduce_cython__(struct __pyx_obj_7pylivox_PyLivoxStatus *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyLivoxStatus); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLivoxStatus__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyLivoxStatus); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLivoxStatus__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_23__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyLivoxStatus_23__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_23__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyLivoxStatus_23__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_13PyLivoxStatus_22__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxStatus *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyLivoxStatus_22__setstate_cython__(struct __pyx_obj_7pylivox_PyLivoxStatus *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyLivoxStatus__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLivoxStatus__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLivoxStatus__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxStatus.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":589
 *     Device update type, indicating the change of device connection or working state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventConnect():
 *         return DeviceEvent.kEventConnect
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_1EventConnect(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyDeviceEvent_1EventConnect = {"EventConnect", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_1EventConnect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_1EventConnect(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EventConnect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("EventConnect", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "EventConnect", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyDeviceEvent_EventConnect();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_EventConnect(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EventConnect", 1);

  /* "pylivox.pyx":591
 *     @staticmethod
 *     def EventConnect():
 *         return DeviceEvent.kEventConnect             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceEvent(kEventConnect); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":589
 *     Device update type, indicating the change of device connection or working state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventConnect():
 *         return DeviceEvent.kEventConnect
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.EventConnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":593
 *         return DeviceEvent.kEventConnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventDisconnect():
 *         return DeviceEvent.kEventDisconnect
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_3EventDisconnect(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyDeviceEvent_3EventDisconnect = {"EventDisconnect", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_3EventDisconnect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_3EventDisconnect(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EventDisconnect (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("EventDisconnect", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "EventDisconnect", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyDeviceEvent_2EventDisconnect();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_2EventDisconnect(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EventDisconnect", 1);

  /* "pylivox.pyx":595
 *     @staticmethod
 *     def EventDisconnect():
 *         return DeviceEvent.kEventDisconnect             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceEvent(kEventDisconnect); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":593
 *         return DeviceEvent.kEventConnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventDisconnect():
 *         return DeviceEvent.kEventDisconnect
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.EventDisconnect", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":597
 *         return DeviceEvent.kEventDisconnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventStateChange():
 *         return DeviceEvent.kEventStateChange
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_5EventStateChange(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyDeviceEvent_5EventStateChange = {"EventStateChange", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_5EventStateChange, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_5EventStateChange(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EventStateChange (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("EventStateChange", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "EventStateChange", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyDeviceEvent_4EventStateChange();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_4EventStateChange(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EventStateChange", 1);

  /* "pylivox.pyx":599
 *     @staticmethod
 *     def EventStateChange():
 *         return DeviceEvent.kEventStateChange             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceEvent(kEventStateChange); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":597
 *         return DeviceEvent.kEventDisconnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventStateChange():
 *         return DeviceEvent.kEventStateChange
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.EventStateChange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":601
 *         return DeviceEvent.kEventStateChange
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventHubConnectionChange():
 *         return DeviceEvent.kEventHubConnectionChange
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_7EventHubConnectionChange(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyDeviceEvent_7EventHubConnectionChange = {"EventHubConnectionChange", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_7EventHubConnectionChange, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_7EventHubConnectionChange(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("EventHubConnectionChange (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("EventHubConnectionChange", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "EventHubConnectionChange", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyDeviceEvent_6EventHubConnectionChange();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_6EventHubConnectionChange(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("EventHubConnectionChange", 1);

  /* "pylivox.pyx":603
 *     @staticmethod
 *     def EventHubConnectionChange():
 *         return DeviceEvent.kEventHubConnectionChange             # <<<<<<<<<<<<<<
 * 
 * cdef class PyTimestampType:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_DeviceEvent(kEventHubConnectionChange); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":601
 *         return DeviceEvent.kEventStateChange
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventHubConnectionChange():
 *         return DeviceEvent.kEventHubConnectionChange
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.EventHubConnectionChange", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyDeviceEvent_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyDeviceEvent_8__reduce_cython__(((struct __pyx_obj_7pylivox_PyDeviceEvent *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_8__reduce_cython__(struct __pyx_obj_7pylivox_PyDeviceEvent *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyDeviceEvent); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyDeviceEvent__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyDeviceEvent); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceEvent__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyDeviceEvent_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyDeviceEvent_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_13PyDeviceEvent_10__setstate_cython__(((struct __pyx_obj_7pylivox_PyDeviceEvent *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyDeviceEvent_10__setstate_cython__(struct __pyx_obj_7pylivox_PyDeviceEvent *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyDeviceEvent__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyDeviceEvent__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceEvent__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceEvent.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":609
 *     Timestamp sync mode define.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeNoSync():
 *         return TimestampType.kTimestampTypeNoSync
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_1TimestampTypeNoSync(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_1TimestampTypeNoSync = {"TimestampTypeNoSync", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_1TimestampTypeNoSync, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_1TimestampTypeNoSync(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimestampTypeNoSync (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("TimestampTypeNoSync", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "TimestampTypeNoSync", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_TimestampTypeNoSync();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_TimestampTypeNoSync(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimestampTypeNoSync", 1);

  /* "pylivox.pyx":611
 *     @staticmethod
 *     def TimestampTypeNoSync():
 *         return TimestampType.kTimestampTypeNoSync             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_TimestampType(kTimestampTypeNoSync); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":609
 *     Timestamp sync mode define.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeNoSync():
 *         return TimestampType.kTimestampTypeNoSync
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.TimestampTypeNoSync", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":613
 *         return TimestampType.kTimestampTypeNoSync
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePtp():
 *         return TimestampType.kTimestampTypePtp
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_3TimestampTypePtp(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_3TimestampTypePtp = {"TimestampTypePtp", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_3TimestampTypePtp, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_3TimestampTypePtp(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimestampTypePtp (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("TimestampTypePtp", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "TimestampTypePtp", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_2TimestampTypePtp();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_2TimestampTypePtp(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimestampTypePtp", 1);

  /* "pylivox.pyx":615
 *     @staticmethod
 *     def TimestampTypePtp():
 *         return TimestampType.kTimestampTypePtp             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_TimestampType(kTimestampTypePtp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":613
 *         return TimestampType.kTimestampTypeNoSync
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePtp():
 *         return TimestampType.kTimestampTypePtp
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.TimestampTypePtp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":617
 *         return TimestampType.kTimestampTypePtp
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeRsvd():
 *         return TimestampType.kTimestampTypeRsvd
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_5TimestampTypeRsvd(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_5TimestampTypeRsvd = {"TimestampTypeRsvd", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_5TimestampTypeRsvd, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_5TimestampTypeRsvd(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimestampTypeRsvd (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("TimestampTypeRsvd", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "TimestampTypeRsvd", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_4TimestampTypeRsvd();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_4TimestampTypeRsvd(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimestampTypeRsvd", 1);

  /* "pylivox.pyx":619
 *     @staticmethod
 *     def TimestampTypeRsvd():
 *         return TimestampType.kTimestampTypeRsvd             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_TimestampType(kTimestampTypeRsvd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":617
 *         return TimestampType.kTimestampTypePtp
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeRsvd():
 *         return TimestampType.kTimestampTypeRsvd
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.TimestampTypeRsvd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":621
 *         return TimestampType.kTimestampTypeRsvd
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePpsGps():
 *         return TimestampType.kTimestampTypePpsGps
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_7TimestampTypePpsGps(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_7TimestampTypePpsGps = {"TimestampTypePpsGps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_7TimestampTypePpsGps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_7TimestampTypePpsGps(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimestampTypePpsGps (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("TimestampTypePpsGps", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "TimestampTypePpsGps", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_6TimestampTypePpsGps();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_6TimestampTypePpsGps(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimestampTypePpsGps", 1);

  /* "pylivox.pyx":623
 *     @staticmethod
 *     def TimestampTypePpsGps():
 *         return TimestampType.kTimestampTypePpsGps             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_TimestampType(kTimestampTypePpsGps); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":621
 *         return TimestampType.kTimestampTypeRsvd
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePpsGps():
 *         return TimestampType.kTimestampTypePpsGps
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.TimestampTypePpsGps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":625
 *         return TimestampType.kTimestampTypePpsGps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePps():
 *         return TimestampType.kTimestampTypePps
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_9TimestampTypePps(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_9TimestampTypePps = {"TimestampTypePps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_9TimestampTypePps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_9TimestampTypePps(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimestampTypePps (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("TimestampTypePps", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "TimestampTypePps", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_8TimestampTypePps();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_8TimestampTypePps(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimestampTypePps", 1);

  /* "pylivox.pyx":627
 *     @staticmethod
 *     def TimestampTypePps():
 *         return TimestampType.kTimestampTypePps             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_TimestampType(kTimestampTypePps); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":625
 *         return TimestampType.kTimestampTypePpsGps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePps():
 *         return TimestampType.kTimestampTypePps
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.TimestampTypePps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":629
 *         return TimestampType.kTimestampTypePps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeUnknown():
 *         return TimestampType.kTimestampTypeUnknown
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_11TimestampTypeUnknown(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_11TimestampTypeUnknown = {"TimestampTypeUnknown", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_11TimestampTypeUnknown, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_11TimestampTypeUnknown(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("TimestampTypeUnknown (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("TimestampTypeUnknown", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "TimestampTypeUnknown", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_10TimestampTypeUnknown();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_10TimestampTypeUnknown(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("TimestampTypeUnknown", 1);

  /* "pylivox.pyx":631
 *     @staticmethod
 *     def TimestampTypeUnknown():
 *         return TimestampType.kTimestampTypeUnknown             # <<<<<<<<<<<<<<
 * 
 * cdef class PyPointDataType:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_TimestampType(kTimestampTypeUnknown); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":629
 *         return TimestampType.kTimestampTypePps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeUnknown():
 *         return TimestampType.kTimestampTypeUnknown
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.TimestampTypeUnknown", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_12__reduce_cython__(((struct __pyx_obj_7pylivox_PyTimestampType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_12__reduce_cython__(struct __pyx_obj_7pylivox_PyTimestampType *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyTimestampType); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyTimestampType__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyTimestampType); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyTimestampType.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyTimestampType__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyTimestampType_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyTimestampType_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyTimestampType.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_15PyTimestampType_14__setstate_cython__(((struct __pyx_obj_7pylivox_PyTimestampType *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyTimestampType_14__setstate_cython__(struct __pyx_obj_7pylivox_PyTimestampType *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyTimestampType__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyTimestampType__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyTimestampType__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyTimestampType.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":637
 *     Point data type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeCartesian():
 *         return PointDataType.kCartesian
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_1PointDataTypeCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_1PointDataTypeCartesian = {"PointDataTypeCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_1PointDataTypeCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_1PointDataTypeCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeCartesian (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeCartesian", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeCartesian", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_PointDataTypeCartesian();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_PointDataTypeCartesian(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeCartesian", 1);

  /* "pylivox.pyx":639
 *     @staticmethod
 *     def PointDataTypeCartesian():
 *         return PointDataType.kCartesian             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kCartesian); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":637
 *     Point data type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeCartesian():
 *         return PointDataType.kCartesian
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeCartesian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":641
 *         return PointDataType.kCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeSpherical():
 *         return PointDataType.kSpherical
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_3PointDataTypeSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_3PointDataTypeSpherical = {"PointDataTypeSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_3PointDataTypeSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_3PointDataTypeSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeSpherical (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeSpherical", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeSpherical", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_2PointDataTypeSpherical();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_2PointDataTypeSpherical(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeSpherical", 1);

  /* "pylivox.pyx":643
 *     @staticmethod
 *     def PointDataTypeSpherical():
 *         return PointDataType.kSpherical             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kSpherical); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":641
 *         return PointDataType.kCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeSpherical():
 *         return PointDataType.kSpherical
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeSpherical", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":645
 *         return PointDataType.kSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendCartesian():
 *         return PointDataType.kExtendCartesian
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_5PointDataTypeExtendCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_5PointDataTypeExtendCartesian = {"PointDataTypeExtendCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_5PointDataTypeExtendCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_5PointDataTypeExtendCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeExtendCartesian (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeExtendCartesian", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeExtendCartesian", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_4PointDataTypeExtendCartesian();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_4PointDataTypeExtendCartesian(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeExtendCartesian", 1);

  /* "pylivox.pyx":647
 *     @staticmethod
 *     def PointDataTypeExtendCartesian():
 *         return PointDataType.kExtendCartesian             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kExtendCartesian); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":645
 *         return PointDataType.kSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendCartesian():
 *         return PointDataType.kExtendCartesian
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeExtendCartesian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":649
 *         return PointDataType.kExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendSpherical():
 *         return PointDataType.kExtendSpherical
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_7PointDataTypeExtendSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_7PointDataTypeExtendSpherical = {"PointDataTypeExtendSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_7PointDataTypeExtendSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_7PointDataTypeExtendSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeExtendSpherical (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeExtendSpherical", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeExtendSpherical", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_6PointDataTypeExtendSpherical();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_6PointDataTypeExtendSpherical(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeExtendSpherical", 1);

  /* "pylivox.pyx":651
 *     @staticmethod
 *     def PointDataTypeExtendSpherical():
 *         return PointDataType.kExtendSpherical             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kExtendSpherical); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":649
 *         return PointDataType.kExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendSpherical():
 *         return PointDataType.kExtendSpherical
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeExtendSpherical", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":653
 *         return PointDataType.kExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendCartesian():
 *         return PointDataType.kDualExtendCartesian
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_9PointDataTypeDualExtendCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_9PointDataTypeDualExtendCartesian = {"PointDataTypeDualExtendCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_9PointDataTypeDualExtendCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_9PointDataTypeDualExtendCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeDualExtendCartesian (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeDualExtendCartesian", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeDualExtendCartesian", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_8PointDataTypeDualExtendCartesian();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_8PointDataTypeDualExtendCartesian(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeDualExtendCartesian", 1);

  /* "pylivox.pyx":655
 *     @staticmethod
 *     def PointDataTypeDualExtendCartesian():
 *         return PointDataType.kDualExtendCartesian             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kDualExtendCartesian); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":653
 *         return PointDataType.kExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendCartesian():
 *         return PointDataType.kDualExtendCartesian
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeDualExtendCartesian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":657
 *         return PointDataType.kDualExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendSpherical():
 *         return PointDataType.kDualExtendSpherical
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_11PointDataTypeDualExtendSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_11PointDataTypeDualExtendSpherical = {"PointDataTypeDualExtendSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_11PointDataTypeDualExtendSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_11PointDataTypeDualExtendSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeDualExtendSpherical (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeDualExtendSpherical", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeDualExtendSpherical", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_10PointDataTypeDualExtendSpherical();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_10PointDataTypeDualExtendSpherical(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeDualExtendSpherical", 1);

  /* "pylivox.pyx":659
 *     @staticmethod
 *     def PointDataTypeDualExtendSpherical():
 *         return PointDataType.kDualExtendSpherical             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kDualExtendSpherical); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":657
 *         return PointDataType.kDualExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendSpherical():
 *         return PointDataType.kDualExtendSpherical
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeDualExtendSpherical", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":661
 *         return PointDataType.kDualExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeImu():
 *         return PointDataType.kImu
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_13PointDataTypeImu(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_13PointDataTypeImu = {"PointDataTypeImu", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_13PointDataTypeImu, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_13PointDataTypeImu(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeImu (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeImu", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeImu", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_12PointDataTypeImu();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_12PointDataTypeImu(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeImu", 1);

  /* "pylivox.pyx":663
 *     @staticmethod
 *     def PointDataTypeImu():
 *         return PointDataType.kImu             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kImu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":661
 *         return PointDataType.kDualExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeImu():
 *         return PointDataType.kImu
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeImu", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":665
 *         return PointDataType.kImu
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendCartesian():
 *         return PointDataType.kTripleExtendCartesian
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_15PointDataTypeTripleExtendCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_15PointDataTypeTripleExtendCartesian = {"PointDataTypeTripleExtendCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_15PointDataTypeTripleExtendCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_15PointDataTypeTripleExtendCartesian(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeTripleExtendCartesian (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeTripleExtendCartesian", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeTripleExtendCartesian", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_14PointDataTypeTripleExtendCartesian();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_14PointDataTypeTripleExtendCartesian(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeTripleExtendCartesian", 1);

  /* "pylivox.pyx":667
 *     @staticmethod
 *     def PointDataTypeTripleExtendCartesian():
 *         return PointDataType.kTripleExtendCartesian             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kTripleExtendCartesian); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":665
 *         return PointDataType.kImu
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendCartesian():
 *         return PointDataType.kTripleExtendCartesian
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeTripleExtendCartesian", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":669
 *         return PointDataType.kTripleExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendSpherical():
 *         return PointDataType.kTripleExtendSpherical
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_17PointDataTypeTripleExtendSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_17PointDataTypeTripleExtendSpherical = {"PointDataTypeTripleExtendSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_17PointDataTypeTripleExtendSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_17PointDataTypeTripleExtendSpherical(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeTripleExtendSpherical (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeTripleExtendSpherical", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeTripleExtendSpherical", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_16PointDataTypeTripleExtendSpherical();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_16PointDataTypeTripleExtendSpherical(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeTripleExtendSpherical", 1);

  /* "pylivox.pyx":671
 *     @staticmethod
 *     def PointDataTypeTripleExtendSpherical():
 *         return PointDataType.kTripleExtendSpherical             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kTripleExtendSpherical); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":669
 *         return PointDataType.kTripleExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendSpherical():
 *         return PointDataType.kTripleExtendSpherical
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeTripleExtendSpherical", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":673
 *         return PointDataType.kTripleExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeMax():
 *         return PointDataType.kMaxPointDataType
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_19PointDataTypeMax(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_19PointDataTypeMax = {"PointDataTypeMax", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_19PointDataTypeMax, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_19PointDataTypeMax(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointDataTypeMax (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointDataTypeMax", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointDataTypeMax", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_18PointDataTypeMax();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_18PointDataTypeMax(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointDataTypeMax", 1);

  /* "pylivox.pyx":675
 *     @staticmethod
 *     def PointDataTypeMax():
 *         return PointDataType.kMaxPointDataType             # <<<<<<<<<<<<<<
 * 
 * cdef class PyPointCloudReturnMode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointDataType(kMaxPointDataType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 675, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":673
 *         return PointDataType.kTripleExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeMax():
 *         return PointDataType.kMaxPointDataType
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.PointDataTypeMax", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_21__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_21__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_21__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_21__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_20__reduce_cython__(((struct __pyx_obj_7pylivox_PyPointDataType *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_20__reduce_cython__(struct __pyx_obj_7pylivox_PyPointDataType *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyPointDataType); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyPointDataType__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyPointDataType); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyPointDataType.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointDataType__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_23__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyPointDataType_23__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_23__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyPointDataType_23__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyPointDataType.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_15PyPointDataType_22__setstate_cython__(((struct __pyx_obj_7pylivox_PyPointDataType *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyPointDataType_22__setstate_cython__(struct __pyx_obj_7pylivox_PyPointDataType *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyPointDataType__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyPointDataType__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointDataType__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointDataType.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":681
 *     Point cloud return mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnFirst():
 *         return PointCloudReturnMode.kFirstReturn
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_1PointCloudReturnFirst(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyPointCloudReturnMode_1PointCloudReturnFirst = {"PointCloudReturnFirst", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_1PointCloudReturnFirst, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_1PointCloudReturnFirst(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointCloudReturnFirst (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointCloudReturnFirst", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointCloudReturnFirst", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_22PyPointCloudReturnMode_PointCloudReturnFirst();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_PointCloudReturnFirst(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointCloudReturnFirst", 1);

  /* "pylivox.pyx":683
 *     @staticmethod
 *     def PointCloudReturnFirst():
 *         return PointCloudReturnMode.kFirstReturn             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointCloudReturnMode(kFirstReturn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":681
 *     Point cloud return mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnFirst():
 *         return PointCloudReturnMode.kFirstReturn
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.PointCloudReturnFirst", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":685
 *         return PointCloudReturnMode.kFirstReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnStrongest():
 *         return PointCloudReturnMode.kStrongestReturn
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_3PointCloudReturnStrongest(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyPointCloudReturnMode_3PointCloudReturnStrongest = {"PointCloudReturnStrongest", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_3PointCloudReturnStrongest, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_3PointCloudReturnStrongest(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointCloudReturnStrongest (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointCloudReturnStrongest", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointCloudReturnStrongest", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_22PyPointCloudReturnMode_2PointCloudReturnStrongest();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_2PointCloudReturnStrongest(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointCloudReturnStrongest", 1);

  /* "pylivox.pyx":687
 *     @staticmethod
 *     def PointCloudReturnStrongest():
 *         return PointCloudReturnMode.kStrongestReturn             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointCloudReturnMode(kStrongestReturn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":685
 *         return PointCloudReturnMode.kFirstReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnStrongest():
 *         return PointCloudReturnMode.kStrongestReturn
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.PointCloudReturnStrongest", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":689
 *         return PointCloudReturnMode.kStrongestReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnDual():
 *         return PointCloudReturnMode.kDualReturn
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_5PointCloudReturnDual(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyPointCloudReturnMode_5PointCloudReturnDual = {"PointCloudReturnDual", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_5PointCloudReturnDual, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_5PointCloudReturnDual(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointCloudReturnDual (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointCloudReturnDual", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointCloudReturnDual", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_22PyPointCloudReturnMode_4PointCloudReturnDual();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_4PointCloudReturnDual(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointCloudReturnDual", 1);

  /* "pylivox.pyx":691
 *     @staticmethod
 *     def PointCloudReturnDual():
 *         return PointCloudReturnMode.kDualReturn             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointCloudReturnMode(kDualReturn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 691, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":689
 *         return PointCloudReturnMode.kStrongestReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnDual():
 *         return PointCloudReturnMode.kDualReturn
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.PointCloudReturnDual", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":693
 *         return PointCloudReturnMode.kDualReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnTriple():
 *         return PointCloudReturnMode.kTripleReturn
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_7PointCloudReturnTriple(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyPointCloudReturnMode_7PointCloudReturnTriple = {"PointCloudReturnTriple", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_7PointCloudReturnTriple, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_7PointCloudReturnTriple(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("PointCloudReturnTriple (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("PointCloudReturnTriple", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "PointCloudReturnTriple", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_22PyPointCloudReturnMode_6PointCloudReturnTriple();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_6PointCloudReturnTriple(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PointCloudReturnTriple", 1);

  /* "pylivox.pyx":695
 *     @staticmethod
 *     def PointCloudReturnTriple():
 *         return PointCloudReturnMode.kTripleReturn             # <<<<<<<<<<<<<<
 * 
 * cdef class PyImuFreq:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_PointCloudReturnMode(kTripleReturn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":693
 *         return PointCloudReturnMode.kDualReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnTriple():
 *         return PointCloudReturnMode.kTripleReturn
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.PointCloudReturnTriple", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyPointCloudReturnMode_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_22PyPointCloudReturnMode_8__reduce_cython__(((struct __pyx_obj_7pylivox_PyPointCloudReturnMode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_8__reduce_cython__(struct __pyx_obj_7pylivox_PyPointCloudReturnMode *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyPointCloudRetur); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyPointCloudReturnMode__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyPointCloudRetur); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointCloudReturnMode__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyPointCloudReturnMode_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyPointCloudReturnMode_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_22PyPointCloudReturnMode_10__setstate_cython__(((struct __pyx_obj_7pylivox_PyPointCloudReturnMode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyPointCloudReturnMode_10__setstate_cython__(struct __pyx_obj_7pylivox_PyPointCloudReturnMode *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyPointCloudReturnMode__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyPointCloudReturnMode__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointCloudReturnMode__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyPointCloudReturnMode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":701
 *     IMU push frequency.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq0Hz():
 *         return ImuFreq.kImuFreq0Hz
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_1ImuFreq0Hz(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_9PyImuFreq_1ImuFreq0Hz = {"ImuFreq0Hz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_1ImuFreq0Hz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_1ImuFreq0Hz(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ImuFreq0Hz (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("ImuFreq0Hz", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "ImuFreq0Hz", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_9PyImuFreq_ImuFreq0Hz();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_9PyImuFreq_ImuFreq0Hz(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ImuFreq0Hz", 1);

  /* "pylivox.pyx":703
 *     @staticmethod
 *     def ImuFreq0Hz():
 *         return ImuFreq.kImuFreq0Hz             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_ImuFreq(kImuFreq0Hz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":701
 *     IMU push frequency.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq0Hz():
 *         return ImuFreq.kImuFreq0Hz
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyImuFreq.ImuFreq0Hz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":705
 *         return ImuFreq.kImuFreq0Hz
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq200Hz():
 *         return ImuFreq.kImuFreq200Hz
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_3ImuFreq200Hz(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_9PyImuFreq_3ImuFreq200Hz = {"ImuFreq200Hz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_3ImuFreq200Hz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_3ImuFreq200Hz(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("ImuFreq200Hz (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("ImuFreq200Hz", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "ImuFreq200Hz", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_9PyImuFreq_2ImuFreq200Hz();

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_9PyImuFreq_2ImuFreq200Hz(void) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ImuFreq200Hz", 1);

  /* "pylivox.pyx":707
 *     @staticmethod
 *     def ImuFreq200Hz():
 *         return ImuFreq.kImuFreq200Hz             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLivoxSdkVersion:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_ImuFreq(kImuFreq200Hz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":705
 *         return ImuFreq.kImuFreq0Hz
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq200Hz():
 *         return ImuFreq.kImuFreq200Hz
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyImuFreq.ImuFreq200Hz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_9PyImuFreq_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_9PyImuFreq_4__reduce_cython__(((struct __pyx_obj_7pylivox_PyImuFreq *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_9PyImuFreq_4__reduce_cython__(struct __pyx_obj_7pylivox_PyImuFreq *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict)) __PYX_ERR(1, 8, __pyx_L1_error);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_PyImuFreq); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state)) __PYX_ERR(1, 13, __pyx_L1_error);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, None), state
 *     else:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyImuFreq__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_PyImuFreq); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))))) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_int_238750788);
    __Pyx_GIVEREF(__pyx_int_238750788);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_238750788)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error);
    __Pyx_GIVEREF(__pyx_t_1);
    if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.PyImuFreq.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyImuFreq__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_9PyImuFreq_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_9PyImuFreq_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyImuFreq.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_9PyImuFreq_6__setstate_cython__(((struct __pyx_obj_7pylivox_PyImuFreq *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_9PyImuFreq_6__setstate_cython__(struct __pyx_obj_7pylivox_PyImuFreq *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_PyImuFreq__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyImuFreq__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyImuFreq__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyImuFreq.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":715
 *     cdef LivoxSdkVersion core
 * 
 *     def __init__(self, int major=0, int minor=0, int patch=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxSdkVersion(major, minor, patch)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_major;
  int __pyx_v_minor;
  int __pyx_v_patch;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_major,&__pyx_n_s_minor,&__pyx_n_s_patch,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_major);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 715, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_minor);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 715, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_patch);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 715, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 715, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_major = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_major == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 715, __pyx_L3_error)
    } else {
      __pyx_v_major = ((int)0);
    }
    if (values[1]) {
      __pyx_v_minor = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_minor == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 715, __pyx_L3_error)
    } else {
      __pyx_v_minor = ((int)0);
    }
    if (values[2]) {
      __pyx_v_patch = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_patch == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 715, __pyx_L3_error)
    } else {
      __pyx_v_patch = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 715, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion___init__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self), __pyx_v_major, __pyx_v_minor, __pyx_v_patch);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSdkVersion___init__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, int __pyx_v_major, int __pyx_v_minor, int __pyx_v_patch) {
  int __pyx_r;
  LivoxSdkVersion __pyx_t_1;

  /* "pylivox.pyx":716
 * 
 *     def __init__(self, int major=0, int minor=0, int patch=0):
 *         self.core = LivoxSdkVersion(major, minor, patch)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.major = __pyx_v_major;
  __pyx_t_1.minor = __pyx_v_minor;
  __pyx_t_1.patch = __pyx_v_patch;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":715
 *     cdef LivoxSdkVersion core
 * 
 *     def __init__(self, int major=0, int minor=0, int patch=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxSdkVersion(major, minor, patch)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":718
 *         self.core = LivoxSdkVersion(major, minor, patch)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def major(self):
 *         return self.core.major
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5major_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5major_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_5major___get__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_5major___get__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":720
 *     @property
 *     def major(self):
 *         return self.core.major             # <<<<<<<<<<<<<<
 * 
 *     @major.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->core.major); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":718
 *         self.core = LivoxSdkVersion(major, minor, patch)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def major(self):
 *         return self.core.major
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.major.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":722
 *         return self.core.major
 * 
 *     @major.setter             # <<<<<<<<<<<<<<
 *     def major(self, major):
 *         self.core.major = major
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_5major_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_major); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_5major_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_major) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_5major_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self), ((PyObject *)__pyx_v_major));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSdkVersion_5major_2__set__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, PyObject *__pyx_v_major) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":724
 *     @major.setter
 *     def major(self, major):
 *         self.core.major = major             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_major); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 724, __pyx_L1_error)
  __pyx_v_self->core.major = __pyx_t_1;

  /* "pylivox.pyx":722
 *         return self.core.major
 * 
 *     @major.setter             # <<<<<<<<<<<<<<
 *     def major(self, major):
 *         self.core.major = major
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.major.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":726
 *         self.core.major = major
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def minor(self):
 *         return self.core.minor
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5minor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5minor_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_5minor___get__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_5minor___get__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":728
 *     @property
 *     def minor(self):
 *         return self.core.minor             # <<<<<<<<<<<<<<
 * 
 *     @minor.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->core.minor); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":726
 *         self.core.major = major
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def minor(self):
 *         return self.core.minor
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.minor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":730
 *         return self.core.minor
 * 
 *     @minor.setter             # <<<<<<<<<<<<<<
 *     def minor(self, minor):
 *         self.core.minor = minor
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_5minor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_minor); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_5minor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_minor) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_5minor_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self), ((PyObject *)__pyx_v_minor));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSdkVersion_5minor_2__set__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, PyObject *__pyx_v_minor) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":732
 *     @minor.setter
 *     def minor(self, minor):
 *         self.core.minor = minor             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_minor); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 732, __pyx_L1_error)
  __pyx_v_self->core.minor = __pyx_t_1;

  /* "pylivox.pyx":730
 *         return self.core.minor
 * 
 *     @minor.setter             # <<<<<<<<<<<<<<
 *     def minor(self, minor):
 *         self.core.minor = minor
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.minor.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":734
 *         self.core.minor = minor
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def patch(self):
 *         return self.core.patch
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5patch_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5patch_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_5patch___get__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_5patch___get__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":736
 *     @property
 *     def patch(self):
 *         return self.core.patch             # <<<<<<<<<<<<<<
 * 
 *     @patch.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->core.patch); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":734
 *         self.core.minor = minor
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def patch(self):
 *         return self.core.patch
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.patch.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":738
 *         return self.core.patch
 * 
 *     @patch.setter             # <<<<<<<<<<<<<<
 *     def patch(self, patch):
 *         self.core.patch = patch
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_5patch_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_patch); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSdkVersion_5patch_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_patch) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_5patch_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self), ((PyObject *)__pyx_v_patch));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSdkVersion_5patch_2__set__(struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, PyObject *__pyx_v_patch) {
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":740
 *     @patch.setter
 *     def patch(self, patch):
 *         self.core.patch = patch             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLivoxRawPoint:
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_patch); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 740, __pyx_L1_error)
  __pyx_v_self->core.patch = __pyx_t_1;

  /* "pylivox.pyx":738
 *         return self.core.patch
 * 
 *     @patch.setter             # <<<<<<<<<<<<<<
 *     def patch(self, patch):
 *         self.core.patch = patch
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.patch.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_17PyLivoxSdkVersion_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSdkVersion_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_17PyLivoxSdkVersion_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSdkVersion_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_17PyLivoxSdkVersion_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSdkVersion_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSdkVersion_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSdkVersion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSdkVersion.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":748
 *     cdef LivoxRawPoint core
 * 
 *     def __init__(self, int x=0, int y=0, int z=0, int reflectivity=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxRawPoint(x, y, z, reflectivity)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_z;
  int __pyx_v_reflectivity;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_reflectivity,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 748, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
    } else {
      __pyx_v_x = ((int)0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
    } else {
      __pyx_v_y = ((int)0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_z == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
    } else {
      __pyx_v_z = ((int)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_reflectivity == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 748, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity = ((int)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 748, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_reflectivity);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, int __pyx_v_x, int __pyx_v_y, int __pyx_v_z, int __pyx_v_reflectivity) {
  int __pyx_r;
  LivoxRawPoint __pyx_t_1;

  /* "pylivox.pyx":749
 * 
 *     def __init__(self, int x=0, int y=0, int z=0, int reflectivity=0):
 *         self.core = LivoxRawPoint(x, y, z, reflectivity)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.x = __pyx_v_x;
  __pyx_t_1.y = __pyx_v_y;
  __pyx_t_1.z = __pyx_v_z;
  __pyx_t_1.reflectivity = __pyx_v_reflectivity;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":748
 *     cdef LivoxRawPoint core
 * 
 *     def __init__(self, int x=0, int y=0, int z=0, int reflectivity=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxRawPoint(x, y, z, reflectivity)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":751
 *         self.core = LivoxRawPoint(x, y, z, reflectivity)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x(self):
 *         return self.core.x
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_1x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_1x___get__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_1x___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":753
 *     @property
 *     def x(self):
 *         return self.core.x             # <<<<<<<<<<<<<<
 * 
 *     @x.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":751
 *         self.core = LivoxRawPoint(x, y, z, reflectivity)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x(self):
 *         return self.core.x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":755
 *         return self.core.x
 * 
 *     @x.setter             # <<<<<<<<<<<<<<
 *     def x(self, x):
 *         self.core.x = x
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_1x_2__set__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxRawPoint_1x_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":757
 *     @x.setter
 *     def x(self, x):
 *         self.core.x = x             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 757, __pyx_L1_error)
  __pyx_v_self->core.x = __pyx_t_1;

  /* "pylivox.pyx":755
 *         return self.core.x
 * 
 *     @x.setter             # <<<<<<<<<<<<<<
 *     def x(self, x):
 *         self.core.x = x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":759
 *         self.core.x = x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y(self):
 *         return self.core.y
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_1y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_1y___get__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_1y___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":761
 *     @property
 *     def y(self):
 *         return self.core.y             # <<<<<<<<<<<<<<
 * 
 *     @y.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":759
 *         self.core.x = x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y(self):
 *         return self.core.y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":763
 *         return self.core.y
 * 
 *     @y.setter             # <<<<<<<<<<<<<<
 *     def y(self, y):
 *         self.core.y = y
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_1y_2__set__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxRawPoint_1y_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":765
 *     @y.setter
 *     def y(self, y):
 *         self.core.y = y             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 765, __pyx_L1_error)
  __pyx_v_self->core.y = __pyx_t_1;

  /* "pylivox.pyx":763
 *         return self.core.y
 * 
 *     @y.setter             # <<<<<<<<<<<<<<
 *     def y(self, y):
 *         self.core.y = y
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":767
 *         self.core.y = y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z(self):
 *         return self.core.z
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_1z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_1z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_1z___get__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_1z___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":769
 *     @property
 *     def z(self):
 *         return self.core.z             # <<<<<<<<<<<<<<
 * 
 *     @z.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":767
 *         self.core.y = y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z(self):
 *         return self.core.z
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":771
 *         return self.core.z
 * 
 *     @z.setter             # <<<<<<<<<<<<<<
 *     def z(self, z):
 *         self.core.z = z
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_1z_2__set__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxRawPoint_1z_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_z) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":773
 *     @z.setter
 *     def z(self, z):
 *         self.core.z = z             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 773, __pyx_L1_error)
  __pyx_v_self->core.z = __pyx_t_1;

  /* "pylivox.pyx":771
 *         return self.core.z
 * 
 *     @z.setter             # <<<<<<<<<<<<<<
 *     def z(self, z):
 *         self.core.z = z
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":775
 *         self.core.z = z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_12reflectivity_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_12reflectivity_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_12reflectivity___get__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":777
 *     @property
 *     def reflectivity(self):
 *         return self.core.reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":775
 *         self.core.z = z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.reflectivity.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":779
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxRawPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_12reflectivity_2__set__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxRawPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":781
 *     @reflectivity.setter
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLivoxSpherPoint:
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 781, __pyx_L1_error)
  __pyx_v_self->core.reflectivity = __pyx_t_1;

  /* "pylivox.pyx":779
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.reflectivity.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyLivoxRawPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyLivoxRawPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyLivoxRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxRawPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":789
 *     cdef LivoxSpherPoint core
 * 
 *     def __init__(self, uint32_t depth=0, uint16_t theta=0, uint16_t phi=0, uint8_t reflectivity=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxSpherPoint(depth, theta, phi, reflectivity)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint32_t __pyx_v_depth;
  uint16_t __pyx_v_theta;
  uint16_t __pyx_v_phi;
  uint8_t __pyx_v_reflectivity;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_depth,&__pyx_n_s_theta,&__pyx_n_s_phi,&__pyx_n_s_reflectivity,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_theta);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phi);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 789, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_depth = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_depth == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
    } else {
      __pyx_v_depth = ((uint32_t)0);
    }
    if (values[1]) {
      __pyx_v_theta = __Pyx_PyInt_As_uint16_t(values[1]); if (unlikely((__pyx_v_theta == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
    } else {
      __pyx_v_theta = ((uint16_t)0);
    }
    if (values[2]) {
      __pyx_v_phi = __Pyx_PyInt_As_uint16_t(values[2]); if (unlikely((__pyx_v_phi == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
    } else {
      __pyx_v_phi = ((uint16_t)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 789, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self), __pyx_v_depth, __pyx_v_theta, __pyx_v_phi, __pyx_v_reflectivity);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, uint32_t __pyx_v_depth, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint8_t __pyx_v_reflectivity) {
  int __pyx_r;
  LivoxSpherPoint __pyx_t_1;

  /* "pylivox.pyx":790
 * 
 *     def __init__(self, uint32_t depth=0, uint16_t theta=0, uint16_t phi=0, uint8_t reflectivity=0):
 *         self.core = LivoxSpherPoint(depth, theta, phi, reflectivity)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.depth = __pyx_v_depth;
  __pyx_t_1.theta = __pyx_v_theta;
  __pyx_t_1.phi = __pyx_v_phi;
  __pyx_t_1.reflectivity = __pyx_v_reflectivity;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":789
 *     cdef LivoxSpherPoint core
 * 
 *     def __init__(self, uint32_t depth=0, uint16_t theta=0, uint16_t phi=0, uint8_t reflectivity=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxSpherPoint(depth, theta, phi, reflectivity)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":792
 *         self.core = LivoxSpherPoint(depth, theta, phi, reflectivity)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth(self):
 *         return self.core.depth
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_5depth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_5depth_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_5depth___get__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_5depth___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":794
 *     @property
 *     def depth(self):
 *         return self.core.depth             # <<<<<<<<<<<<<<
 * 
 *     @depth.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 794, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":792
 *         self.core = LivoxSpherPoint(depth, theta, phi, reflectivity)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth(self):
 *         return self.core.depth
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.depth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":796
 *         return self.core.depth
 * 
 *     @depth.setter             # <<<<<<<<<<<<<<
 *     def depth(self, depth):
 *         self.core.depth = depth
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_5depth_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_5depth_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_5depth_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_5depth_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":798
 *     @depth.setter
 *     def depth(self, depth):
 *         self.core.depth = depth             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 798, __pyx_L1_error)
  __pyx_v_self->core.depth = __pyx_t_1;

  /* "pylivox.pyx":796
 *         return self.core.depth
 * 
 *     @depth.setter             # <<<<<<<<<<<<<<
 *     def depth(self, depth):
 *         self.core.depth = depth
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.depth.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":800
 *         self.core.depth = depth
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_5theta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_5theta_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_5theta___get__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":802
 *     @property
 *     def theta(self):
 *         return self.core.theta             # <<<<<<<<<<<<<<
 * 
 *     @theta.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.theta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":800
 *         self.core.depth = depth
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.theta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":804
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_5theta_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_theta));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":806
 *     @theta.setter
 *     def theta(self, theta):
 *         self.core.theta = theta             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_theta); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 806, __pyx_L1_error)
  __pyx_v_self->core.theta = __pyx_t_1;

  /* "pylivox.pyx":804
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.theta.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":808
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_3phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_3phi_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_3phi___get__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":810
 *     @property
 *     def phi(self):
 *         return self.core.phi             # <<<<<<<<<<<<<<
 * 
 *     @phi.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.phi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":808
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":812
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_3phi_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_phi));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":814
 *     @phi.setter
 *     def phi(self, phi):
 *         self.core.phi = phi             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_phi); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 814, __pyx_L1_error)
  __pyx_v_self->core.phi = __pyx_t_1;

  /* "pylivox.pyx":812
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.phi.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":816
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_12reflectivity_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_12reflectivity_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_12reflectivity___get__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":818
 *     @property
 *     def reflectivity(self):
 *         return self.core.reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":816
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.reflectivity.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":820
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity); /*proto*/
static int __pyx_pw_7pylivox_17PyLivoxSpherPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_12reflectivity_2__set__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_17PyLivoxSpherPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":822
 *     @reflectivity.setter
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLivoxPoint:
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 822, __pyx_L1_error)
  __pyx_v_self->core.reflectivity = __pyx_t_1;

  /* "pylivox.pyx":820
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.reflectivity.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_17PyLivoxSpherPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_17PyLivoxSpherPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_17PyLivoxSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_17PyLivoxSpherPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_17PyLivoxSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":830
 *     cdef LivoxPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, float x=0, float y=0, float z=0, uint8_t reflectivity=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxPoint(x, y, z, reflectivity)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyLivoxPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_12PyLivoxPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  uint8_t __pyx_v_reflectivity;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_reflectivity,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 830, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
    } else {
      __pyx_v_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_y = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
    } else {
      __pyx_v_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_z = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
    } else {
      __pyx_v_z = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_reflectivity = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 830, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 830, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_reflectivity);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyLivoxPoint___init__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z, uint8_t __pyx_v_reflectivity) {
  int __pyx_r;
  LivoxPoint __pyx_t_1;

  /* "pylivox.pyx":831
 * 
 *     def __init__(self, float x=0, float y=0, float z=0, uint8_t reflectivity=0):
 *         self.core = LivoxPoint(x, y, z, reflectivity)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.x = __pyx_v_x;
  __pyx_t_1.y = __pyx_v_y;
  __pyx_t_1.z = __pyx_v_z;
  __pyx_t_1.reflectivity = __pyx_v_reflectivity;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":830
 *     cdef LivoxPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, float x=0, float y=0, float z=0, uint8_t reflectivity=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxPoint(x, y, z, reflectivity)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":833
 *         self.core = LivoxPoint(x, y, z, reflectivity)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x(self):
 *         return self.core.x
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_1x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_1x___get__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_1x___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":835
 *     @property
 *     def x(self):
 *         return self.core.x             # <<<<<<<<<<<<<<
 * 
 *     @x.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 835, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":833
 *         self.core = LivoxPoint(x, y, z, reflectivity)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x(self):
 *         return self.core.x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":837
 *         return self.core.x
 * 
 *     @x.setter             # <<<<<<<<<<<<<<
 *     def x(self, x):
 *         self.core.x = x
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyLivoxPoint_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_7pylivox_12PyLivoxPoint_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_1x_2__set__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyLivoxPoint_1x_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":839
 *     @x.setter
 *     def x(self, x):
 *         self.core.x = x             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_x); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 839, __pyx_L1_error)
  __pyx_v_self->core.x = __pyx_t_1;

  /* "pylivox.pyx":837
 *         return self.core.x
 * 
 *     @x.setter             # <<<<<<<<<<<<<<
 *     def x(self, x):
 *         self.core.x = x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":841
 *         self.core.x = x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y(self):
 *         return self.core.y
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_1y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_1y___get__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_1y___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":843
 *     @property
 *     def y(self):
 *         return self.core.y             # <<<<<<<<<<<<<<
 * 
 *     @y.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":841
 *         self.core.x = x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y(self):
 *         return self.core.y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":845
 *         return self.core.y
 * 
 *     @y.setter             # <<<<<<<<<<<<<<
 *     def y(self, y):
 *         self.core.y = y
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyLivoxPoint_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static int __pyx_pw_7pylivox_12PyLivoxPoint_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_1y_2__set__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyLivoxPoint_1y_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":847
 *     @y.setter
 *     def y(self, y):
 *         self.core.y = y             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_y); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 847, __pyx_L1_error)
  __pyx_v_self->core.y = __pyx_t_1;

  /* "pylivox.pyx":845
 *         return self.core.y
 * 
 *     @y.setter             # <<<<<<<<<<<<<<
 *     def y(self, y):
 *         self.core.y = y
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":849
 *         self.core.y = y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z(self):
 *         return self.core.z
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_1z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_1z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_1z___get__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_1z___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":851
 *     @property
 *     def z(self):
 *         return self.core.z             # <<<<<<<<<<<<<<
 * 
 *     @z.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":849
 *         self.core.y = y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z(self):
 *         return self.core.z
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":853
 *         return self.core.z
 * 
 *     @z.setter             # <<<<<<<<<<<<<<
 *     def z(self, z):
 *         self.core.z = z
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyLivoxPoint_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z); /*proto*/
static int __pyx_pw_7pylivox_12PyLivoxPoint_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_1z_2__set__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyLivoxPoint_1z_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_z) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":855
 *     @z.setter
 *     def z(self, z):
 *         self.core.z = z             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_z); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 855, __pyx_L1_error)
  __pyx_v_self->core.z = __pyx_t_1;

  /* "pylivox.pyx":853
 *         return self.core.z
 * 
 *     @z.setter             # <<<<<<<<<<<<<<
 *     def z(self, z):
 *         self.core.z = z
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":857
 *         self.core.z = z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_12reflectivity_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_12reflectivity_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_12reflectivity___get__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":859
 *     @property
 *     def reflectivity(self):
 *         return self.core.reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":857
 *         self.core.z = z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.reflectivity.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":861
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyLivoxPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity); /*proto*/
static int __pyx_pw_7pylivox_12PyLivoxPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_12reflectivity_2__set__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyLivoxPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":863
 *     @reflectivity.setter
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LivoxExtendRawPoint struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 863, __pyx_L1_error)
  __pyx_v_self->core.reflectivity = __pyx_t_1;

  /* "pylivox.pyx":861
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.reflectivity.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLivoxPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLivoxPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyLivoxPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLivoxPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyLivoxPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyLivoxPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyLivoxPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":872
 *     cdef LivoxExtendRawPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, int x=0, int y=0, int z=0, uint8_t reflectivity=0, uint8_t tag=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxExtendRawPoint(x, y, z, reflectivity, tag)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x;
  int __pyx_v_y;
  int __pyx_v_z;
  uint8_t __pyx_v_reflectivity;
  uint8_t __pyx_v_tag;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_reflectivity,&__pyx_n_s_tag,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 872, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_x == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    } else {
      __pyx_v_x = ((int)0);
    }
    if (values[1]) {
      __pyx_v_y = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_y == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    } else {
      __pyx_v_y = ((int)0);
    }
    if (values[2]) {
      __pyx_v_z = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_z == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    } else {
      __pyx_v_z = ((int)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_tag = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_tag == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 872, __pyx_L3_error)
    } else {
      __pyx_v_tag = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 872, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_reflectivity, __pyx_v_tag);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, int __pyx_v_x, int __pyx_v_y, int __pyx_v_z, uint8_t __pyx_v_reflectivity, uint8_t __pyx_v_tag) {
  int __pyx_r;
  LivoxExtendRawPoint __pyx_t_1;

  /* "pylivox.pyx":873
 * 
 *     def __init__(self, int x=0, int y=0, int z=0, uint8_t reflectivity=0, uint8_t tag=0):
 *         self.core = LivoxExtendRawPoint(x, y, z, reflectivity, tag)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.x = __pyx_v_x;
  __pyx_t_1.y = __pyx_v_y;
  __pyx_t_1.z = __pyx_v_z;
  __pyx_t_1.reflectivity = __pyx_v_reflectivity;
  __pyx_t_1.tag = __pyx_v_tag;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":872
 *     cdef LivoxExtendRawPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, int x=0, int y=0, int z=0, uint8_t reflectivity=0, uint8_t tag=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxExtendRawPoint(x, y, z, reflectivity, tag)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":875
 *         self.core = LivoxExtendRawPoint(x, y, z, reflectivity, tag)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x(self):
 *         return self.core.x
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1x___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1x___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":877
 *     @property
 *     def x(self):
 *         return self.core.x             # <<<<<<<<<<<<<<
 * 
 *     @x.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":875
 *         self.core = LivoxExtendRawPoint(x, y, z, reflectivity, tag)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x(self):
 *         return self.core.x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":879
 *         return self.core.x
 * 
 *     @x.setter             # <<<<<<<<<<<<<<
 *     def x(self, x):
 *         self.core.x = x
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1x_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1x_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":881
 *     @x.setter
 *     def x(self, x):
 *         self.core.x = x             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 881, __pyx_L1_error)
  __pyx_v_self->core.x = __pyx_t_1;

  /* "pylivox.pyx":879
 *         return self.core.x
 * 
 *     @x.setter             # <<<<<<<<<<<<<<
 *     def x(self, x):
 *         self.core.x = x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":883
 *         self.core.x = x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y(self):
 *         return self.core.y
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1y___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1y___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":885
 *     @property
 *     def y(self):
 *         return self.core.y             # <<<<<<<<<<<<<<
 * 
 *     @y.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":883
 *         self.core.x = x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y(self):
 *         return self.core.y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":887
 *         return self.core.y
 * 
 *     @y.setter             # <<<<<<<<<<<<<<
 *     def y(self, y):
 *         self.core.y = y
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y); /*proto*/
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1y_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1y_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":889
 *     @y.setter
 *     def y(self, y):
 *         self.core.y = y             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 889, __pyx_L1_error)
  __pyx_v_self->core.y = __pyx_t_1;

  /* "pylivox.pyx":887
 *         return self.core.y
 * 
 *     @y.setter             # <<<<<<<<<<<<<<
 *     def y(self, y):
 *         self.core.y = y
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":891
 *         self.core.y = y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z(self):
 *         return self.core.z
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1z___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1z___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":893
 *     @property
 *     def z(self):
 *         return self.core.z             # <<<<<<<<<<<<<<
 * 
 *     @z.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":891
 *         self.core.y = y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z(self):
 *         return self.core.z
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":895
 *         return self.core.z
 * 
 *     @z.setter             # <<<<<<<<<<<<<<
 *     def z(self, z):
 *         self.core.z = z
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z); /*proto*/
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1z_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_1z_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":897
 *     @z.setter
 *     def z(self, z):
 *         self.core.z = z             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 897, __pyx_L1_error)
  __pyx_v_self->core.z = __pyx_t_1;

  /* "pylivox.pyx":895
 *         return self.core.z
 * 
 *     @z.setter             # <<<<<<<<<<<<<<
 *     def z(self, z):
 *         self.core.z = z
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":899
 *         self.core.z = z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_12reflectivity___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":901
 *     @property
 *     def reflectivity(self):
 *         return self.core.reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 901, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":899
 *         self.core.z = z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.reflectivity.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":903
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity); /*proto*/
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":905
 *     @reflectivity.setter
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 905, __pyx_L1_error)
  __pyx_v_self->core.reflectivity = __pyx_t_1;

  /* "pylivox.pyx":903
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.reflectivity.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":907
 *         self.core.reflectivity = reflectivity
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag(self):
 *         return self.core.tag
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3tag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3tag_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_3tag___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_3tag___get__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":909
 *     @property
 *     def tag(self):
 *         return self.core.tag             # <<<<<<<<<<<<<<
 * 
 *     @tag.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 909, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":907
 *         self.core.reflectivity = reflectivity
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag(self):
 *         return self.core.tag
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.tag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":911
 *         return self.core.tag
 * 
 *     @tag.setter             # <<<<<<<<<<<<<<
 *     def tag(self, tag):
 *         self.core.tag = tag
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3tag_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag); /*proto*/
static int __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3tag_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_3tag_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_3tag_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":913
 *     @tag.setter
 *     def tag(self, tag):
 *         self.core.tag = tag             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LivoxExtendSpherPoint struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 913, __pyx_L1_error)
  __pyx_v_self->core.tag = __pyx_t_1;

  /* "pylivox.pyx":911
 *         return self.core.tag
 * 
 *     @tag.setter             # <<<<<<<<<<<<<<
 *     def tag(self, tag):
 *         self.core.tag = tag
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.tag.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_21PyLivoxExtendRawPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_21PyLivoxExtendRawPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_21PyLivoxExtendRawPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyLivoxExtendRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":922
 *     cdef LivoxExtendSpherPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint32_t depth=0, uint16_t theta=0, uint16_t phi=0, uint8_t reflectivity=0, uint8_t tag=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxExtendSpherPoint(depth, theta, phi, reflectivity, tag)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint32_t __pyx_v_depth;
  uint16_t __pyx_v_theta;
  uint16_t __pyx_v_phi;
  uint8_t __pyx_v_reflectivity;
  uint8_t __pyx_v_tag;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_depth,&__pyx_n_s_theta,&__pyx_n_s_phi,&__pyx_n_s_reflectivity,&__pyx_n_s_tag,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_theta);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phi);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 922, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_depth = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_depth == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    } else {
      __pyx_v_depth = ((uint32_t)0);
    }
    if (values[1]) {
      __pyx_v_theta = __Pyx_PyInt_As_uint16_t(values[1]); if (unlikely((__pyx_v_theta == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    } else {
      __pyx_v_theta = ((uint16_t)0);
    }
    if (values[2]) {
      __pyx_v_phi = __Pyx_PyInt_As_uint16_t(values[2]); if (unlikely((__pyx_v_phi == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    } else {
      __pyx_v_phi = ((uint16_t)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_tag = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_tag == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    } else {
      __pyx_v_tag = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 922, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), __pyx_v_depth, __pyx_v_theta, __pyx_v_phi, __pyx_v_reflectivity, __pyx_v_tag);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, uint32_t __pyx_v_depth, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint8_t __pyx_v_reflectivity, uint8_t __pyx_v_tag) {
  int __pyx_r;
  LivoxExtendSpherPoint __pyx_t_1;

  /* "pylivox.pyx":923
 * 
 *     def __init__(self, uint32_t depth=0, uint16_t theta=0, uint16_t phi=0, uint8_t reflectivity=0, uint8_t tag=0):
 *         self.core = LivoxExtendSpherPoint(depth, theta, phi, reflectivity, tag)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.depth = __pyx_v_depth;
  __pyx_t_1.theta = __pyx_v_theta;
  __pyx_t_1.phi = __pyx_v_phi;
  __pyx_t_1.reflectivity = __pyx_v_reflectivity;
  __pyx_t_1.tag = __pyx_v_tag;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":922
 *     cdef LivoxExtendSpherPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint32_t depth=0, uint16_t theta=0, uint16_t phi=0, uint8_t reflectivity=0, uint8_t tag=0):             # <<<<<<<<<<<<<<
 *         self.core = LivoxExtendSpherPoint(depth, theta, phi, reflectivity, tag)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":925
 *         self.core = LivoxExtendSpherPoint(depth, theta, phi, reflectivity, tag)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth(self):
 *         return self.core.depth
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5depth_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5depth_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5depth___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5depth___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":927
 *     @property
 *     def depth(self):
 *         return self.core.depth             # <<<<<<<<<<<<<<
 * 
 *     @depth.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":925
 *         self.core = LivoxExtendSpherPoint(depth, theta, phi, reflectivity, tag)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth(self):
 *         return self.core.depth
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.depth.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":929
 *         return self.core.depth
 * 
 *     @depth.setter             # <<<<<<<<<<<<<<
 *     def depth(self, depth):
 *         self.core.depth = depth
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5depth_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth); /*proto*/
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5depth_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5depth_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5depth_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":931
 *     @depth.setter
 *     def depth(self, depth):
 *         self.core.depth = depth             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L1_error)
  __pyx_v_self->core.depth = __pyx_t_1;

  /* "pylivox.pyx":929
 *         return self.core.depth
 * 
 *     @depth.setter             # <<<<<<<<<<<<<<
 *     def depth(self, depth):
 *         self.core.depth = depth
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.depth.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":933
 *         self.core.depth = depth
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5theta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5theta_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5theta___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":935
 *     @property
 *     def theta(self):
 *         return self.core.theta             # <<<<<<<<<<<<<<
 * 
 *     @theta.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.theta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 935, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":933
 *         self.core.depth = depth
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.theta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":937
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta); /*proto*/
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5theta_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_theta));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":939
 *     @theta.setter
 *     def theta(self, theta):
 *         self.core.theta = theta             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_theta); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 939, __pyx_L1_error)
  __pyx_v_self->core.theta = __pyx_t_1;

  /* "pylivox.pyx":937
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.theta.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":941
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3phi_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3phi___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":943
 *     @property
 *     def phi(self):
 *         return self.core.phi             # <<<<<<<<<<<<<<
 * 
 *     @phi.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.phi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":941
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":945
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi); /*proto*/
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3phi_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_phi));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":947
 *     @phi.setter
 *     def phi(self, phi):
 *         self.core.phi = phi             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_phi); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L1_error)
  __pyx_v_self->core.phi = __pyx_t_1;

  /* "pylivox.pyx":945
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.phi.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":949
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":951
 *     @property
 *     def reflectivity(self):
 *         return self.core.reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":949
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity(self):
 *         return self.core.reflectivity
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.reflectivity.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":953
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity); /*proto*/
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":955
 *     @reflectivity.setter
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L1_error)
  __pyx_v_self->core.reflectivity = __pyx_t_1;

  /* "pylivox.pyx":953
 *         return self.core.reflectivity
 * 
 *     @reflectivity.setter             # <<<<<<<<<<<<<<
 *     def reflectivity(self, reflectivity):
 *         self.core.reflectivity = reflectivity
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.reflectivity.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":957
 *         self.core.reflectivity = reflectivity
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag(self):
 *         return self.core.tag
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3tag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3tag_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3tag___get__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3tag___get__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":959
 *     @property
 *     def tag(self):
 *         return self.core.tag             # <<<<<<<<<<<<<<
 * 
 *     @tag.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":957
 *         self.core.reflectivity = reflectivity
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag(self):
 *         return self.core.tag
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.tag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":961
 *         return self.core.tag
 * 
 *     @tag.setter             # <<<<<<<<<<<<<<
 *     def tag(self, tag):
 *         self.core.tag = tag
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3tag_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag); /*proto*/
static int __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3tag_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3tag_2__set__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_3tag_2__set__(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":963
 *     @tag.setter
 *     def tag(self, tag):
 *         self.core.tag = tag             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LivoxDualExtendRawPoint struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 963, __pyx_L1_error)
  __pyx_v_self->core.tag = __pyx_t_1;

  /* "pylivox.pyx":961
 *         return self.core.tag
 * 
 *     @tag.setter             # <<<<<<<<<<<<<<
 *     def tag(self, tag):
 *         self.core.tag = tag
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.tag.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_23PyLivoxExtendSpherPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_23PyLivoxExtendSpherPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_23PyLivoxExtendSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxExtendSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":972
 *     cdef LivoxDualExtendRawPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, int x1=0, int y1=0, int z1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0):
 *         self.core = LivoxDualExtendRawPoint(x1, y1, z1, reflectivity1, tag1, x2, y2, z2, reflectivity2, tag2)
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x1;
  int __pyx_v_y1;
  int __pyx_v_z1;
  uint8_t __pyx_v_reflectivity1;
  uint8_t __pyx_v_tag1;
  int __pyx_v_x2;
  int __pyx_v_y2;
  int __pyx_v_z2;
  uint8_t __pyx_v_reflectivity2;
  uint8_t __pyx_v_tag2;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_z1,&__pyx_n_s_reflectivity1,&__pyx_n_s_tag1,&__pyx_n_s_x2,&__pyx_n_s_y2,&__pyx_n_s_z2,&__pyx_n_s_reflectivity2,&__pyx_n_s_tag2,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x1);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y1);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z1);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity1);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag1);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x2);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y2);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z2);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity2);
          if (value) { values[8] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag2);
          if (value) { values[9] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 972, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_x1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
    } else {
      __pyx_v_x1 = ((int)0);
    }
    if (values[1]) {
      __pyx_v_y1 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_y1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
    } else {
      __pyx_v_y1 = ((int)0);
    }
    if (values[2]) {
      __pyx_v_z1 = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_z1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
    } else {
      __pyx_v_z1 = ((int)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity1 = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity1 = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_tag1 = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_tag1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
    } else {
      __pyx_v_tag1 = ((uint8_t)0);
    }
    if (values[5]) {
      __pyx_v_x2 = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_x2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L3_error)
    } else {
      __pyx_v_x2 = ((int)0);
    }
    if (values[6]) {
      __pyx_v_y2 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_y2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L3_error)
    } else {
      __pyx_v_y2 = ((int)0);
    }
    if (values[7]) {
      __pyx_v_z2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_z2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L3_error)
    } else {
      __pyx_v_z2 = ((int)0);
    }
    if (values[8]) {
      __pyx_v_reflectivity2 = __Pyx_PyInt_As_uint8_t(values[8]); if (unlikely((__pyx_v_reflectivity2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity2 = ((uint8_t)0);
    }
    if (values[9]) {
      __pyx_v_tag2 = __Pyx_PyInt_As_uint8_t(values[9]); if (unlikely((__pyx_v_tag2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 973, __pyx_L3_error)
    } else {
      __pyx_v_tag2 = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 10, __pyx_nargs); __PYX_ERR(0, 972, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), __pyx_v_x1, __pyx_v_y1, __pyx_v_z1, __pyx_v_reflectivity1, __pyx_v_tag1, __pyx_v_x2, __pyx_v_y2, __pyx_v_z2, __pyx_v_reflectivity2, __pyx_v_tag2);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, int __pyx_v_x1, int __pyx_v_y1, int __pyx_v_z1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, int __pyx_v_x2, int __pyx_v_y2, int __pyx_v_z2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2) {
  int __pyx_r;
  LivoxDualExtendRawPoint __pyx_t_1;

  /* "pylivox.pyx":974
 *     def __init__(self, int x1=0, int y1=0, int z1=0, uint8_t reflectivity1=0, uint8_t tag1=0,
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0):
 *         self.core = LivoxDualExtendRawPoint(x1, y1, z1, reflectivity1, tag1, x2, y2, z2, reflectivity2, tag2)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.x1 = __pyx_v_x1;
  __pyx_t_1.y1 = __pyx_v_y1;
  __pyx_t_1.z1 = __pyx_v_z1;
  __pyx_t_1.reflectivity1 = __pyx_v_reflectivity1;
  __pyx_t_1.tag1 = __pyx_v_tag1;
  __pyx_t_1.x2 = __pyx_v_x2;
  __pyx_t_1.y2 = __pyx_v_y2;
  __pyx_t_1.z2 = __pyx_v_z2;
  __pyx_t_1.reflectivity2 = __pyx_v_reflectivity2;
  __pyx_t_1.tag2 = __pyx_v_tag2;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":972
 *     cdef LivoxDualExtendRawPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, int x1=0, int y1=0, int z1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0):
 *         self.core = LivoxDualExtendRawPoint(x1, y1, z1, reflectivity1, tag1, x2, y2, z2, reflectivity2, tag2)
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":976
 *         self.core = LivoxDualExtendRawPoint(x1, y1, z1, reflectivity1, tag1, x2, y2, z2, reflectivity2, tag2)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x1(self):
 *         return self.core.x1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":978
 *     @property
 *     def x1(self):
 *         return self.core.x1             # <<<<<<<<<<<<<<
 * 
 *     @x1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 978, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":976
 *         self.core = LivoxDualExtendRawPoint(x1, y1, z1, reflectivity1, tag1, x2, y2, z2, reflectivity2, tag2)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x1(self):
 *         return self.core.x1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.x1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":980
 *         return self.core.x1
 * 
 *     @x1.setter             # <<<<<<<<<<<<<<
 *     def x1(self, x1):
 *         self.core.x1 = x1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x1); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x1) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":982
 *     @x1.setter
 *     def x1(self, x1):
 *         self.core.x1 = x1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x1); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L1_error)
  __pyx_v_self->core.x1 = __pyx_t_1;

  /* "pylivox.pyx":980
 *         return self.core.x1
 * 
 *     @x1.setter             # <<<<<<<<<<<<<<
 *     def x1(self, x1):
 *         self.core.x1 = x1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.x1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":984
 *         self.core.x1 = x1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y1(self):
 *         return self.core.y1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":986
 *     @property
 *     def y1(self):
 *         return self.core.y1             # <<<<<<<<<<<<<<
 * 
 *     @y1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 986, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":984
 *         self.core.x1 = x1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y1(self):
 *         return self.core.y1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.y1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":988
 *         return self.core.y1
 * 
 *     @y1.setter             # <<<<<<<<<<<<<<
 *     def y1(self, y1):
 *         self.core.y1 = y1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y1); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y1) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":990
 *     @y1.setter
 *     def y1(self, y1):
 *         self.core.y1 = y1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y1); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 990, __pyx_L1_error)
  __pyx_v_self->core.y1 = __pyx_t_1;

  /* "pylivox.pyx":988
 *         return self.core.y1
 * 
 *     @y1.setter             # <<<<<<<<<<<<<<
 *     def y1(self, y1):
 *         self.core.y1 = y1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.y1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":992
 *         self.core.y1 = y1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z1(self):
 *         return self.core.z1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":994
 *     @property
 *     def z1(self):
 *         return self.core.z1             # <<<<<<<<<<<<<<
 * 
 *     @z1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":992
 *         self.core.y1 = y1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z1(self):
 *         return self.core.z1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.z1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":996
 *         return self.core.z1
 * 
 *     @z1.setter             # <<<<<<<<<<<<<<
 *     def z1(self, z1):
 *         self.core.z1 = z1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z1); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z1) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":998
 *     @z1.setter
 *     def z1(self, z1):
 *         self.core.z1 = z1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z1); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 998, __pyx_L1_error)
  __pyx_v_self->core.z1 = __pyx_t_1;

  /* "pylivox.pyx":996
 *         return self.core.z1
 * 
 *     @z1.setter             # <<<<<<<<<<<<<<
 *     def z1(self, z1):
 *         self.core.z1 = z1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.z1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1000
 *         self.core.z1 = z1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1002
 *     @property
 *     def reflectivity1(self):
 *         return self.core.reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1000
 *         self.core.z1 = z1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.reflectivity1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1004
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1006
 *     @reflectivity1.setter
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1006, __pyx_L1_error)
  __pyx_v_self->core.reflectivity1 = __pyx_t_1;

  /* "pylivox.pyx":1004
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.reflectivity1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1008
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1010
 *     @property
 *     def tag1(self):
 *         return self.core.tag1             # <<<<<<<<<<<<<<
 * 
 *     @tag1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1008
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.tag1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1012
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1014
 *     @tag1.setter
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1014, __pyx_L1_error)
  __pyx_v_self->core.tag1 = __pyx_t_1;

  /* "pylivox.pyx":1012
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.tag1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1016
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x2(self):
 *         return self.core.x2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1018
 *     @property
 *     def x2(self):
 *         return self.core.x2             # <<<<<<<<<<<<<<
 * 
 *     @x2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1018, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1016
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x2(self):
 *         return self.core.x2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.x2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1020
 *         return self.core.x2
 * 
 *     @x2.setter             # <<<<<<<<<<<<<<
 *     def x2(self, x2):
 *         self.core.x2 = x2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x2); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2x2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x2) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1022
 *     @x2.setter
 *     def x2(self, x2):
 *         self.core.x2 = x2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x2); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1022, __pyx_L1_error)
  __pyx_v_self->core.x2 = __pyx_t_1;

  /* "pylivox.pyx":1020
 *         return self.core.x2
 * 
 *     @x2.setter             # <<<<<<<<<<<<<<
 *     def x2(self, x2):
 *         self.core.x2 = x2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.x2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1024
 *         self.core.x2 = x2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y2(self):
 *         return self.core.y2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1026
 *     @property
 *     def y2(self):
 *         return self.core.y2             # <<<<<<<<<<<<<<
 * 
 *     @y2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1024
 *         self.core.x2 = x2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y2(self):
 *         return self.core.y2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.y2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1028
 *         return self.core.y2
 * 
 *     @y2.setter             # <<<<<<<<<<<<<<
 *     def y2(self, y2):
 *         self.core.y2 = y2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y2); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2y2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y2) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1030
 *     @y2.setter
 *     def y2(self, y2):
 *         self.core.y2 = y2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y2); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1030, __pyx_L1_error)
  __pyx_v_self->core.y2 = __pyx_t_1;

  /* "pylivox.pyx":1028
 *         return self.core.y2
 * 
 *     @y2.setter             # <<<<<<<<<<<<<<
 *     def y2(self, y2):
 *         self.core.y2 = y2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.y2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1032
 *         self.core.y2 = y2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z2(self):
 *         return self.core.z2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1034
 *     @property
 *     def z2(self):
 *         return self.core.z2             # <<<<<<<<<<<<<<
 * 
 *     @z2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1032
 *         self.core.y2 = y2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z2(self):
 *         return self.core.z2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.z2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1036
 *         return self.core.z2
 * 
 *     @z2.setter             # <<<<<<<<<<<<<<
 *     def z2(self, z2):
 *         self.core.z2 = z2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z2); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2z2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z2) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1038
 *     @z2.setter
 *     def z2(self, z2):
 *         self.core.z2 = z2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z2); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1038, __pyx_L1_error)
  __pyx_v_self->core.z2 = __pyx_t_1;

  /* "pylivox.pyx":1036
 *         return self.core.z2
 * 
 *     @z2.setter             # <<<<<<<<<<<<<<
 *     def z2(self, z2):
 *         self.core.z2 = z2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.z2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1040
 *         self.core.z2 = z2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1042
 *     @property
 *     def reflectivity2(self):
 *         return self.core.reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1040
 *         self.core.z2 = z2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.reflectivity2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1044
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1046
 *     @reflectivity2.setter
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1046, __pyx_L1_error)
  __pyx_v_self->core.reflectivity2 = __pyx_t_1;

  /* "pylivox.pyx":1044
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.reflectivity2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1048
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1050
 *     @property
 *     def tag2(self):
 *         return self.core.tag2             # <<<<<<<<<<<<<<
 * 
 *     @tag2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1048
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.tag2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1052
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2); /*proto*/
static int __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1054
 *     @tag2.setter
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LivoxDualExtendSpherPoint struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1054, __pyx_L1_error)
  __pyx_v_self->core.tag2 = __pyx_t_1;

  /* "pylivox.pyx":1052
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.tag2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_25PyLivoxDualExtendRawPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_25PyLivoxDualExtendRawPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_25PyLivoxDualExtendRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1063
 *     cdef LivoxDualExtendSpherPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint16_t theta=0, uint16_t phi=0, uint32_t depth1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0):
 *         self.core = LivoxDualExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1, depth2, reflectivity2, tag2)
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint16_t __pyx_v_theta;
  uint16_t __pyx_v_phi;
  uint32_t __pyx_v_depth1;
  uint8_t __pyx_v_reflectivity1;
  uint8_t __pyx_v_tag1;
  uint32_t __pyx_v_depth2;
  uint8_t __pyx_v_reflectivity2;
  uint8_t __pyx_v_tag2;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[8] = {0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_theta,&__pyx_n_s_phi,&__pyx_n_s_depth1,&__pyx_n_s_reflectivity1,&__pyx_n_s_tag1,&__pyx_n_s_depth2,&__pyx_n_s_reflectivity2,&__pyx_n_s_tag2,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_theta);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phi);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth1);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity1);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag1);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth2);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity2);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag2);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1063, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_theta = __Pyx_PyInt_As_uint16_t(values[0]); if (unlikely((__pyx_v_theta == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    } else {
      __pyx_v_theta = ((uint16_t)0);
    }
    if (values[1]) {
      __pyx_v_phi = __Pyx_PyInt_As_uint16_t(values[1]); if (unlikely((__pyx_v_phi == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    } else {
      __pyx_v_phi = ((uint16_t)0);
    }
    if (values[2]) {
      __pyx_v_depth1 = __Pyx_PyInt_As_uint32_t(values[2]); if (unlikely((__pyx_v_depth1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    } else {
      __pyx_v_depth1 = ((uint32_t)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity1 = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity1 = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_tag1 = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_tag1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    } else {
      __pyx_v_tag1 = ((uint8_t)0);
    }
    if (values[5]) {
      __pyx_v_depth2 = __Pyx_PyInt_As_uint32_t(values[5]); if (unlikely((__pyx_v_depth2 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
    } else {
      __pyx_v_depth2 = ((uint32_t)0);
    }
    if (values[6]) {
      __pyx_v_reflectivity2 = __Pyx_PyInt_As_uint8_t(values[6]); if (unlikely((__pyx_v_reflectivity2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity2 = ((uint8_t)0);
    }
    if (values[7]) {
      __pyx_v_tag2 = __Pyx_PyInt_As_uint8_t(values[7]); if (unlikely((__pyx_v_tag2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
    } else {
      __pyx_v_tag2 = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 8, __pyx_nargs); __PYX_ERR(0, 1063, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), __pyx_v_theta, __pyx_v_phi, __pyx_v_depth1, __pyx_v_reflectivity1, __pyx_v_tag1, __pyx_v_depth2, __pyx_v_reflectivity2, __pyx_v_tag2);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint32_t __pyx_v_depth1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, uint32_t __pyx_v_depth2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2) {
  int __pyx_r;
  LivoxDualExtendSpherPoint __pyx_t_1;

  /* "pylivox.pyx":1065
 *     def __init__(self, uint16_t theta=0, uint16_t phi=0, uint32_t depth1=0, uint8_t reflectivity1=0, uint8_t tag1=0,
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0):
 *         self.core = LivoxDualExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1, depth2, reflectivity2, tag2)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.theta = __pyx_v_theta;
  __pyx_t_1.phi = __pyx_v_phi;
  __pyx_t_1.depth1 = __pyx_v_depth1;
  __pyx_t_1.reflectivity1 = __pyx_v_reflectivity1;
  __pyx_t_1.tag1 = __pyx_v_tag1;
  __pyx_t_1.depth2 = __pyx_v_depth2;
  __pyx_t_1.reflectivity2 = __pyx_v_reflectivity2;
  __pyx_t_1.tag2 = __pyx_v_tag2;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":1063
 *     cdef LivoxDualExtendSpherPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint16_t theta=0, uint16_t phi=0, uint32_t depth1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0):
 *         self.core = LivoxDualExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1, depth2, reflectivity2, tag2)
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1067
 *         self.core = LivoxDualExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1, depth2, reflectivity2, tag2)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_5theta___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1069
 *     @property
 *     def theta(self):
 *         return self.core.theta             # <<<<<<<<<<<<<<
 * 
 *     @theta.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.theta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1067
 *         self.core = LivoxDualExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1, depth2, reflectivity2, tag2)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.theta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1071
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_theta));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1073
 *     @theta.setter
 *     def theta(self, theta):
 *         self.core.theta = theta             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_theta); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L1_error)
  __pyx_v_self->core.theta = __pyx_t_1;

  /* "pylivox.pyx":1071
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.theta.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1075
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_3phi___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1077
 *     @property
 *     def phi(self):
 *         return self.core.phi             # <<<<<<<<<<<<<<
 * 
 *     @phi.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.phi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1075
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1079
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_phi));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1081
 *     @phi.setter
 *     def phi(self, phi):
 *         self.core.phi = phi             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_phi); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1081, __pyx_L1_error)
  __pyx_v_self->core.phi = __pyx_t_1;

  /* "pylivox.pyx":1079
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.phi.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1083
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth1(self):
 *         return self.core.depth1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1085
 *     @property
 *     def depth1(self):
 *         return self.core.depth1             # <<<<<<<<<<<<<<
 * 
 *     @depth1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1083
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth1(self):
 *         return self.core.depth1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.depth1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1087
 *         return self.core.depth1
 * 
 *     @depth1.setter             # <<<<<<<<<<<<<<
 *     def depth1(self, depth1):
 *         self.core.depth1 = depth1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth1) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1089
 *     @depth1.setter
 *     def depth1(self, depth1):
 *         self.core.depth1 = depth1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth1); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1089, __pyx_L1_error)
  __pyx_v_self->core.depth1 = __pyx_t_1;

  /* "pylivox.pyx":1087
 *         return self.core.depth1
 * 
 *     @depth1.setter             # <<<<<<<<<<<<<<
 *     def depth1(self, depth1):
 *         self.core.depth1 = depth1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.depth1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1091
 *         self.core.depth1 = depth1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1093
 *     @property
 *     def reflectivity1(self):
 *         return self.core.reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1091
 *         self.core.depth1 = depth1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.reflectivity1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1095
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1097
 *     @reflectivity1.setter
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1097, __pyx_L1_error)
  __pyx_v_self->core.reflectivity1 = __pyx_t_1;

  /* "pylivox.pyx":1095
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.reflectivity1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1099
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1101
 *     @property
 *     def tag1(self):
 *         return self.core.tag1             # <<<<<<<<<<<<<<
 * 
 *     @tag1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1099
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.tag1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1103
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1105
 *     @tag1.setter
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1105, __pyx_L1_error)
  __pyx_v_self->core.tag1 = __pyx_t_1;

  /* "pylivox.pyx":1103
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.tag1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1107
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth2(self):
 *         return self.core.depth2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1109
 *     @property
 *     def depth2(self):
 *         return self.core.depth2             # <<<<<<<<<<<<<<
 * 
 *     @depth2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1107
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth2(self):
 *         return self.core.depth2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.depth2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1111
 *         return self.core.depth2
 * 
 *     @depth2.setter             # <<<<<<<<<<<<<<
 *     def depth2(self, depth2):
 *         self.core.depth2 = depth2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth2) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1113
 *     @depth2.setter
 *     def depth2(self, depth2):
 *         self.core.depth2 = depth2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth2); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1113, __pyx_L1_error)
  __pyx_v_self->core.depth2 = __pyx_t_1;

  /* "pylivox.pyx":1111
 *         return self.core.depth2
 * 
 *     @depth2.setter             # <<<<<<<<<<<<<<
 *     def depth2(self, depth2):
 *         self.core.depth2 = depth2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.depth2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1115
 *         self.core.depth2 = depth2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1117
 *     @property
 *     def reflectivity2(self):
 *         return self.core.reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1115
 *         self.core.depth2 = depth2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.reflectivity2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1119
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1121
 *     @reflectivity2.setter
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1121, __pyx_L1_error)
  __pyx_v_self->core.reflectivity2 = __pyx_t_1;

  /* "pylivox.pyx":1119
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.reflectivity2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1123
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2___get__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1125
 *     @property
 *     def tag2(self):
 *         return self.core.tag2             # <<<<<<<<<<<<<<
 * 
 *     @tag2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1123
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.tag2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1127
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1129
 *     @tag2.setter
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LivoxTripleExtendRawPoint struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1129, __pyx_L1_error)
  __pyx_v_self->core.tag2 = __pyx_t_1;

  /* "pylivox.pyx":1127
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.tag2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_27PyLivoxDualExtendSpherPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_27PyLivoxDualExtendSpherPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxDualExtendSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxDualExtendSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1138
 *     cdef LivoxTripleExtendRawPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, int x1=0, int y1=0, int z1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  int x3=0, int y3=0, int z3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_x1;
  int __pyx_v_y1;
  int __pyx_v_z1;
  uint8_t __pyx_v_reflectivity1;
  uint8_t __pyx_v_tag1;
  int __pyx_v_x2;
  int __pyx_v_y2;
  int __pyx_v_z2;
  uint8_t __pyx_v_reflectivity2;
  uint8_t __pyx_v_tag2;
  int __pyx_v_x3;
  int __pyx_v_y3;
  int __pyx_v_z3;
  uint8_t __pyx_v_reflectivity3;
  uint8_t __pyx_v_tag3;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_z1,&__pyx_n_s_reflectivity1,&__pyx_n_s_tag1,&__pyx_n_s_x2,&__pyx_n_s_y2,&__pyx_n_s_z2,&__pyx_n_s_reflectivity2,&__pyx_n_s_tag2,&__pyx_n_s_x3,&__pyx_n_s_y3,&__pyx_n_s_z3,&__pyx_n_s_reflectivity3,&__pyx_n_s_tag3,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case 15: values[14] = __Pyx_Arg_VARARGS(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = __Pyx_Arg_VARARGS(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = __Pyx_Arg_VARARGS(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = __Pyx_Arg_VARARGS(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x1);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y1);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z1);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity1);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag1);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x2);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y2);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z2);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity2);
          if (value) { values[8] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag2);
          if (value) { values[9] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x3);
          if (value) { values[10] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y3);
          if (value) { values[11] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z3);
          if (value) { values[12] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity3);
          if (value) { values[13] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag3);
          if (value) { values[14] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1138, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case 15: values[14] = __Pyx_Arg_VARARGS(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = __Pyx_Arg_VARARGS(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = __Pyx_Arg_VARARGS(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = __Pyx_Arg_VARARGS(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x1 = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_x1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    } else {
      __pyx_v_x1 = ((int)0);
    }
    if (values[1]) {
      __pyx_v_y1 = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_y1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    } else {
      __pyx_v_y1 = ((int)0);
    }
    if (values[2]) {
      __pyx_v_z1 = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_z1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    } else {
      __pyx_v_z1 = ((int)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity1 = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity1 = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_tag1 = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_tag1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1138, __pyx_L3_error)
    } else {
      __pyx_v_tag1 = ((uint8_t)0);
    }
    if (values[5]) {
      __pyx_v_x2 = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_x2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
    } else {
      __pyx_v_x2 = ((int)0);
    }
    if (values[6]) {
      __pyx_v_y2 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_y2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
    } else {
      __pyx_v_y2 = ((int)0);
    }
    if (values[7]) {
      __pyx_v_z2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_z2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
    } else {
      __pyx_v_z2 = ((int)0);
    }
    if (values[8]) {
      __pyx_v_reflectivity2 = __Pyx_PyInt_As_uint8_t(values[8]); if (unlikely((__pyx_v_reflectivity2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity2 = ((uint8_t)0);
    }
    if (values[9]) {
      __pyx_v_tag2 = __Pyx_PyInt_As_uint8_t(values[9]); if (unlikely((__pyx_v_tag2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
    } else {
      __pyx_v_tag2 = ((uint8_t)0);
    }
    if (values[10]) {
      __pyx_v_x3 = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_x3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L3_error)
    } else {
      __pyx_v_x3 = ((int)0);
    }
    if (values[11]) {
      __pyx_v_y3 = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_y3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L3_error)
    } else {
      __pyx_v_y3 = ((int)0);
    }
    if (values[12]) {
      __pyx_v_z3 = __Pyx_PyInt_As_int(values[12]); if (unlikely((__pyx_v_z3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L3_error)
    } else {
      __pyx_v_z3 = ((int)0);
    }
    if (values[13]) {
      __pyx_v_reflectivity3 = __Pyx_PyInt_As_uint8_t(values[13]); if (unlikely((__pyx_v_reflectivity3 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity3 = ((uint8_t)0);
    }
    if (values[14]) {
      __pyx_v_tag3 = __Pyx_PyInt_As_uint8_t(values[14]); if (unlikely((__pyx_v_tag3 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1140, __pyx_L3_error)
    } else {
      __pyx_v_tag3 = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 15, __pyx_nargs); __PYX_ERR(0, 1138, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), __pyx_v_x1, __pyx_v_y1, __pyx_v_z1, __pyx_v_reflectivity1, __pyx_v_tag1, __pyx_v_x2, __pyx_v_y2, __pyx_v_z2, __pyx_v_reflectivity2, __pyx_v_tag2, __pyx_v_x3, __pyx_v_y3, __pyx_v_z3, __pyx_v_reflectivity3, __pyx_v_tag3);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint___init__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, int __pyx_v_x1, int __pyx_v_y1, int __pyx_v_z1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, int __pyx_v_x2, int __pyx_v_y2, int __pyx_v_z2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2, int __pyx_v_x3, int __pyx_v_y3, int __pyx_v_z3, uint8_t __pyx_v_reflectivity3, uint8_t __pyx_v_tag3) {
  int __pyx_r;
  LivoxTripleExtendRawPoint __pyx_t_1;

  /* "pylivox.pyx":1141
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  int x3=0, int y3=0, int z3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 *         self.core = LivoxTripleExtendRawPoint(x1, y1, z1, reflectivity1, tag1,             # <<<<<<<<<<<<<<
 *                                                x2, y2, z2, reflectivity2, tag2,
 *                                                x3, y3, z3, reflectivity3, tag3)
 */
  __pyx_t_1.x1 = __pyx_v_x1;
  __pyx_t_1.y1 = __pyx_v_y1;
  __pyx_t_1.z1 = __pyx_v_z1;
  __pyx_t_1.reflectivity1 = __pyx_v_reflectivity1;
  __pyx_t_1.tag1 = __pyx_v_tag1;

  /* "pylivox.pyx":1142
 *                  int x3=0, int y3=0, int z3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 *         self.core = LivoxTripleExtendRawPoint(x1, y1, z1, reflectivity1, tag1,
 *                                                x2, y2, z2, reflectivity2, tag2,             # <<<<<<<<<<<<<<
 *                                                x3, y3, z3, reflectivity3, tag3)
 * 
 */
  __pyx_t_1.x2 = __pyx_v_x2;
  __pyx_t_1.y2 = __pyx_v_y2;
  __pyx_t_1.z2 = __pyx_v_z2;
  __pyx_t_1.reflectivity2 = __pyx_v_reflectivity2;
  __pyx_t_1.tag2 = __pyx_v_tag2;

  /* "pylivox.pyx":1143
 *         self.core = LivoxTripleExtendRawPoint(x1, y1, z1, reflectivity1, tag1,
 *                                                x2, y2, z2, reflectivity2, tag2,
 *                                                x3, y3, z3, reflectivity3, tag3)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.x3 = __pyx_v_x3;
  __pyx_t_1.y3 = __pyx_v_y3;
  __pyx_t_1.z3 = __pyx_v_z3;
  __pyx_t_1.reflectivity3 = __pyx_v_reflectivity3;
  __pyx_t_1.tag3 = __pyx_v_tag3;

  /* "pylivox.pyx":1141
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  int x3=0, int y3=0, int z3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 *         self.core = LivoxTripleExtendRawPoint(x1, y1, z1, reflectivity1, tag1,             # <<<<<<<<<<<<<<
 *                                                x2, y2, z2, reflectivity2, tag2,
 *                                                x3, y3, z3, reflectivity3, tag3)
 */
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":1138
 *     cdef LivoxTripleExtendRawPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, int x1=0, int y1=0, int z1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  int x2=0, int y2=0, int z2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  int x3=0, int y3=0, int z3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1145
 *                                                x3, y3, z3, reflectivity3, tag3)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x1(self):
 *         return self.core.x1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1147
 *     @property
 *     def x1(self):
 *         return self.core.x1             # <<<<<<<<<<<<<<
 * 
 *     @x1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1145
 *                                                x3, y3, z3, reflectivity3, tag3)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x1(self):
 *         return self.core.x1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.x1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1149
 *         return self.core.x1
 * 
 *     @x1.setter             # <<<<<<<<<<<<<<
 *     def x1(self, x1):
 *         self.core.x1 = x1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x1) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1151
 *     @x1.setter
 *     def x1(self, x1):
 *         self.core.x1 = x1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x1); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1151, __pyx_L1_error)
  __pyx_v_self->core.x1 = __pyx_t_1;

  /* "pylivox.pyx":1149
 *         return self.core.x1
 * 
 *     @x1.setter             # <<<<<<<<<<<<<<
 *     def x1(self, x1):
 *         self.core.x1 = x1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.x1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1153
 *         self.core.x1 = x1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y1(self):
 *         return self.core.y1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1155
 *     @property
 *     def y1(self):
 *         return self.core.y1             # <<<<<<<<<<<<<<
 * 
 *     @y1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1153
 *         self.core.x1 = x1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y1(self):
 *         return self.core.y1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.y1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1157
 *         return self.core.y1
 * 
 *     @y1.setter             # <<<<<<<<<<<<<<
 *     def y1(self, y1):
 *         self.core.y1 = y1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y1) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1159
 *     @y1.setter
 *     def y1(self, y1):
 *         self.core.y1 = y1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y1); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1159, __pyx_L1_error)
  __pyx_v_self->core.y1 = __pyx_t_1;

  /* "pylivox.pyx":1157
 *         return self.core.y1
 * 
 *     @y1.setter             # <<<<<<<<<<<<<<
 *     def y1(self, y1):
 *         self.core.y1 = y1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.y1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1161
 *         self.core.y1 = y1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z1(self):
 *         return self.core.z1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1163
 *     @property
 *     def z1(self):
 *         return self.core.z1             # <<<<<<<<<<<<<<
 * 
 *     @z1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1161
 *         self.core.y1 = y1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z1(self):
 *         return self.core.z1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.z1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1165
 *         return self.core.z1
 * 
 *     @z1.setter             # <<<<<<<<<<<<<<
 *     def z1(self, z1):
 *         self.core.z1 = z1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z1) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1167
 *     @z1.setter
 *     def z1(self, z1):
 *         self.core.z1 = z1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z1); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1167, __pyx_L1_error)
  __pyx_v_self->core.z1 = __pyx_t_1;

  /* "pylivox.pyx":1165
 *         return self.core.z1
 * 
 *     @z1.setter             # <<<<<<<<<<<<<<
 *     def z1(self, z1):
 *         self.core.z1 = z1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.z1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1169
 *         self.core.z1 = z1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1171
 *     @property
 *     def reflectivity1(self):
 *         return self.core.reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1169
 *         self.core.z1 = z1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.reflectivity1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1173
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1175
 *     @reflectivity1.setter
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1175, __pyx_L1_error)
  __pyx_v_self->core.reflectivity1 = __pyx_t_1;

  /* "pylivox.pyx":1173
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.reflectivity1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1177
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1179
 *     @property
 *     def tag1(self):
 *         return self.core.tag1             # <<<<<<<<<<<<<<
 * 
 *     @tag1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1177
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.tag1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1181
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1183
 *     @tag1.setter
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1183, __pyx_L1_error)
  __pyx_v_self->core.tag1 = __pyx_t_1;

  /* "pylivox.pyx":1181
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.tag1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1185
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x2(self):
 *         return self.core.x2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1187
 *     @property
 *     def x2(self):
 *         return self.core.x2             # <<<<<<<<<<<<<<
 * 
 *     @x2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1185
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x2(self):
 *         return self.core.x2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.x2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1189
 *         return self.core.x2
 * 
 *     @x2.setter             # <<<<<<<<<<<<<<
 *     def x2(self, x2):
 *         self.core.x2 = x2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x2) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1191
 *     @x2.setter
 *     def x2(self, x2):
 *         self.core.x2 = x2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x2); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1191, __pyx_L1_error)
  __pyx_v_self->core.x2 = __pyx_t_1;

  /* "pylivox.pyx":1189
 *         return self.core.x2
 * 
 *     @x2.setter             # <<<<<<<<<<<<<<
 *     def x2(self, x2):
 *         self.core.x2 = x2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.x2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1193
 *         self.core.x2 = x2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y2(self):
 *         return self.core.y2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1195
 *     @property
 *     def y2(self):
 *         return self.core.y2             # <<<<<<<<<<<<<<
 * 
 *     @y2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1193
 *         self.core.x2 = x2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y2(self):
 *         return self.core.y2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.y2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1197
 *         return self.core.y2
 * 
 *     @y2.setter             # <<<<<<<<<<<<<<
 *     def y2(self, y2):
 *         self.core.y2 = y2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y2) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1199
 *     @y2.setter
 *     def y2(self, y2):
 *         self.core.y2 = y2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y2); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1199, __pyx_L1_error)
  __pyx_v_self->core.y2 = __pyx_t_1;

  /* "pylivox.pyx":1197
 *         return self.core.y2
 * 
 *     @y2.setter             # <<<<<<<<<<<<<<
 *     def y2(self, y2):
 *         self.core.y2 = y2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.y2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1201
 *         self.core.y2 = y2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z2(self):
 *         return self.core.z2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1203
 *     @property
 *     def z2(self):
 *         return self.core.z2             # <<<<<<<<<<<<<<
 * 
 *     @z2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1201
 *         self.core.y2 = y2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z2(self):
 *         return self.core.z2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.z2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1205
 *         return self.core.z2
 * 
 *     @z2.setter             # <<<<<<<<<<<<<<
 *     def z2(self, z2):
 *         self.core.z2 = z2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z2) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1207
 *     @z2.setter
 *     def z2(self, z2):
 *         self.core.z2 = z2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z2); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1207, __pyx_L1_error)
  __pyx_v_self->core.z2 = __pyx_t_1;

  /* "pylivox.pyx":1205
 *         return self.core.z2
 * 
 *     @z2.setter             # <<<<<<<<<<<<<<
 *     def z2(self, z2):
 *         self.core.z2 = z2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.z2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1209
 *         self.core.z2 = z2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1211
 *     @property
 *     def reflectivity2(self):
 *         return self.core.reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1209
 *         self.core.z2 = z2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.reflectivity2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1213
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1215
 *     @reflectivity2.setter
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1215, __pyx_L1_error)
  __pyx_v_self->core.reflectivity2 = __pyx_t_1;

  /* "pylivox.pyx":1213
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.reflectivity2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1217
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1219
 *     @property
 *     def tag2(self):
 *         return self.core.tag2             # <<<<<<<<<<<<<<
 * 
 *     @tag2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1217
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.tag2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1221
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1223
 *     @tag2.setter
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1223, __pyx_L1_error)
  __pyx_v_self->core.tag2 = __pyx_t_1;

  /* "pylivox.pyx":1221
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.tag2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1225
 *         self.core.tag2 = tag2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x3(self):
 *         return self.core.x3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1227
 *     @property
 *     def x3(self):
 *         return self.core.x3             # <<<<<<<<<<<<<<
 * 
 *     @x3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.x3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1225
 *         self.core.tag2 = tag2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def x3(self):
 *         return self.core.x3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.x3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1229
 *         return self.core.x3
 * 
 *     @x3.setter             # <<<<<<<<<<<<<<
 *     def x3(self, x3):
 *         self.core.x3 = x3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x3); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_x3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_x3) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1231
 *     @x3.setter
 *     def x3(self, x3):
 *         self.core.x3 = x3             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_x3); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1231, __pyx_L1_error)
  __pyx_v_self->core.x3 = __pyx_t_1;

  /* "pylivox.pyx":1229
 *         return self.core.x3
 * 
 *     @x3.setter             # <<<<<<<<<<<<<<
 *     def x3(self, x3):
 *         self.core.x3 = x3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.x3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1233
 *         self.core.x3 = x3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y3(self):
 *         return self.core.y3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1235
 *     @property
 *     def y3(self):
 *         return self.core.y3             # <<<<<<<<<<<<<<
 * 
 *     @y3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.y3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1233
 *         self.core.x3 = x3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def y3(self):
 *         return self.core.y3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.y3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1237
 *         return self.core.y3
 * 
 *     @y3.setter             # <<<<<<<<<<<<<<
 *     def y3(self, y3):
 *         self.core.y3 = y3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y3); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_y3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_y3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_y3) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1239
 *     @y3.setter
 *     def y3(self, y3):
 *         self.core.y3 = y3             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_y3); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1239, __pyx_L1_error)
  __pyx_v_self->core.y3 = __pyx_t_1;

  /* "pylivox.pyx":1237
 *         return self.core.y3
 * 
 *     @y3.setter             # <<<<<<<<<<<<<<
 *     def y3(self, y3):
 *         self.core.y3 = y3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.y3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1241
 *         self.core.y3 = y3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z3(self):
 *         return self.core.z3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1243
 *     @property
 *     def z3(self):
 *         return self.core.z3             # <<<<<<<<<<<<<<
 * 
 *     @z3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int32_t(__pyx_v_self->core.z3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1241
 *         self.core.y3 = y3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def z3(self):
 *         return self.core.z3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.z3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1245
 *         return self.core.z3
 * 
 *     @z3.setter             # <<<<<<<<<<<<<<
 *     def z3(self, z3):
 *         self.core.z3 = z3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z3); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_z3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_z3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_z3) {
  int __pyx_r;
  int32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1247
 *     @z3.setter
 *     def z3(self, z3):
 *         self.core.z3 = z3             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_int32_t(__pyx_v_z3); if (unlikely((__pyx_t_1 == ((int32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1247, __pyx_L1_error)
  __pyx_v_self->core.z3 = __pyx_t_1;

  /* "pylivox.pyx":1245
 *         return self.core.z3
 * 
 *     @z3.setter             # <<<<<<<<<<<<<<
 *     def z3(self, z3):
 *         self.core.z3 = z3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.z3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1249
 *         self.core.z3 = z3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity3(self):
 *         return self.core.reflectivity3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1251
 *     @property
 *     def reflectivity3(self):
 *         return self.core.reflectivity3             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1249
 *         self.core.z3 = z3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity3(self):
 *         return self.core.reflectivity3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.reflectivity3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1253
 *         return self.core.reflectivity3
 * 
 *     @reflectivity3.setter             # <<<<<<<<<<<<<<
 *     def reflectivity3(self, reflectivity3):
 *         self.core.reflectivity3 = reflectivity3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity3); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity3) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1255
 *     @reflectivity3.setter
 *     def reflectivity3(self, reflectivity3):
 *         self.core.reflectivity3 = reflectivity3             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity3); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1255, __pyx_L1_error)
  __pyx_v_self->core.reflectivity3 = __pyx_t_1;

  /* "pylivox.pyx":1253
 *         return self.core.reflectivity3
 * 
 *     @reflectivity3.setter             # <<<<<<<<<<<<<<
 *     def reflectivity3(self, reflectivity3):
 *         self.core.reflectivity3 = reflectivity3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.reflectivity3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1257
 *         self.core.reflectivity3 = reflectivity3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag3(self):
 *         return self.core.tag3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1259
 *     @property
 *     def tag3(self):
 *         return self.core.tag3             # <<<<<<<<<<<<<<
 * 
 *     @tag3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1257
 *         self.core.reflectivity3 = reflectivity3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag3(self):
 *         return self.core.tag3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.tag3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1261
 *         return self.core.tag3
 * 
 *     @tag3.setter             # <<<<<<<<<<<<<<
 *     def tag3(self, tag3):
 *         self.core.tag3 = tag3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag3); /*proto*/
static int __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, PyObject *__pyx_v_tag3) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1263
 *     @tag3.setter
 *     def tag3(self, tag3):
 *         self.core.tag3 = tag3             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LivoxTripleExtendSpherPoint struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag3); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1263, __pyx_L1_error)
  __pyx_v_self->core.tag3 = __pyx_t_1;

  /* "pylivox.pyx":1261
 *         return self.core.tag3
 * 
 *     @tag3.setter             # <<<<<<<<<<<<<<
 *     def tag3(self, tag3):
 *         self.core.tag3 = tag3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.tag3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_27PyLivoxTripleExtendRawPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_27PyLivoxTripleExtendRawPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_27PyLivoxTripleExtendRawPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendRawPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1272
 *     cdef LivoxTripleExtendSpherPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint16_t theta=0, uint16_t phi=0, uint32_t depth1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  uint32_t depth3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint16_t __pyx_v_theta;
  uint16_t __pyx_v_phi;
  uint32_t __pyx_v_depth1;
  uint8_t __pyx_v_reflectivity1;
  uint8_t __pyx_v_tag1;
  uint32_t __pyx_v_depth2;
  uint8_t __pyx_v_reflectivity2;
  uint8_t __pyx_v_tag2;
  uint32_t __pyx_v_depth3;
  uint8_t __pyx_v_reflectivity3;
  uint8_t __pyx_v_tag3;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_theta,&__pyx_n_s_phi,&__pyx_n_s_depth1,&__pyx_n_s_reflectivity1,&__pyx_n_s_tag1,&__pyx_n_s_depth2,&__pyx_n_s_reflectivity2,&__pyx_n_s_tag2,&__pyx_n_s_depth3,&__pyx_n_s_reflectivity3,&__pyx_n_s_tag3,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_theta);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phi);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth1);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity1);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag1);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth2);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity2);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag2);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_depth3);
          if (value) { values[8] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reflectivity3);
          if (value) { values[9] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tag3);
          if (value) { values[10] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1272, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_theta = __Pyx_PyInt_As_uint16_t(values[0]); if (unlikely((__pyx_v_theta == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
    } else {
      __pyx_v_theta = ((uint16_t)0);
    }
    if (values[1]) {
      __pyx_v_phi = __Pyx_PyInt_As_uint16_t(values[1]); if (unlikely((__pyx_v_phi == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
    } else {
      __pyx_v_phi = ((uint16_t)0);
    }
    if (values[2]) {
      __pyx_v_depth1 = __Pyx_PyInt_As_uint32_t(values[2]); if (unlikely((__pyx_v_depth1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
    } else {
      __pyx_v_depth1 = ((uint32_t)0);
    }
    if (values[3]) {
      __pyx_v_reflectivity1 = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_reflectivity1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity1 = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_tag1 = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_tag1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1272, __pyx_L3_error)
    } else {
      __pyx_v_tag1 = ((uint8_t)0);
    }
    if (values[5]) {
      __pyx_v_depth2 = __Pyx_PyInt_As_uint32_t(values[5]); if (unlikely((__pyx_v_depth2 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1273, __pyx_L3_error)
    } else {
      __pyx_v_depth2 = ((uint32_t)0);
    }
    if (values[6]) {
      __pyx_v_reflectivity2 = __Pyx_PyInt_As_uint8_t(values[6]); if (unlikely((__pyx_v_reflectivity2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1273, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity2 = ((uint8_t)0);
    }
    if (values[7]) {
      __pyx_v_tag2 = __Pyx_PyInt_As_uint8_t(values[7]); if (unlikely((__pyx_v_tag2 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1273, __pyx_L3_error)
    } else {
      __pyx_v_tag2 = ((uint8_t)0);
    }
    if (values[8]) {
      __pyx_v_depth3 = __Pyx_PyInt_As_uint32_t(values[8]); if (unlikely((__pyx_v_depth3 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1274, __pyx_L3_error)
    } else {
      __pyx_v_depth3 = ((uint32_t)0);
    }
    if (values[9]) {
      __pyx_v_reflectivity3 = __Pyx_PyInt_As_uint8_t(values[9]); if (unlikely((__pyx_v_reflectivity3 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1274, __pyx_L3_error)
    } else {
      __pyx_v_reflectivity3 = ((uint8_t)0);
    }
    if (values[10]) {
      __pyx_v_tag3 = __Pyx_PyInt_As_uint8_t(values[10]); if (unlikely((__pyx_v_tag3 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1274, __pyx_L3_error)
    } else {
      __pyx_v_tag3 = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 11, __pyx_nargs); __PYX_ERR(0, 1272, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), __pyx_v_theta, __pyx_v_phi, __pyx_v_depth1, __pyx_v_reflectivity1, __pyx_v_tag1, __pyx_v_depth2, __pyx_v_reflectivity2, __pyx_v_tag2, __pyx_v_depth3, __pyx_v_reflectivity3, __pyx_v_tag3);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint___init__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, uint16_t __pyx_v_theta, uint16_t __pyx_v_phi, uint32_t __pyx_v_depth1, uint8_t __pyx_v_reflectivity1, uint8_t __pyx_v_tag1, uint32_t __pyx_v_depth2, uint8_t __pyx_v_reflectivity2, uint8_t __pyx_v_tag2, uint32_t __pyx_v_depth3, uint8_t __pyx_v_reflectivity3, uint8_t __pyx_v_tag3) {
  int __pyx_r;
  LivoxTripleExtendSpherPoint __pyx_t_1;

  /* "pylivox.pyx":1275
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  uint32_t depth3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 *         self.core = LivoxTripleExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1,             # <<<<<<<<<<<<<<
 *                                                   depth2, reflectivity2, tag2,
 *                                                   depth3, reflectivity3, tag3)
 */
  __pyx_t_1.theta = __pyx_v_theta;
  __pyx_t_1.phi = __pyx_v_phi;
  __pyx_t_1.depth1 = __pyx_v_depth1;
  __pyx_t_1.reflectivity1 = __pyx_v_reflectivity1;
  __pyx_t_1.tag1 = __pyx_v_tag1;

  /* "pylivox.pyx":1276
 *                  uint32_t depth3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 *         self.core = LivoxTripleExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1,
 *                                                   depth2, reflectivity2, tag2,             # <<<<<<<<<<<<<<
 *                                                   depth3, reflectivity3, tag3)
 * 
 */
  __pyx_t_1.depth2 = __pyx_v_depth2;
  __pyx_t_1.reflectivity2 = __pyx_v_reflectivity2;
  __pyx_t_1.tag2 = __pyx_v_tag2;

  /* "pylivox.pyx":1277
 *         self.core = LivoxTripleExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1,
 *                                                   depth2, reflectivity2, tag2,
 *                                                   depth3, reflectivity3, tag3)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.depth3 = __pyx_v_depth3;
  __pyx_t_1.reflectivity3 = __pyx_v_reflectivity3;
  __pyx_t_1.tag3 = __pyx_v_tag3;

  /* "pylivox.pyx":1275
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  uint32_t depth3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 *         self.core = LivoxTripleExtendSpherPoint(theta, phi, depth1, reflectivity1, tag1,             # <<<<<<<<<<<<<<
 *                                                   depth2, reflectivity2, tag2,
 *                                                   depth3, reflectivity3, tag3)
 */
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":1272
 *     cdef LivoxTripleExtendSpherPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint16_t theta=0, uint16_t phi=0, uint32_t depth1=0, uint8_t reflectivity1=0, uint8_t tag1=0,             # <<<<<<<<<<<<<<
 *                  uint32_t depth2=0, uint8_t reflectivity2=0, uint8_t tag2=0,
 *                  uint32_t depth3=0, uint8_t reflectivity3=0, uint8_t tag3=0):
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1279
 *                                                   depth3, reflectivity3, tag3)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1281
 *     @property
 *     def theta(self):
 *         return self.core.theta             # <<<<<<<<<<<<<<
 * 
 *     @theta.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.theta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1279
 *                                                   depth3, reflectivity3, tag3)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def theta(self):
 *         return self.core.theta
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.theta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1283
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_theta) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_theta));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_theta) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1285
 *     @theta.setter
 *     def theta(self, theta):
 *         self.core.theta = theta             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_theta); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1285, __pyx_L1_error)
  __pyx_v_self->core.theta = __pyx_t_1;

  /* "pylivox.pyx":1283
 *         return self.core.theta
 * 
 *     @theta.setter             # <<<<<<<<<<<<<<
 *     def theta(self, theta):
 *         self.core.theta = theta
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.theta.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1287
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1289
 *     @property
 *     def phi(self):
 *         return self.core.phi             # <<<<<<<<<<<<<<
 * 
 *     @phi.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.phi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1287
 *         self.core.theta = theta
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def phi(self):
 *         return self.core.phi
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1291
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_phi) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_phi));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_phi) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1293
 *     @phi.setter
 *     def phi(self, phi):
 *         self.core.phi = phi             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_phi); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1293, __pyx_L1_error)
  __pyx_v_self->core.phi = __pyx_t_1;

  /* "pylivox.pyx":1291
 *         return self.core.phi
 * 
 *     @phi.setter             # <<<<<<<<<<<<<<
 *     def phi(self, phi):
 *         self.core.phi = phi
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.phi.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1295
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth1(self):
 *         return self.core.depth1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1297
 *     @property
 *     def depth1(self):
 *         return self.core.depth1             # <<<<<<<<<<<<<<
 * 
 *     @depth1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1295
 *         self.core.phi = phi
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth1(self):
 *         return self.core.depth1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.depth1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1299
 *         return self.core.depth1
 * 
 *     @depth1.setter             # <<<<<<<<<<<<<<
 *     def depth1(self, depth1):
 *         self.core.depth1 = depth1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth1); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth1) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1301
 *     @depth1.setter
 *     def depth1(self, depth1):
 *         self.core.depth1 = depth1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth1); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1301, __pyx_L1_error)
  __pyx_v_self->core.depth1 = __pyx_t_1;

  /* "pylivox.pyx":1299
 *         return self.core.depth1
 * 
 *     @depth1.setter             # <<<<<<<<<<<<<<
 *     def depth1(self, depth1):
 *         self.core.depth1 = depth1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.depth1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1303
 *         self.core.depth1 = depth1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1305
 *     @property
 *     def reflectivity1(self):
 *         return self.core.reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1303
 *         self.core.depth1 = depth1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity1(self):
 *         return self.core.reflectivity1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.reflectivity1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1307
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1309
 *     @reflectivity1.setter
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1309, __pyx_L1_error)
  __pyx_v_self->core.reflectivity1 = __pyx_t_1;

  /* "pylivox.pyx":1307
 *         return self.core.reflectivity1
 * 
 *     @reflectivity1.setter             # <<<<<<<<<<<<<<
 *     def reflectivity1(self, reflectivity1):
 *         self.core.reflectivity1 = reflectivity1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.reflectivity1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1311
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1313
 *     @property
 *     def tag1(self):
 *         return self.core.tag1             # <<<<<<<<<<<<<<
 * 
 *     @tag1.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1311
 *         self.core.reflectivity1 = reflectivity1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag1(self):
 *         return self.core.tag1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.tag1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1315
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag1) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag1));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag1) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1317
 *     @tag1.setter
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag1); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1317, __pyx_L1_error)
  __pyx_v_self->core.tag1 = __pyx_t_1;

  /* "pylivox.pyx":1315
 *         return self.core.tag1
 * 
 *     @tag1.setter             # <<<<<<<<<<<<<<
 *     def tag1(self, tag1):
 *         self.core.tag1 = tag1
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.tag1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1319
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth2(self):
 *         return self.core.depth2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1321
 *     @property
 *     def depth2(self):
 *         return self.core.depth2             # <<<<<<<<<<<<<<
 * 
 *     @depth2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1319
 *         self.core.tag1 = tag1
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth2(self):
 *         return self.core.depth2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.depth2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1323
 *         return self.core.depth2
 * 
 *     @depth2.setter             # <<<<<<<<<<<<<<
 *     def depth2(self, depth2):
 *         self.core.depth2 = depth2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth2); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth2) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1325
 *     @depth2.setter
 *     def depth2(self, depth2):
 *         self.core.depth2 = depth2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth2); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1325, __pyx_L1_error)
  __pyx_v_self->core.depth2 = __pyx_t_1;

  /* "pylivox.pyx":1323
 *         return self.core.depth2
 * 
 *     @depth2.setter             # <<<<<<<<<<<<<<
 *     def depth2(self, depth2):
 *         self.core.depth2 = depth2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.depth2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1327
 *         self.core.depth2 = depth2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1329
 *     @property
 *     def reflectivity2(self):
 *         return self.core.reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1327
 *         self.core.depth2 = depth2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity2(self):
 *         return self.core.reflectivity2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.reflectivity2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1331
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1333
 *     @reflectivity2.setter
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1333, __pyx_L1_error)
  __pyx_v_self->core.reflectivity2 = __pyx_t_1;

  /* "pylivox.pyx":1331
 *         return self.core.reflectivity2
 * 
 *     @reflectivity2.setter             # <<<<<<<<<<<<<<
 *     def reflectivity2(self, reflectivity2):
 *         self.core.reflectivity2 = reflectivity2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.reflectivity2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1335
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1337
 *     @property
 *     def tag2(self):
 *         return self.core.tag2             # <<<<<<<<<<<<<<
 * 
 *     @tag2.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1335
 *         self.core.reflectivity2 = reflectivity2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag2(self):
 *         return self.core.tag2
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.tag2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1339
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag2) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag2));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag2) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1341
 *     @tag2.setter
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag2); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1341, __pyx_L1_error)
  __pyx_v_self->core.tag2 = __pyx_t_1;

  /* "pylivox.pyx":1339
 *         return self.core.tag2
 * 
 *     @tag2.setter             # <<<<<<<<<<<<<<
 *     def tag2(self, tag2):
 *         self.core.tag2 = tag2
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.tag2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1343
 *         self.core.tag2 = tag2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth3(self):
 *         return self.core.depth3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1345
 *     @property
 *     def depth3(self):
 *         return self.core.depth3             # <<<<<<<<<<<<<<
 * 
 *     @depth3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.depth3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1343
 *         self.core.tag2 = tag2
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def depth3(self):
 *         return self.core.depth3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.depth3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1347
 *         return self.core.depth3
 * 
 *     @depth3.setter             # <<<<<<<<<<<<<<
 *     def depth3(self, depth3):
 *         self.core.depth3 = depth3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth3); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_depth3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_depth3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_depth3) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1349
 *     @depth3.setter
 *     def depth3(self, depth3):
 *         self.core.depth3 = depth3             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_depth3); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1349, __pyx_L1_error)
  __pyx_v_self->core.depth3 = __pyx_t_1;

  /* "pylivox.pyx":1347
 *         return self.core.depth3
 * 
 *     @depth3.setter             # <<<<<<<<<<<<<<
 *     def depth3(self, depth3):
 *         self.core.depth3 = depth3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.depth3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1351
 *         self.core.depth3 = depth3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity3(self):
 *         return self.core.reflectivity3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1353
 *     @property
 *     def reflectivity3(self):
 *         return self.core.reflectivity3             # <<<<<<<<<<<<<<
 * 
 *     @reflectivity3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.reflectivity3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1351
 *         self.core.depth3 = depth3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reflectivity3(self):
 *         return self.core.reflectivity3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.reflectivity3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1355
 *         return self.core.reflectivity3
 * 
 *     @reflectivity3.setter             # <<<<<<<<<<<<<<
 *     def reflectivity3(self, reflectivity3):
 *         self.core.reflectivity3 = reflectivity3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity3); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reflectivity3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_reflectivity3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_reflectivity3) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1357
 *     @reflectivity3.setter
 *     def reflectivity3(self, reflectivity3):
 *         self.core.reflectivity3 = reflectivity3             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_reflectivity3); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1357, __pyx_L1_error)
  __pyx_v_self->core.reflectivity3 = __pyx_t_1;

  /* "pylivox.pyx":1355
 *         return self.core.reflectivity3
 * 
 *     @reflectivity3.setter             # <<<<<<<<<<<<<<
 *     def reflectivity3(self, reflectivity3):
 *         self.core.reflectivity3 = reflectivity3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.reflectivity3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1359
 *         self.core.reflectivity3 = reflectivity3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag3(self):
 *         return self.core.tag3
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3___get__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3___get__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1361
 *     @property
 *     def tag3(self):
 *         return self.core.tag3             # <<<<<<<<<<<<<<
 * 
 *     @tag3.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.tag3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1359
 *         self.core.reflectivity3 = reflectivity3
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def tag3(self):
 *         return self.core.tag3
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.tag3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1363
 *         return self.core.tag3
 * 
 *     @tag3.setter             # <<<<<<<<<<<<<<
 *     def tag3(self, tag3):
 *         self.core.tag3 = tag3
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag3); /*proto*/
static int __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_tag3) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_2__set__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), ((PyObject *)__pyx_v_tag3));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_2__set__(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, PyObject *__pyx_v_tag3) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1365
 *     @tag3.setter
 *     def tag3(self, tag3):
 *         self.core.tag3 = tag3             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLivoxImuPoint:
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_tag3); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1365, __pyx_L1_error)
  __pyx_v_self->core.tag3 = __pyx_t_1;

  /* "pylivox.pyx":1363
 *         return self.core.tag3
 * 
 *     @tag3.setter             # <<<<<<<<<<<<<<
 *     def tag3(self, tag3):
 *         self.core.tag3 = tag3
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.tag3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_29PyLivoxTripleExtendSpherPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_29PyLivoxTripleExtendSpherPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_29PyLivoxTripleExtendSpherPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxTripleExtendSpherPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1373
 *     cdef LivoxImuPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, float gyro_x=0, float gyro_y=0, float gyro_z=0,             # <<<<<<<<<<<<<<
 *                  float acc_x=0, float acc_y=0, float acc_z=0):
 *         self.core = LivoxImuPoint(gyro_x, gyro_y, gyro_z, acc_x, acc_y, acc_z)
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_gyro_x;
  float __pyx_v_gyro_y;
  float __pyx_v_gyro_z;
  float __pyx_v_acc_x;
  float __pyx_v_acc_y;
  float __pyx_v_acc_z;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[6] = {0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_gyro_x,&__pyx_n_s_gyro_y,&__pyx_n_s_gyro_z,&__pyx_n_s_acc_x,&__pyx_n_s_acc_y,&__pyx_n_s_acc_z,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_gyro_x);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_gyro_y);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_gyro_z);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_acc_x);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_acc_y);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_acc_z);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1373, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_gyro_x = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_gyro_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
    } else {
      __pyx_v_gyro_x = ((float)0.0);
    }
    if (values[1]) {
      __pyx_v_gyro_y = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_gyro_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
    } else {
      __pyx_v_gyro_y = ((float)0.0);
    }
    if (values[2]) {
      __pyx_v_gyro_z = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_gyro_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1373, __pyx_L3_error)
    } else {
      __pyx_v_gyro_z = ((float)0.0);
    }
    if (values[3]) {
      __pyx_v_acc_x = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_acc_x == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1374, __pyx_L3_error)
    } else {
      __pyx_v_acc_x = ((float)0.0);
    }
    if (values[4]) {
      __pyx_v_acc_y = __pyx_PyFloat_AsFloat(values[4]); if (unlikely((__pyx_v_acc_y == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1374, __pyx_L3_error)
    } else {
      __pyx_v_acc_y = ((float)0.0);
    }
    if (values[5]) {
      __pyx_v_acc_z = __pyx_PyFloat_AsFloat(values[5]); if (unlikely((__pyx_v_acc_z == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1374, __pyx_L3_error)
    } else {
      __pyx_v_acc_z = ((float)0.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 6, __pyx_nargs); __PYX_ERR(0, 1373, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint___init__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), __pyx_v_gyro_x, __pyx_v_gyro_y, __pyx_v_gyro_z, __pyx_v_acc_x, __pyx_v_acc_y, __pyx_v_acc_z);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint___init__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, float __pyx_v_gyro_x, float __pyx_v_gyro_y, float __pyx_v_gyro_z, float __pyx_v_acc_x, float __pyx_v_acc_y, float __pyx_v_acc_z) {
  int __pyx_r;
  LivoxImuPoint __pyx_t_1;

  /* "pylivox.pyx":1375
 *     def __init__(self, float gyro_x=0, float gyro_y=0, float gyro_z=0,
 *                  float acc_x=0, float acc_y=0, float acc_z=0):
 *         self.core = LivoxImuPoint(gyro_x, gyro_y, gyro_z, acc_x, acc_y, acc_z)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.gyro_x = __pyx_v_gyro_x;
  __pyx_t_1.gyro_y = __pyx_v_gyro_y;
  __pyx_t_1.gyro_z = __pyx_v_gyro_z;
  __pyx_t_1.acc_x = __pyx_v_acc_x;
  __pyx_t_1.acc_y = __pyx_v_acc_y;
  __pyx_t_1.acc_z = __pyx_v_acc_z;
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":1373
 *     cdef LivoxImuPoint core  # Correctly define core as a C struct
 * 
 *     def __init__(self, float gyro_x=0, float gyro_y=0, float gyro_z=0,             # <<<<<<<<<<<<<<
 *                  float acc_x=0, float acc_y=0, float acc_z=0):
 *         self.core = LivoxImuPoint(gyro_x, gyro_y, gyro_z, acc_x, acc_y, acc_z)
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1377
 *         self.core = LivoxImuPoint(gyro_x, gyro_y, gyro_z, acc_x, acc_y, acc_z)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def gyro_x(self):
 *         return self.core.gyro_x
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_x___get__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_x___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1379
 *     @property
 *     def gyro_x(self):
 *         return self.core.gyro_x             # <<<<<<<<<<<<<<
 * 
 *     @gyro_x.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.gyro_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1377
 *         self.core = LivoxImuPoint(gyro_x, gyro_y, gyro_z, acc_x, acc_y, acc_z)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def gyro_x(self):
 *         return self.core.gyro_x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.gyro_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1381
 *         return self.core.gyro_x
 * 
 *     @gyro_x.setter             # <<<<<<<<<<<<<<
 *     def gyro_x(self, gyro_x):
 *         self.core.gyro_x = gyro_x
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_gyro_x); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_gyro_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_x_2__set__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), ((PyObject *)__pyx_v_gyro_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_x_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_gyro_x) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1383
 *     @gyro_x.setter
 *     def gyro_x(self, gyro_x):
 *         self.core.gyro_x = gyro_x             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_gyro_x); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1383, __pyx_L1_error)
  __pyx_v_self->core.gyro_x = __pyx_t_1;

  /* "pylivox.pyx":1381
 *         return self.core.gyro_x
 * 
 *     @gyro_x.setter             # <<<<<<<<<<<<<<
 *     def gyro_x(self, gyro_x):
 *         self.core.gyro_x = gyro_x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.gyro_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1385
 *         self.core.gyro_x = gyro_x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def gyro_y(self):
 *         return self.core.gyro_y
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_y___get__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_y___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1387
 *     @property
 *     def gyro_y(self):
 *         return self.core.gyro_y             # <<<<<<<<<<<<<<
 * 
 *     @gyro_y.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.gyro_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1385
 *         self.core.gyro_x = gyro_x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def gyro_y(self):
 *         return self.core.gyro_y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.gyro_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1389
 *         return self.core.gyro_y
 * 
 *     @gyro_y.setter             # <<<<<<<<<<<<<<
 *     def gyro_y(self, gyro_y):
 *         self.core.gyro_y = gyro_y
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_gyro_y); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_gyro_y) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_y_2__set__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), ((PyObject *)__pyx_v_gyro_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_y_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_gyro_y) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1391
 *     @gyro_y.setter
 *     def gyro_y(self, gyro_y):
 *         self.core.gyro_y = gyro_y             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_gyro_y); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1391, __pyx_L1_error)
  __pyx_v_self->core.gyro_y = __pyx_t_1;

  /* "pylivox.pyx":1389
 *         return self.core.gyro_y
 * 
 *     @gyro_y.setter             # <<<<<<<<<<<<<<
 *     def gyro_y(self, gyro_y):
 *         self.core.gyro_y = gyro_y
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.gyro_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1393
 *         self.core.gyro_y = gyro_y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def gyro_z(self):
 *         return self.core.gyro_z
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_z___get__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_z___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1395
 *     @property
 *     def gyro_z(self):
 *         return self.core.gyro_z             # <<<<<<<<<<<<<<
 * 
 *     @gyro_z.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.gyro_z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1393
 *         self.core.gyro_y = gyro_y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def gyro_z(self):
 *         return self.core.gyro_z
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.gyro_z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1397
 *         return self.core.gyro_z
 * 
 *     @gyro_z.setter             # <<<<<<<<<<<<<<
 *     def gyro_z(self, gyro_z):
 *         self.core.gyro_z = gyro_z
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_gyro_z); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_gyro_z) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_z_2__set__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), ((PyObject *)__pyx_v_gyro_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint_6gyro_z_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_gyro_z) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1399
 *     @gyro_z.setter
 *     def gyro_z(self, gyro_z):
 *         self.core.gyro_z = gyro_z             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_gyro_z); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1399, __pyx_L1_error)
  __pyx_v_self->core.gyro_z = __pyx_t_1;

  /* "pylivox.pyx":1397
 *         return self.core.gyro_z
 * 
 *     @gyro_z.setter             # <<<<<<<<<<<<<<
 *     def gyro_z(self, gyro_z):
 *         self.core.gyro_z = gyro_z
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.gyro_z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1401
 *         self.core.gyro_z = gyro_z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def acc_x(self):
 *         return self.core.acc_x
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_x_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_x___get__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_x___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1403
 *     @property
 *     def acc_x(self):
 *         return self.core.acc_x             # <<<<<<<<<<<<<<
 * 
 *     @acc_x.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.acc_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1401
 *         self.core.gyro_z = gyro_z
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def acc_x(self):
 *         return self.core.acc_x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.acc_x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1405
 *         return self.core.acc_x
 * 
 *     @acc_x.setter             # <<<<<<<<<<<<<<
 *     def acc_x(self, acc_x):
 *         self.core.acc_x = acc_x
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_acc_x); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_x_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_acc_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_x_2__set__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), ((PyObject *)__pyx_v_acc_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_x_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_acc_x) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1407
 *     @acc_x.setter
 *     def acc_x(self, acc_x):
 *         self.core.acc_x = acc_x             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_acc_x); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1407, __pyx_L1_error)
  __pyx_v_self->core.acc_x = __pyx_t_1;

  /* "pylivox.pyx":1405
 *         return self.core.acc_x
 * 
 *     @acc_x.setter             # <<<<<<<<<<<<<<
 *     def acc_x(self, acc_x):
 *         self.core.acc_x = acc_x
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.acc_x.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1409
 *         self.core.acc_x = acc_x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def acc_y(self):
 *         return self.core.acc_y
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_y___get__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_y___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1411
 *     @property
 *     def acc_y(self):
 *         return self.core.acc_y             # <<<<<<<<<<<<<<
 * 
 *     @acc_y.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.acc_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1409
 *         self.core.acc_x = acc_x
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def acc_y(self):
 *         return self.core.acc_y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.acc_y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1413
 *         return self.core.acc_y
 * 
 *     @acc_y.setter             # <<<<<<<<<<<<<<
 *     def acc_y(self, acc_y):
 *         self.core.acc_y = acc_y
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_acc_y); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_acc_y) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_y_2__set__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), ((PyObject *)__pyx_v_acc_y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_y_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_acc_y) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1415
 *     @acc_y.setter
 *     def acc_y(self, acc_y):
 *         self.core.acc_y = acc_y             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_acc_y); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1415, __pyx_L1_error)
  __pyx_v_self->core.acc_y = __pyx_t_1;

  /* "pylivox.pyx":1413
 *         return self.core.acc_y
 * 
 *     @acc_y.setter             # <<<<<<<<<<<<<<
 *     def acc_y(self, acc_y):
 *         self.core.acc_y = acc_y
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.acc_y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1417
 *         self.core.acc_y = acc_y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def acc_z(self):
 *         return self.core.acc_z
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_z_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_z___get__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_z___get__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1419
 *     @property
 *     def acc_z(self):
 *         return self.core.acc_z             # <<<<<<<<<<<<<<
 * 
 *     @acc_z.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->core.acc_z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1417
 *         self.core.acc_y = acc_y
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def acc_z(self):
 *         return self.core.acc_z
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.acc_z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1421
 *         return self.core.acc_z
 * 
 *     @acc_z.setter             # <<<<<<<<<<<<<<
 *     def acc_z(self, acc_z):
 *         self.core.acc_z = acc_z
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_acc_z); /*proto*/
static int __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_z_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_acc_z) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_z_2__set__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), ((PyObject *)__pyx_v_acc_z));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_15PyLivoxImuPoint_5acc_z_2__set__(struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, PyObject *__pyx_v_acc_z) {
  int __pyx_r;
  float __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1423
 *     @acc_z.setter
 *     def acc_z(self, acc_z):
 *         self.core.acc_z = acc_z             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the LidarErrorCode struct
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_acc_z); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1423, __pyx_L1_error)
  __pyx_v_self->core.acc_z = __pyx_t_1;

  /* "pylivox.pyx":1421
 *         return self.core.acc_z
 * 
 *     @acc_z.setter             # <<<<<<<<<<<<<<
 *     def acc_z(self, acc_z):
 *         self.core.acc_z = acc_z
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.acc_z.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyLivoxImuPoint_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxImuPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_15PyLivoxImuPoint_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxImuPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_15PyLivoxImuPoint_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_15PyLivoxImuPoint_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_15PyLivoxImuPoint_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxImuPoint *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxImuPoint.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1432
 *     cdef LidarErrorCode core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint32_t temp_status=0, uint32_t volt_status=0, uint32_t motor_status=0,             # <<<<<<<<<<<<<<
 *                  uint32_t dirty_warn=0, uint32_t firmware_err=0, uint32_t pps_status=0,
 *                  uint32_t device_status=0, uint32_t fan_status=0, uint32_t self_heating=0,
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint32_t __pyx_v_temp_status;
  uint32_t __pyx_v_volt_status;
  uint32_t __pyx_v_motor_status;
  uint32_t __pyx_v_dirty_warn;
  uint32_t __pyx_v_firmware_err;
  uint32_t __pyx_v_pps_status;
  uint32_t __pyx_v_device_status;
  uint32_t __pyx_v_fan_status;
  uint32_t __pyx_v_self_heating;
  uint32_t __pyx_v_ptp_status;
  uint32_t __pyx_v_time_sync_status;
  uint32_t __pyx_v_rsvd;
  uint32_t __pyx_v_system_status;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temp_status,&__pyx_n_s_volt_status,&__pyx_n_s_motor_status,&__pyx_n_s_dirty_warn,&__pyx_n_s_firmware_err,&__pyx_n_s_pps_status,&__pyx_n_s_device_status,&__pyx_n_s_fan_status,&__pyx_n_s_self_heating,&__pyx_n_s_ptp_status,&__pyx_n_s_time_sync_status,&__pyx_n_s_rsvd,&__pyx_n_s_system_status,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case 13: values[12] = __Pyx_Arg_VARARGS(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = __Pyx_Arg_VARARGS(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temp_status);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_volt_status);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_motor_status);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dirty_warn);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_firmware_err);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pps_status);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_device_status);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_fan_status);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self_heating);
          if (value) { values[8] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ptp_status);
          if (value) { values[9] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_time_sync_status);
          if (value) { values[10] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rsvd);
          if (value) { values[11] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_system_status);
          if (value) { values[12] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1432, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case 13: values[12] = __Pyx_Arg_VARARGS(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = __Pyx_Arg_VARARGS(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_temp_status = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_temp_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
    } else {
      __pyx_v_temp_status = ((uint32_t)0);
    }
    if (values[1]) {
      __pyx_v_volt_status = __Pyx_PyInt_As_uint32_t(values[1]); if (unlikely((__pyx_v_volt_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
    } else {
      __pyx_v_volt_status = ((uint32_t)0);
    }
    if (values[2]) {
      __pyx_v_motor_status = __Pyx_PyInt_As_uint32_t(values[2]); if (unlikely((__pyx_v_motor_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
    } else {
      __pyx_v_motor_status = ((uint32_t)0);
    }
    if (values[3]) {
      __pyx_v_dirty_warn = __Pyx_PyInt_As_uint32_t(values[3]); if (unlikely((__pyx_v_dirty_warn == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1433, __pyx_L3_error)
    } else {
      __pyx_v_dirty_warn = ((uint32_t)0);
    }
    if (values[4]) {
      __pyx_v_firmware_err = __Pyx_PyInt_As_uint32_t(values[4]); if (unlikely((__pyx_v_firmware_err == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1433, __pyx_L3_error)
    } else {
      __pyx_v_firmware_err = ((uint32_t)0);
    }
    if (values[5]) {
      __pyx_v_pps_status = __Pyx_PyInt_As_uint32_t(values[5]); if (unlikely((__pyx_v_pps_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1433, __pyx_L3_error)
    } else {
      __pyx_v_pps_status = ((uint32_t)0);
    }
    if (values[6]) {
      __pyx_v_device_status = __Pyx_PyInt_As_uint32_t(values[6]); if (unlikely((__pyx_v_device_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1434, __pyx_L3_error)
    } else {
      __pyx_v_device_status = ((uint32_t)0);
    }
    if (values[7]) {
      __pyx_v_fan_status = __Pyx_PyInt_As_uint32_t(values[7]); if (unlikely((__pyx_v_fan_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1434, __pyx_L3_error)
    } else {
      __pyx_v_fan_status = ((uint32_t)0);
    }
    if (values[8]) {
      __pyx_v_self_heating = __Pyx_PyInt_As_uint32_t(values[8]); if (unlikely((__pyx_v_self_heating == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1434, __pyx_L3_error)
    } else {
      __pyx_v_self_heating = ((uint32_t)0);
    }
    if (values[9]) {
      __pyx_v_ptp_status = __Pyx_PyInt_As_uint32_t(values[9]); if (unlikely((__pyx_v_ptp_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1435, __pyx_L3_error)
    } else {
      __pyx_v_ptp_status = ((uint32_t)0);
    }
    if (values[10]) {
      __pyx_v_time_sync_status = __Pyx_PyInt_As_uint32_t(values[10]); if (unlikely((__pyx_v_time_sync_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1435, __pyx_L3_error)
    } else {
      __pyx_v_time_sync_status = ((uint32_t)0);
    }
    if (values[11]) {
      __pyx_v_rsvd = __Pyx_PyInt_As_uint32_t(values[11]); if (unlikely((__pyx_v_rsvd == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1435, __pyx_L3_error)
    } else {
      __pyx_v_rsvd = ((uint32_t)0);
    }
    if (values[12]) {
      __pyx_v_system_status = __Pyx_PyInt_As_uint32_t(values[12]); if (unlikely((__pyx_v_system_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1436, __pyx_L3_error)
    } else {
      __pyx_v_system_status = ((uint32_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 13, __pyx_nargs); __PYX_ERR(0, 1432, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode___init__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), __pyx_v_temp_status, __pyx_v_volt_status, __pyx_v_motor_status, __pyx_v_dirty_warn, __pyx_v_firmware_err, __pyx_v_pps_status, __pyx_v_device_status, __pyx_v_fan_status, __pyx_v_self_heating, __pyx_v_ptp_status, __pyx_v_time_sync_status, __pyx_v_rsvd, __pyx_v_system_status);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode___init__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, uint32_t __pyx_v_temp_status, uint32_t __pyx_v_volt_status, uint32_t __pyx_v_motor_status, uint32_t __pyx_v_dirty_warn, uint32_t __pyx_v_firmware_err, uint32_t __pyx_v_pps_status, uint32_t __pyx_v_device_status, uint32_t __pyx_v_fan_status, uint32_t __pyx_v_self_heating, uint32_t __pyx_v_ptp_status, uint32_t __pyx_v_time_sync_status, uint32_t __pyx_v_rsvd, uint32_t __pyx_v_system_status) {
  int __pyx_r;
  LidarErrorCode __pyx_t_1;

  /* "pylivox.pyx":1437
 *                  uint32_t ptp_status=0, uint32_t time_sync_status=0, uint32_t rsvd=0,
 *                  uint32_t system_status=0):
 *         self.core = LidarErrorCode(temp_status, volt_status, motor_status, dirty_warn,             # <<<<<<<<<<<<<<
 *                                     firmware_err, pps_status, device_status, fan_status,
 *                                     self_heating, ptp_status, time_sync_status, rsvd,
 */
  __pyx_t_1.temp_status = __pyx_v_temp_status;
  __pyx_t_1.volt_status = __pyx_v_volt_status;
  __pyx_t_1.motor_status = __pyx_v_motor_status;
  __pyx_t_1.dirty_warn = __pyx_v_dirty_warn;

  /* "pylivox.pyx":1438
 *                  uint32_t system_status=0):
 *         self.core = LidarErrorCode(temp_status, volt_status, motor_status, dirty_warn,
 *                                     firmware_err, pps_status, device_status, fan_status,             # <<<<<<<<<<<<<<
 *                                     self_heating, ptp_status, time_sync_status, rsvd,
 *                                     system_status)
 */
  __pyx_t_1.firmware_err = __pyx_v_firmware_err;
  __pyx_t_1.pps_status = __pyx_v_pps_status;
  __pyx_t_1.device_status = __pyx_v_device_status;
  __pyx_t_1.fan_status = __pyx_v_fan_status;

  /* "pylivox.pyx":1439
 *         self.core = LidarErrorCode(temp_status, volt_status, motor_status, dirty_warn,
 *                                     firmware_err, pps_status, device_status, fan_status,
 *                                     self_heating, ptp_status, time_sync_status, rsvd,             # <<<<<<<<<<<<<<
 *                                     system_status)
 * 
 */
  __pyx_t_1.self_heating = __pyx_v_self_heating;
  __pyx_t_1.ptp_status = __pyx_v_ptp_status;
  __pyx_t_1.time_sync_status = __pyx_v_time_sync_status;
  __pyx_t_1.rsvd = __pyx_v_rsvd;

  /* "pylivox.pyx":1440
 *                                     firmware_err, pps_status, device_status, fan_status,
 *                                     self_heating, ptp_status, time_sync_status, rsvd,
 *                                     system_status)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.system_status = __pyx_v_system_status;

  /* "pylivox.pyx":1437
 *                  uint32_t ptp_status=0, uint32_t time_sync_status=0, uint32_t rsvd=0,
 *                  uint32_t system_status=0):
 *         self.core = LidarErrorCode(temp_status, volt_status, motor_status, dirty_warn,             # <<<<<<<<<<<<<<
 *                                     firmware_err, pps_status, device_status, fan_status,
 *                                     self_heating, ptp_status, time_sync_status, rsvd,
 */
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":1432
 *     cdef LidarErrorCode core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint32_t temp_status=0, uint32_t volt_status=0, uint32_t motor_status=0,             # <<<<<<<<<<<<<<
 *                  uint32_t dirty_warn=0, uint32_t firmware_err=0, uint32_t pps_status=0,
 *                  uint32_t device_status=0, uint32_t fan_status=0, uint32_t self_heating=0,
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1442
 *                                     system_status)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def temp_status(self):
 *         return self.core.temp_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_11temp_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_11temp_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_11temp_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_11temp_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1444
 *     @property
 *     def temp_status(self):
 *         return self.core.temp_status             # <<<<<<<<<<<<<<
 * 
 *     @temp_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.temp_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1442
 *                                     system_status)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def temp_status(self):
 *         return self.core.temp_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.temp_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1446
 *         return self.core.temp_status
 * 
 *     @temp_status.setter             # <<<<<<<<<<<<<<
 *     def temp_status(self, temp_status):
 *         self.core.temp_status = temp_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_11temp_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_temp_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_11temp_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_temp_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_11temp_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_temp_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_11temp_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_temp_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1448
 *     @temp_status.setter
 *     def temp_status(self, temp_status):
 *         self.core.temp_status = temp_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_temp_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1448, __pyx_L1_error)
  __pyx_v_self->core.temp_status = __pyx_t_1;

  /* "pylivox.pyx":1446
 *         return self.core.temp_status
 * 
 *     @temp_status.setter             # <<<<<<<<<<<<<<
 *     def temp_status(self, temp_status):
 *         self.core.temp_status = temp_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.temp_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1450
 *         self.core.temp_status = temp_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def volt_status(self):
 *         return self.core.volt_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_11volt_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_11volt_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_11volt_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_11volt_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1452
 *     @property
 *     def volt_status(self):
 *         return self.core.volt_status             # <<<<<<<<<<<<<<
 * 
 *     @volt_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.volt_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1450
 *         self.core.temp_status = temp_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def volt_status(self):
 *         return self.core.volt_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.volt_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1454
 *         return self.core.volt_status
 * 
 *     @volt_status.setter             # <<<<<<<<<<<<<<
 *     def volt_status(self, volt_status):
 *         self.core.volt_status = volt_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_11volt_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_volt_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_11volt_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_volt_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_11volt_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_volt_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_11volt_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_volt_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1456
 *     @volt_status.setter
 *     def volt_status(self, volt_status):
 *         self.core.volt_status = volt_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_volt_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L1_error)
  __pyx_v_self->core.volt_status = __pyx_t_1;

  /* "pylivox.pyx":1454
 *         return self.core.volt_status
 * 
 *     @volt_status.setter             # <<<<<<<<<<<<<<
 *     def volt_status(self, volt_status):
 *         self.core.volt_status = volt_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.volt_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1458
 *         self.core.volt_status = volt_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def motor_status(self):
 *         return self.core.motor_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_12motor_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_12motor_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_12motor_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_12motor_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1460
 *     @property
 *     def motor_status(self):
 *         return self.core.motor_status             # <<<<<<<<<<<<<<
 * 
 *     @motor_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.motor_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1458
 *         self.core.volt_status = volt_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def motor_status(self):
 *         return self.core.motor_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.motor_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1462
 *         return self.core.motor_status
 * 
 *     @motor_status.setter             # <<<<<<<<<<<<<<
 *     def motor_status(self, motor_status):
 *         self.core.motor_status = motor_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_12motor_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_motor_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_12motor_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_motor_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_12motor_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_motor_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_12motor_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_motor_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1464
 *     @motor_status.setter
 *     def motor_status(self, motor_status):
 *         self.core.motor_status = motor_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_motor_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1464, __pyx_L1_error)
  __pyx_v_self->core.motor_status = __pyx_t_1;

  /* "pylivox.pyx":1462
 *         return self.core.motor_status
 * 
 *     @motor_status.setter             # <<<<<<<<<<<<<<
 *     def motor_status(self, motor_status):
 *         self.core.motor_status = motor_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.motor_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1466
 *         self.core.motor_status = motor_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def dirty_warn(self):
 *         return self.core.dirty_warn
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10dirty_warn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10dirty_warn_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10dirty_warn___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10dirty_warn___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1468
 *     @property
 *     def dirty_warn(self):
 *         return self.core.dirty_warn             # <<<<<<<<<<<<<<
 * 
 *     @dirty_warn.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.dirty_warn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1466
 *         self.core.motor_status = motor_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def dirty_warn(self):
 *         return self.core.dirty_warn
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.dirty_warn.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1470
 *         return self.core.dirty_warn
 * 
 *     @dirty_warn.setter             # <<<<<<<<<<<<<<
 *     def dirty_warn(self, dirty_warn):
 *         self.core.dirty_warn = dirty_warn
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10dirty_warn_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_dirty_warn); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10dirty_warn_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_dirty_warn) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10dirty_warn_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_dirty_warn));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_10dirty_warn_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_dirty_warn) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1472
 *     @dirty_warn.setter
 *     def dirty_warn(self, dirty_warn):
 *         self.core.dirty_warn = dirty_warn             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_dirty_warn); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1472, __pyx_L1_error)
  __pyx_v_self->core.dirty_warn = __pyx_t_1;

  /* "pylivox.pyx":1470
 *         return self.core.dirty_warn
 * 
 *     @dirty_warn.setter             # <<<<<<<<<<<<<<
 *     def dirty_warn(self, dirty_warn):
 *         self.core.dirty_warn = dirty_warn
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.dirty_warn.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1474
 *         self.core.dirty_warn = dirty_warn
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def firmware_err(self):
 *         return self.core.firmware_err
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_12firmware_err_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_12firmware_err_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_12firmware_err___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_12firmware_err___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1476
 *     @property
 *     def firmware_err(self):
 *         return self.core.firmware_err             # <<<<<<<<<<<<<<
 * 
 *     @firmware_err.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.firmware_err); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1474
 *         self.core.dirty_warn = dirty_warn
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def firmware_err(self):
 *         return self.core.firmware_err
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.firmware_err.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1478
 *         return self.core.firmware_err
 * 
 *     @firmware_err.setter             # <<<<<<<<<<<<<<
 *     def firmware_err(self, firmware_err):
 *         self.core.firmware_err = firmware_err
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_12firmware_err_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_firmware_err); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_12firmware_err_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_firmware_err) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_12firmware_err_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_firmware_err));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_12firmware_err_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_firmware_err) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1480
 *     @firmware_err.setter
 *     def firmware_err(self, firmware_err):
 *         self.core.firmware_err = firmware_err             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_firmware_err); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1480, __pyx_L1_error)
  __pyx_v_self->core.firmware_err = __pyx_t_1;

  /* "pylivox.pyx":1478
 *         return self.core.firmware_err
 * 
 *     @firmware_err.setter             # <<<<<<<<<<<<<<
 *     def firmware_err(self, firmware_err):
 *         self.core.firmware_err = firmware_err
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.firmware_err.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1482
 *         self.core.firmware_err = firmware_err
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def pps_status(self):
 *         return self.core.pps_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10pps_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10pps_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10pps_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10pps_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1484
 *     @property
 *     def pps_status(self):
 *         return self.core.pps_status             # <<<<<<<<<<<<<<
 * 
 *     @pps_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.pps_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1482
 *         self.core.firmware_err = firmware_err
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def pps_status(self):
 *         return self.core.pps_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.pps_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1486
 *         return self.core.pps_status
 * 
 *     @pps_status.setter             # <<<<<<<<<<<<<<
 *     def pps_status(self, pps_status):
 *         self.core.pps_status = pps_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10pps_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pps_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10pps_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_pps_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10pps_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_pps_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_10pps_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_pps_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1488
 *     @pps_status.setter
 *     def pps_status(self, pps_status):
 *         self.core.pps_status = pps_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_pps_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1488, __pyx_L1_error)
  __pyx_v_self->core.pps_status = __pyx_t_1;

  /* "pylivox.pyx":1486
 *         return self.core.pps_status
 * 
 *     @pps_status.setter             # <<<<<<<<<<<<<<
 *     def pps_status(self, pps_status):
 *         self.core.pps_status = pps_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.pps_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1490
 *         self.core.pps_status = pps_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def device_status(self):
 *         return self.core.device_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_13device_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_13device_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_13device_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_13device_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1492
 *     @property
 *     def device_status(self):
 *         return self.core.device_status             # <<<<<<<<<<<<<<
 * 
 *     @device_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.device_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1492, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1490
 *         self.core.pps_status = pps_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def device_status(self):
 *         return self.core.device_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.device_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1494
 *         return self.core.device_status
 * 
 *     @device_status.setter             # <<<<<<<<<<<<<<
 *     def device_status(self, device_status):
 *         self.core.device_status = device_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_13device_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_device_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_13device_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_device_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_13device_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_device_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_13device_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_device_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1496
 *     @device_status.setter
 *     def device_status(self, device_status):
 *         self.core.device_status = device_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_device_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L1_error)
  __pyx_v_self->core.device_status = __pyx_t_1;

  /* "pylivox.pyx":1494
 *         return self.core.device_status
 * 
 *     @device_status.setter             # <<<<<<<<<<<<<<
 *     def device_status(self, device_status):
 *         self.core.device_status = device_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.device_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1498
 *         self.core.device_status = device_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def fan_status(self):
 *         return self.core.fan_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10fan_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10fan_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10fan_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10fan_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1500
 *     @property
 *     def fan_status(self):
 *         return self.core.fan_status             # <<<<<<<<<<<<<<
 * 
 *     @fan_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.fan_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1500, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1498
 *         self.core.device_status = device_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def fan_status(self):
 *         return self.core.fan_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.fan_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1502
 *         return self.core.fan_status
 * 
 *     @fan_status.setter             # <<<<<<<<<<<<<<
 *     def fan_status(self, fan_status):
 *         self.core.fan_status = fan_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10fan_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_fan_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10fan_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_fan_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10fan_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_fan_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_10fan_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_fan_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1504
 *     @fan_status.setter
 *     def fan_status(self, fan_status):
 *         self.core.fan_status = fan_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_fan_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1504, __pyx_L1_error)
  __pyx_v_self->core.fan_status = __pyx_t_1;

  /* "pylivox.pyx":1502
 *         return self.core.fan_status
 * 
 *     @fan_status.setter             # <<<<<<<<<<<<<<
 *     def fan_status(self, fan_status):
 *         self.core.fan_status = fan_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.fan_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1506
 *         self.core.fan_status = fan_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def self_heating(self):
 *         return self.core.self_heating
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_12self_heating_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_12self_heating_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_12self_heating___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_12self_heating___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1508
 *     @property
 *     def self_heating(self):
 *         return self.core.self_heating             # <<<<<<<<<<<<<<
 * 
 *     @self_heating.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.self_heating); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1506
 *         self.core.fan_status = fan_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def self_heating(self):
 *         return self.core.self_heating
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.self_heating.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1510
 *         return self.core.self_heating
 * 
 *     @self_heating.setter             # <<<<<<<<<<<<<<
 *     def self_heating(self, self_heating):
 *         self.core.self_heating = self_heating
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_12self_heating_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_self_heating); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_12self_heating_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_self_heating) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_12self_heating_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_self_heating));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_12self_heating_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_self_heating) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1512
 *     @self_heating.setter
 *     def self_heating(self, self_heating):
 *         self.core.self_heating = self_heating             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_self_heating); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1512, __pyx_L1_error)
  __pyx_v_self->core.self_heating = __pyx_t_1;

  /* "pylivox.pyx":1510
 *         return self.core.self_heating
 * 
 *     @self_heating.setter             # <<<<<<<<<<<<<<
 *     def self_heating(self, self_heating):
 *         self.core.self_heating = self_heating
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.self_heating.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1514
 *         self.core.self_heating = self_heating
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ptp_status(self):
 *         return self.core.ptp_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10ptp_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_10ptp_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10ptp_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_10ptp_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1516
 *     @property
 *     def ptp_status(self):
 *         return self.core.ptp_status             # <<<<<<<<<<<<<<
 * 
 *     @ptp_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.ptp_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1514
 *         self.core.self_heating = self_heating
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ptp_status(self):
 *         return self.core.ptp_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.ptp_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1518
 *         return self.core.ptp_status
 * 
 *     @ptp_status.setter             # <<<<<<<<<<<<<<
 *     def ptp_status(self, ptp_status):
 *         self.core.ptp_status = ptp_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10ptp_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ptp_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_10ptp_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ptp_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_10ptp_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_ptp_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_10ptp_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_ptp_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1520
 *     @ptp_status.setter
 *     def ptp_status(self, ptp_status):
 *         self.core.ptp_status = ptp_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_ptp_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L1_error)
  __pyx_v_self->core.ptp_status = __pyx_t_1;

  /* "pylivox.pyx":1518
 *         return self.core.ptp_status
 * 
 *     @ptp_status.setter             # <<<<<<<<<<<<<<
 *     def ptp_status(self, ptp_status):
 *         self.core.ptp_status = ptp_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.ptp_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1522
 *         self.core.ptp_status = ptp_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def time_sync_status(self):
 *         return self.core.time_sync_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_16time_sync_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_16time_sync_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_16time_sync_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_16time_sync_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1524
 *     @property
 *     def time_sync_status(self):
 *         return self.core.time_sync_status             # <<<<<<<<<<<<<<
 * 
 *     @time_sync_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.time_sync_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1522
 *         self.core.ptp_status = ptp_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def time_sync_status(self):
 *         return self.core.time_sync_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.time_sync_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1526
 *         return self.core.time_sync_status
 * 
 *     @time_sync_status.setter             # <<<<<<<<<<<<<<
 *     def time_sync_status(self, time_sync_status):
 *         self.core.time_sync_status = time_sync_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_16time_sync_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_time_sync_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_16time_sync_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_time_sync_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_16time_sync_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_time_sync_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_16time_sync_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_time_sync_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1528
 *     @time_sync_status.setter
 *     def time_sync_status(self, time_sync_status):
 *         self.core.time_sync_status = time_sync_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_time_sync_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1528, __pyx_L1_error)
  __pyx_v_self->core.time_sync_status = __pyx_t_1;

  /* "pylivox.pyx":1526
 *         return self.core.time_sync_status
 * 
 *     @time_sync_status.setter             # <<<<<<<<<<<<<<
 *     def time_sync_status(self, time_sync_status):
 *         self.core.time_sync_status = time_sync_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.time_sync_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1530
 *         self.core.time_sync_status = time_sync_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def rsvd(self):
 *         return self.core.rsvd
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_4rsvd_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_4rsvd_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_4rsvd___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_4rsvd___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1532
 *     @property
 *     def rsvd(self):
 *         return self.core.rsvd             # <<<<<<<<<<<<<<
 * 
 *     @rsvd.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.rsvd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1530
 *         self.core.time_sync_status = time_sync_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def rsvd(self):
 *         return self.core.rsvd
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.rsvd.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1534
 *         return self.core.rsvd
 * 
 *     @rsvd.setter             # <<<<<<<<<<<<<<
 *     def rsvd(self, rsvd):
 *         self.core.rsvd = rsvd
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_4rsvd_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rsvd); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_4rsvd_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rsvd) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_4rsvd_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_rsvd));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_4rsvd_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_rsvd) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1536
 *     @rsvd.setter
 *     def rsvd(self, rsvd):
 *         self.core.rsvd = rsvd             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_rsvd); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1536, __pyx_L1_error)
  __pyx_v_self->core.rsvd = __pyx_t_1;

  /* "pylivox.pyx":1534
 *         return self.core.rsvd
 * 
 *     @rsvd.setter             # <<<<<<<<<<<<<<
 *     def rsvd(self, rsvd):
 *         self.core.rsvd = rsvd
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.rsvd.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1538
 *         self.core.rsvd = rsvd
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def system_status(self):
 *         return self.core.system_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_13system_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_13system_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_13system_status___get__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_13system_status___get__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1540
 *     @property
 *     def system_status(self):
 *         return self.core.system_status             # <<<<<<<<<<<<<<
 * 
 *     @system_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.system_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1538
 *         self.core.rsvd = rsvd
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def system_status(self):
 *         return self.core.system_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.system_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1542
 *         return self.core.system_status
 * 
 *     @system_status.setter             # <<<<<<<<<<<<<<
 *     def system_status(self, system_status):
 *         self.core.system_status = system_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLidarErrorCode_13system_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_system_status); /*proto*/
static int __pyx_pw_7pylivox_16PyLidarErrorCode_13system_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_system_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_13system_status_2__set__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_system_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLidarErrorCode_13system_status_2__set__(struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, PyObject *__pyx_v_system_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1544
 *     @system_status.setter
 *     def system_status(self, system_status):
 *         self.core.system_status = system_status             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the HubErrorCode struct
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_system_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1544, __pyx_L1_error)
  __pyx_v_self->core.system_status = __pyx_t_1;

  /* "pylivox.pyx":1542
 *         return self.core.system_status
 * 
 *     @system_status.setter             # <<<<<<<<<<<<<<
 *     def system_status(self, system_status):
 *         self.core.system_status = system_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.system_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_16PyLidarErrorCode_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLidarErrorCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_16PyLidarErrorCode_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLidarErrorCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_16PyLidarErrorCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_16PyLidarErrorCode_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLidarErrorCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarErrorCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1553
 *     cdef HubErrorCode core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint32_t sync_status=0, uint32_t temp_status=0, uint32_t lidar_status=0,             # <<<<<<<<<<<<<<
 *                  uint32_t lidar_link_status=0, uint32_t firmware_err=0, uint32_t rsvd=0,
 *                  uint32_t system_status=0):
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint32_t __pyx_v_sync_status;
  uint32_t __pyx_v_temp_status;
  uint32_t __pyx_v_lidar_status;
  uint32_t __pyx_v_lidar_link_status;
  uint32_t __pyx_v_firmware_err;
  uint32_t __pyx_v_rsvd;
  uint32_t __pyx_v_system_status;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[7] = {0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sync_status,&__pyx_n_s_temp_status,&__pyx_n_s_lidar_status,&__pyx_n_s_lidar_link_status,&__pyx_n_s_firmware_err,&__pyx_n_s_rsvd,&__pyx_n_s_system_status,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sync_status);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temp_status);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lidar_status);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lidar_link_status);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_firmware_err);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rsvd);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_system_status);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1553, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_sync_status = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_sync_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
    } else {
      __pyx_v_sync_status = ((uint32_t)0);
    }
    if (values[1]) {
      __pyx_v_temp_status = __Pyx_PyInt_As_uint32_t(values[1]); if (unlikely((__pyx_v_temp_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
    } else {
      __pyx_v_temp_status = ((uint32_t)0);
    }
    if (values[2]) {
      __pyx_v_lidar_status = __Pyx_PyInt_As_uint32_t(values[2]); if (unlikely((__pyx_v_lidar_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1553, __pyx_L3_error)
    } else {
      __pyx_v_lidar_status = ((uint32_t)0);
    }
    if (values[3]) {
      __pyx_v_lidar_link_status = __Pyx_PyInt_As_uint32_t(values[3]); if (unlikely((__pyx_v_lidar_link_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1554, __pyx_L3_error)
    } else {
      __pyx_v_lidar_link_status = ((uint32_t)0);
    }
    if (values[4]) {
      __pyx_v_firmware_err = __Pyx_PyInt_As_uint32_t(values[4]); if (unlikely((__pyx_v_firmware_err == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1554, __pyx_L3_error)
    } else {
      __pyx_v_firmware_err = ((uint32_t)0);
    }
    if (values[5]) {
      __pyx_v_rsvd = __Pyx_PyInt_As_uint32_t(values[5]); if (unlikely((__pyx_v_rsvd == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1554, __pyx_L3_error)
    } else {
      __pyx_v_rsvd = ((uint32_t)0);
    }
    if (values[6]) {
      __pyx_v_system_status = __Pyx_PyInt_As_uint32_t(values[6]); if (unlikely((__pyx_v_system_status == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1555, __pyx_L3_error)
    } else {
      __pyx_v_system_status = ((uint32_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 7, __pyx_nargs); __PYX_ERR(0, 1553, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode___init__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), __pyx_v_sync_status, __pyx_v_temp_status, __pyx_v_lidar_status, __pyx_v_lidar_link_status, __pyx_v_firmware_err, __pyx_v_rsvd, __pyx_v_system_status);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode___init__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, uint32_t __pyx_v_sync_status, uint32_t __pyx_v_temp_status, uint32_t __pyx_v_lidar_status, uint32_t __pyx_v_lidar_link_status, uint32_t __pyx_v_firmware_err, uint32_t __pyx_v_rsvd, uint32_t __pyx_v_system_status) {
  int __pyx_r;
  HubErrorCode __pyx_t_1;

  /* "pylivox.pyx":1556
 *                  uint32_t lidar_link_status=0, uint32_t firmware_err=0, uint32_t rsvd=0,
 *                  uint32_t system_status=0):
 *         self.core = HubErrorCode(sync_status, temp_status, lidar_status, lidar_link_status,             # <<<<<<<<<<<<<<
 *                                   firmware_err, rsvd, system_status)
 * 
 */
  __pyx_t_1.sync_status = __pyx_v_sync_status;
  __pyx_t_1.temp_status = __pyx_v_temp_status;
  __pyx_t_1.lidar_status = __pyx_v_lidar_status;
  __pyx_t_1.lidar_link_status = __pyx_v_lidar_link_status;

  /* "pylivox.pyx":1557
 *                  uint32_t system_status=0):
 *         self.core = HubErrorCode(sync_status, temp_status, lidar_status, lidar_link_status,
 *                                   firmware_err, rsvd, system_status)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1.firmware_err = __pyx_v_firmware_err;
  __pyx_t_1.rsvd = __pyx_v_rsvd;
  __pyx_t_1.system_status = __pyx_v_system_status;

  /* "pylivox.pyx":1556
 *                  uint32_t lidar_link_status=0, uint32_t firmware_err=0, uint32_t rsvd=0,
 *                  uint32_t system_status=0):
 *         self.core = HubErrorCode(sync_status, temp_status, lidar_status, lidar_link_status,             # <<<<<<<<<<<<<<
 *                                   firmware_err, rsvd, system_status)
 * 
 */
  __pyx_v_self->core = __pyx_t_1;

  /* "pylivox.pyx":1553
 *     cdef HubErrorCode core  # Correctly define core as a C struct
 * 
 *     def __init__(self, uint32_t sync_status=0, uint32_t temp_status=0, uint32_t lidar_status=0,             # <<<<<<<<<<<<<<
 *                  uint32_t lidar_link_status=0, uint32_t firmware_err=0, uint32_t rsvd=0,
 *                  uint32_t system_status=0):
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1559
 *                                   firmware_err, rsvd, system_status)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def sync_status(self):
 *         return self.core.sync_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_11sync_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_11sync_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_11sync_status___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_11sync_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1561
 *     @property
 *     def sync_status(self):
 *         return self.core.sync_status             # <<<<<<<<<<<<<<
 * 
 *     @sync_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.sync_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1559
 *                                   firmware_err, rsvd, system_status)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def sync_status(self):
 *         return self.core.sync_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.sync_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1563
 *         return self.core.sync_status
 * 
 *     @sync_status.setter             # <<<<<<<<<<<<<<
 *     def sync_status(self, sync_status):
 *         self.core.sync_status = sync_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_11sync_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_sync_status); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_11sync_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_sync_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_11sync_status_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_sync_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_11sync_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_sync_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1565
 *     @sync_status.setter
 *     def sync_status(self, sync_status):
 *         self.core.sync_status = sync_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_sync_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1565, __pyx_L1_error)
  __pyx_v_self->core.sync_status = __pyx_t_1;

  /* "pylivox.pyx":1563
 *         return self.core.sync_status
 * 
 *     @sync_status.setter             # <<<<<<<<<<<<<<
 *     def sync_status(self, sync_status):
 *         self.core.sync_status = sync_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.sync_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1567
 *         self.core.sync_status = sync_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def temp_status(self):
 *         return self.core.temp_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_11temp_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_11temp_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_11temp_status___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_11temp_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1569
 *     @property
 *     def temp_status(self):
 *         return self.core.temp_status             # <<<<<<<<<<<<<<
 * 
 *     @temp_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.temp_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1567
 *         self.core.sync_status = sync_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def temp_status(self):
 *         return self.core.temp_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.temp_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1571
 *         return self.core.temp_status
 * 
 *     @temp_status.setter             # <<<<<<<<<<<<<<
 *     def temp_status(self, temp_status):
 *         self.core.temp_status = temp_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_11temp_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_temp_status); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_11temp_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_temp_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_11temp_status_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_temp_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_11temp_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_temp_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1573
 *     @temp_status.setter
 *     def temp_status(self, temp_status):
 *         self.core.temp_status = temp_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_temp_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L1_error)
  __pyx_v_self->core.temp_status = __pyx_t_1;

  /* "pylivox.pyx":1571
 *         return self.core.temp_status
 * 
 *     @temp_status.setter             # <<<<<<<<<<<<<<
 *     def temp_status(self, temp_status):
 *         self.core.temp_status = temp_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.temp_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1575
 *         self.core.temp_status = temp_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def lidar_status(self):
 *         return self.core.lidar_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_12lidar_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_12lidar_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_12lidar_status___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_12lidar_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1577
 *     @property
 *     def lidar_status(self):
 *         return self.core.lidar_status             # <<<<<<<<<<<<<<
 * 
 *     @lidar_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.lidar_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1575
 *         self.core.temp_status = temp_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def lidar_status(self):
 *         return self.core.lidar_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.lidar_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1579
 *         return self.core.lidar_status
 * 
 *     @lidar_status.setter             # <<<<<<<<<<<<<<
 *     def lidar_status(self, lidar_status):
 *         self.core.lidar_status = lidar_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_12lidar_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_lidar_status); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_12lidar_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_lidar_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_12lidar_status_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_lidar_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_12lidar_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_lidar_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1581
 *     @lidar_status.setter
 *     def lidar_status(self, lidar_status):
 *         self.core.lidar_status = lidar_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_lidar_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1581, __pyx_L1_error)
  __pyx_v_self->core.lidar_status = __pyx_t_1;

  /* "pylivox.pyx":1579
 *         return self.core.lidar_status
 * 
 *     @lidar_status.setter             # <<<<<<<<<<<<<<
 *     def lidar_status(self, lidar_status):
 *         self.core.lidar_status = lidar_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.lidar_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1583
 *         self.core.lidar_status = lidar_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def lidar_link_status(self):
 *         return self.core.lidar_link_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_17lidar_link_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_17lidar_link_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_17lidar_link_status___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_17lidar_link_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1585
 *     @property
 *     def lidar_link_status(self):
 *         return self.core.lidar_link_status             # <<<<<<<<<<<<<<
 * 
 *     @lidar_link_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.lidar_link_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1583
 *         self.core.lidar_status = lidar_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def lidar_link_status(self):
 *         return self.core.lidar_link_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.lidar_link_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1587
 *         return self.core.lidar_link_status
 * 
 *     @lidar_link_status.setter             # <<<<<<<<<<<<<<
 *     def lidar_link_status(self, lidar_link_status):
 *         self.core.lidar_link_status = lidar_link_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_17lidar_link_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_lidar_link_status); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_17lidar_link_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_lidar_link_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_17lidar_link_status_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_lidar_link_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_17lidar_link_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_lidar_link_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1589
 *     @lidar_link_status.setter
 *     def lidar_link_status(self, lidar_link_status):
 *         self.core.lidar_link_status = lidar_link_status             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_lidar_link_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1589, __pyx_L1_error)
  __pyx_v_self->core.lidar_link_status = __pyx_t_1;

  /* "pylivox.pyx":1587
 *         return self.core.lidar_link_status
 * 
 *     @lidar_link_status.setter             # <<<<<<<<<<<<<<
 *     def lidar_link_status(self, lidar_link_status):
 *         self.core.lidar_link_status = lidar_link_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.lidar_link_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1591
 *         self.core.lidar_link_status = lidar_link_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def firmware_err(self):
 *         return self.core.firmware_err
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_12firmware_err_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_12firmware_err_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_12firmware_err___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_12firmware_err___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1593
 *     @property
 *     def firmware_err(self):
 *         return self.core.firmware_err             # <<<<<<<<<<<<<<
 * 
 *     @firmware_err.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.firmware_err); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1591
 *         self.core.lidar_link_status = lidar_link_status
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def firmware_err(self):
 *         return self.core.firmware_err
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.firmware_err.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1595
 *         return self.core.firmware_err
 * 
 *     @firmware_err.setter             # <<<<<<<<<<<<<<
 *     def firmware_err(self, firmware_err):
 *         self.core.firmware_err = firmware_err
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_12firmware_err_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_firmware_err); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_12firmware_err_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_firmware_err) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_12firmware_err_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_firmware_err));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_12firmware_err_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_firmware_err) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1597
 *     @firmware_err.setter
 *     def firmware_err(self, firmware_err):
 *         self.core.firmware_err = firmware_err             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_firmware_err); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L1_error)
  __pyx_v_self->core.firmware_err = __pyx_t_1;

  /* "pylivox.pyx":1595
 *         return self.core.firmware_err
 * 
 *     @firmware_err.setter             # <<<<<<<<<<<<<<
 *     def firmware_err(self, firmware_err):
 *         self.core.firmware_err = firmware_err
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.firmware_err.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1599
 *         self.core.firmware_err = firmware_err
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def rsvd(self):
 *         return self.core.rsvd
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_4rsvd_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_4rsvd_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_4rsvd___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_4rsvd___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1601
 *     @property
 *     def rsvd(self):
 *         return self.core.rsvd             # <<<<<<<<<<<<<<
 * 
 *     @rsvd.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.rsvd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1599
 *         self.core.firmware_err = firmware_err
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def rsvd(self):
 *         return self.core.rsvd
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.rsvd.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1603
 *         return self.core.rsvd
 * 
 *     @rsvd.setter             # <<<<<<<<<<<<<<
 *     def rsvd(self, rsvd):
 *         self.core.rsvd = rsvd
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_4rsvd_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rsvd); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_4rsvd_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rsvd) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_4rsvd_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_rsvd));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_4rsvd_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_rsvd) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1605
 *     @rsvd.setter
 *     def rsvd(self, rsvd):
 *         self.core.rsvd = rsvd             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_rsvd); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1605, __pyx_L1_error)
  __pyx_v_self->core.rsvd = __pyx_t_1;

  /* "pylivox.pyx":1603
 *         return self.core.rsvd
 * 
 *     @rsvd.setter             # <<<<<<<<<<<<<<
 *     def rsvd(self, rsvd):
 *         self.core.rsvd = rsvd
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.rsvd.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1607
 *         self.core.rsvd = rsvd
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def system_status(self):
 *         return self.core.system_status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_13system_status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_13system_status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_13system_status___get__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_13system_status___get__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1609
 *     @property
 *     def system_status(self):
 *         return self.core.system_status             # <<<<<<<<<<<<<<
 * 
 *     @system_status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.system_status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1607
 *         self.core.rsvd = rsvd
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def system_status(self):
 *         return self.core.system_status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.system_status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1611
 *         return self.core.system_status
 * 
 *     @system_status.setter             # <<<<<<<<<<<<<<
 *     def system_status(self, system_status):
 *         self.core.system_status = system_status
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyHubErrorCode_13system_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_system_status); /*proto*/
static int __pyx_pw_7pylivox_14PyHubErrorCode_13system_status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_system_status) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_13system_status_2__set__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), ((PyObject *)__pyx_v_system_status));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyHubErrorCode_13system_status_2__set__(struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, PyObject *__pyx_v_system_status) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1613
 *     @system_status.setter
 *     def system_status(self, system_status):
 *         self.core.system_status = system_status             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap the ErrorMessage union
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_system_status); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1613, __pyx_L1_error)
  __pyx_v_self->core.system_status = __pyx_t_1;

  /* "pylivox.pyx":1611
 *         return self.core.system_status
 * 
 *     @system_status.setter             # <<<<<<<<<<<<<<
 *     def system_status(self, system_status):
 *         self.core.system_status = system_status
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.system_status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyHubErrorCode_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyHubErrorCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyHubErrorCode_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyHubErrorCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyHubErrorCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_14PyHubErrorCode_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyHubErrorCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyHubErrorCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1622
 *     cdef ErrorMessage core  # Correctly define core as a C union
 * 
 *     def __init__(self, uint32_t error_code=0, PyLidarErrorCode lidar_error_code=PyLidarErrorCode(),             # <<<<<<<<<<<<<<
 *                  PyHubErrorCode hub_error_code=PyHubErrorCode()):
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyErrorMessage_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_14PyErrorMessage_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint32_t __pyx_v_error_code;
  struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_lidar_error_code = 0;
  struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_hub_error_code = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_error_code,&__pyx_n_s_lidar_error_code,&__pyx_n_s_hub_error_code,0};
    values[1] = __Pyx_Arg_NewRef_VARARGS((PyObject *)__pyx_k__17);
    values[2] = __Pyx_Arg_NewRef_VARARGS((PyObject *)__pyx_k__18);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_error_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lidar_error_code);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_hub_error_code);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1622, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_error_code = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_error_code == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
    } else {
      __pyx_v_error_code = ((uint32_t)0);
    }
    __pyx_v_lidar_error_code = ((struct __pyx_obj_7pylivox_PyLidarErrorCode *)values[1]);
    __pyx_v_hub_error_code = ((struct __pyx_obj_7pylivox_PyHubErrorCode *)values[2]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1622, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyErrorMessage.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_lidar_error_code), __pyx_ptype_7pylivox_PyLidarErrorCode, 1, "lidar_error_code", 0))) __PYX_ERR(0, 1622, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_hub_error_code), __pyx_ptype_7pylivox_PyHubErrorCode, 1, "hub_error_code", 0))) __PYX_ERR(0, 1623, __pyx_L1_error)
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage___init__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self), __pyx_v_error_code, __pyx_v_lidar_error_code, __pyx_v_hub_error_code);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyErrorMessage___init__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, uint32_t __pyx_v_error_code, struct __pyx_obj_7pylivox_PyLidarErrorCode *__pyx_v_lidar_error_code, struct __pyx_obj_7pylivox_PyHubErrorCode *__pyx_v_hub_error_code) {
  int __pyx_r;
  LidarErrorCode __pyx_t_1;
  HubErrorCode __pyx_t_2;

  /* "pylivox.pyx":1624
 *     def __init__(self, uint32_t error_code=0, PyLidarErrorCode lidar_error_code=PyLidarErrorCode(),
 *                  PyHubErrorCode hub_error_code=PyHubErrorCode()):
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode             # <<<<<<<<<<<<<<
 *         self.core.hub_error_code = hub_error_code.core  # Assigning the HubErrorCode
 *         self.core.error_code = error_code  # Default to error code
 */
  __pyx_t_1 = __pyx_v_lidar_error_code->core;
  __pyx_v_self->core.lidar_error_code = __pyx_t_1;

  /* "pylivox.pyx":1625
 *                  PyHubErrorCode hub_error_code=PyHubErrorCode()):
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode
 *         self.core.hub_error_code = hub_error_code.core  # Assigning the HubErrorCode             # <<<<<<<<<<<<<<
 *         self.core.error_code = error_code  # Default to error code
 * 
 */
  __pyx_t_2 = __pyx_v_hub_error_code->core;
  __pyx_v_self->core.hub_error_code = __pyx_t_2;

  /* "pylivox.pyx":1626
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode
 *         self.core.hub_error_code = hub_error_code.core  # Assigning the HubErrorCode
 *         self.core.error_code = error_code  # Default to error code             # <<<<<<<<<<<<<<
 * 
 *     # Property for accessing the error code
 */
  __pyx_v_self->core.error_code = __pyx_v_error_code;

  /* "pylivox.pyx":1622
 *     cdef ErrorMessage core  # Correctly define core as a C union
 * 
 *     def __init__(self, uint32_t error_code=0, PyLidarErrorCode lidar_error_code=PyLidarErrorCode(),             # <<<<<<<<<<<<<<
 *                  PyHubErrorCode hub_error_code=PyHubErrorCode()):
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1629
 * 
 *     # Property for accessing the error code
 *     @property             # <<<<<<<<<<<<<<
 *     def error_code(self):
 *         return self.core.error_code
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_10error_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_10error_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_10error_code___get__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_10error_code___get__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1631
 *     @property
 *     def error_code(self):
 *         return self.core.error_code             # <<<<<<<<<<<<<<
 * 
 *     @error_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.error_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1629
 * 
 *     # Property for accessing the error code
 *     @property             # <<<<<<<<<<<<<<
 *     def error_code(self):
 *         return self.core.error_code
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyErrorMessage.error_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1633
 *         return self.core.error_code
 * 
 *     @error_code.setter             # <<<<<<<<<<<<<<
 *     def error_code(self, error_code):
 *         self.core.error_code = error_code
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyErrorMessage_10error_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_error_code); /*proto*/
static int __pyx_pw_7pylivox_14PyErrorMessage_10error_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_error_code) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_10error_code_2__set__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self), ((PyObject *)__pyx_v_error_code));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyErrorMessage_10error_code_2__set__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, PyObject *__pyx_v_error_code) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1635
 *     @error_code.setter
 *     def error_code(self, error_code):
 *         self.core.error_code = error_code             # <<<<<<<<<<<<<<
 * 
 *     # Property for accessing the LidarErrorCode
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_error_code); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1635, __pyx_L1_error)
  __pyx_v_self->core.error_code = __pyx_t_1;

  /* "pylivox.pyx":1633
 *         return self.core.error_code
 * 
 *     @error_code.setter             # <<<<<<<<<<<<<<
 *     def error_code(self, error_code):
 *         self.core.error_code = error_code
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyErrorMessage.error_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1638
 * 
 *     # Property for accessing the LidarErrorCode
 *     @property             # <<<<<<<<<<<<<<
 *     def lidar_error_code(self):
 *         return self.core.lidar_error_code
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_16lidar_error_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_16lidar_error_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_16lidar_error_code___get__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_16lidar_error_code___get__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1640
 *     @property
 *     def lidar_error_code(self):
 *         return self.core.lidar_error_code             # <<<<<<<<<<<<<<
 * 
 *     @lidar_error_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert__to_py_LidarErrorCode(__pyx_v_self->core.lidar_error_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1638
 * 
 *     # Property for accessing the LidarErrorCode
 *     @property             # <<<<<<<<<<<<<<
 *     def lidar_error_code(self):
 *         return self.core.lidar_error_code
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyErrorMessage.lidar_error_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1642
 *         return self.core.lidar_error_code
 * 
 *     @lidar_error_code.setter             # <<<<<<<<<<<<<<
 *     def lidar_error_code(self, lidar_error_code):
 *         self.core.lidar_error_code = lidar_error_code.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyErrorMessage_16lidar_error_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_lidar_error_code); /*proto*/
static int __pyx_pw_7pylivox_14PyErrorMessage_16lidar_error_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_lidar_error_code) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_16lidar_error_code_2__set__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self), ((PyObject *)__pyx_v_lidar_error_code));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyErrorMessage_16lidar_error_code_2__set__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, PyObject *__pyx_v_lidar_error_code) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  LidarErrorCode __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1644
 *     @lidar_error_code.setter
 *     def lidar_error_code(self, lidar_error_code):
 *         self.core.lidar_error_code = lidar_error_code.core             # <<<<<<<<<<<<<<
 * 
 *     # Property for accessing the HubErrorCode
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_lidar_error_code, __pyx_n_s_core); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert__from_py_LidarErrorCode(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1644, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->core.lidar_error_code = __pyx_t_2;

  /* "pylivox.pyx":1642
 *         return self.core.lidar_error_code
 * 
 *     @lidar_error_code.setter             # <<<<<<<<<<<<<<
 *     def lidar_error_code(self, lidar_error_code):
 *         self.core.lidar_error_code = lidar_error_code.core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyErrorMessage.lidar_error_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1647
 * 
 *     # Property for accessing the HubErrorCode
 *     @property             # <<<<<<<<<<<<<<
 *     def hub_error_code(self):
 *         return self.core.hub_error_code
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_14hub_error_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_14hub_error_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_14hub_error_code___get__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_14hub_error_code___get__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1649
 *     @property
 *     def hub_error_code(self):
 *         return self.core.hub_error_code             # <<<<<<<<<<<<<<
 * 
 *     @hub_error_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert__to_py_HubErrorCode(__pyx_v_self->core.hub_error_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1647
 * 
 *     # Property for accessing the HubErrorCode
 *     @property             # <<<<<<<<<<<<<<
 *     def hub_error_code(self):
 *         return self.core.hub_error_code
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyErrorMessage.hub_error_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1651
 *         return self.core.hub_error_code
 * 
 *     @hub_error_code.setter             # <<<<<<<<<<<<<<
 *     def hub_error_code(self, hub_error_code):
 *         self.core.hub_error_code = hub_error_code.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_14PyErrorMessage_14hub_error_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_hub_error_code); /*proto*/
static int __pyx_pw_7pylivox_14PyErrorMessage_14hub_error_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_hub_error_code) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_14hub_error_code_2__set__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self), ((PyObject *)__pyx_v_hub_error_code));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_14PyErrorMessage_14hub_error_code_2__set__(struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, PyObject *__pyx_v_hub_error_code) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  HubErrorCode __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1653
 *     @hub_error_code.setter
 *     def hub_error_code(self, hub_error_code):
 *         self.core.hub_error_code = hub_error_code.core             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap LivoxEthPacket
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_hub_error_code, __pyx_n_s_core); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert__from_py_HubErrorCode(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1653, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->core.hub_error_code = __pyx_t_2;

  /* "pylivox.pyx":1651
 *         return self.core.hub_error_code
 * 
 *     @hub_error_code.setter             # <<<<<<<<<<<<<<
 *     def hub_error_code(self, hub_error_code):
 *         self.core.hub_error_code = hub_error_code.core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyErrorMessage.hub_error_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyErrorMessage_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyErrorMessage_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyErrorMessage.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_14PyErrorMessage_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyErrorMessage_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_14PyErrorMessage_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyErrorMessage.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_14PyErrorMessage_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_14PyErrorMessage_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyErrorMessage.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1662
 *     cdef LivoxEthPacket core
 * 
 *     def __init__(self, uint8_t version=0, uint8_t slot=0, uint8_t id=0, uint32_t err_code=0,             # <<<<<<<<<<<<<<
 *             uint8_t timestamp_type=0, uint8_t data_type=0, timestamp=[0 for _ in range(8)],
 *                   data=[0]):
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint8_t __pyx_v_version;
  uint8_t __pyx_v_slot;
  uint8_t __pyx_v_id;
  uint32_t __pyx_v_err_code;
  uint8_t __pyx_v_timestamp_type;
  uint8_t __pyx_v_data_type;
  PyObject *__pyx_v_timestamp = 0;
  PyObject *__pyx_v_data = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[8] = {0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_version,&__pyx_n_s_slot,&__pyx_n_s_id,&__pyx_n_s_err_code,&__pyx_n_s_timestamp_type,&__pyx_n_s_data_type,&__pyx_n_s_timestamp,&__pyx_n_s_data,0};
    values[6] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__19);
    values[7] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__20);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_version);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_slot);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_id);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_err_code);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_timestamp_type);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data_type);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_timestamp);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1662, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_version = __Pyx_PyInt_As_uint8_t(values[0]); if (unlikely((__pyx_v_version == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    } else {
      __pyx_v_version = ((uint8_t)0);
    }
    if (values[1]) {
      __pyx_v_slot = __Pyx_PyInt_As_uint8_t(values[1]); if (unlikely((__pyx_v_slot == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    } else {
      __pyx_v_slot = ((uint8_t)0);
    }
    if (values[2]) {
      __pyx_v_id = __Pyx_PyInt_As_uint8_t(values[2]); if (unlikely((__pyx_v_id == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    } else {
      __pyx_v_id = ((uint8_t)0);
    }
    if (values[3]) {
      __pyx_v_err_code = __Pyx_PyInt_As_uint32_t(values[3]); if (unlikely((__pyx_v_err_code == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    } else {
      __pyx_v_err_code = ((uint32_t)0);
    }
    if (values[4]) {
      __pyx_v_timestamp_type = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_timestamp_type == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1663, __pyx_L3_error)
    } else {
      __pyx_v_timestamp_type = ((uint8_t)0);
    }
    if (values[5]) {
      __pyx_v_data_type = __Pyx_PyInt_As_uint8_t(values[5]); if (unlikely((__pyx_v_data_type == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1663, __pyx_L3_error)
    } else {
      __pyx_v_data_type = ((uint8_t)0);
    }
    __pyx_v_timestamp = values[6];
    __pyx_v_data = values[7];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 8, __pyx_nargs); __PYX_ERR(0, 1662, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket___init__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), __pyx_v_version, __pyx_v_slot, __pyx_v_id, __pyx_v_err_code, __pyx_v_timestamp_type, __pyx_v_data_type, __pyx_v_timestamp, __pyx_v_data);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket___init__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, uint8_t __pyx_v_version, uint8_t __pyx_v_slot, uint8_t __pyx_v_id, uint32_t __pyx_v_err_code, uint8_t __pyx_v_timestamp_type, uint8_t __pyx_v_data_type, PyObject *__pyx_v_timestamp, PyObject *__pyx_v_data) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  uint8_t __pyx_t_2[8];
  uint8_t __pyx_t_3[1];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":1665
 *             uint8_t timestamp_type=0, uint8_t data_type=0, timestamp=[0 for _ in range(8)],
 *                   data=[0]):
 *         self.core.version = version             # <<<<<<<<<<<<<<
 *         self.core.slot = slot
 *         self.core.id = id
 */
  __pyx_v_self->core.version = __pyx_v_version;

  /* "pylivox.pyx":1666
 *                   data=[0]):
 *         self.core.version = version
 *         self.core.slot = slot             # <<<<<<<<<<<<<<
 *         self.core.id = id
 *         self.core.err_code = err_code
 */
  __pyx_v_self->core.slot = __pyx_v_slot;

  /* "pylivox.pyx":1667
 *         self.core.version = version
 *         self.core.slot = slot
 *         self.core.id = id             # <<<<<<<<<<<<<<
 *         self.core.err_code = err_code
 *         self.core.timestamp_type = timestamp_type
 */
  __pyx_v_self->core.id = __pyx_v_id;

  /* "pylivox.pyx":1668
 *         self.core.slot = slot
 *         self.core.id = id
 *         self.core.err_code = err_code             # <<<<<<<<<<<<<<
 *         self.core.timestamp_type = timestamp_type
 *         self.core.data_type = data_type
 */
  __pyx_v_self->core.err_code = __pyx_v_err_code;

  /* "pylivox.pyx":1669
 *         self.core.id = id
 *         self.core.err_code = err_code
 *         self.core.timestamp_type = timestamp_type             # <<<<<<<<<<<<<<
 *         self.core.data_type = data_type
 *         self.core.timestamp = timestamp[:8]
 */
  __pyx_v_self->core.timestamp_type = __pyx_v_timestamp_type;

  /* "pylivox.pyx":1670
 *         self.core.err_code = err_code
 *         self.core.timestamp_type = timestamp_type
 *         self.core.data_type = data_type             # <<<<<<<<<<<<<<
 *         self.core.timestamp = timestamp[:8]
 *         self.core.data = data[:1]
 */
  __pyx_v_self->core.data_type = __pyx_v_data_type;

  /* "pylivox.pyx":1671
 *         self.core.timestamp_type = timestamp_type
 *         self.core.data_type = data_type
 *         self.core.timestamp = timestamp[:8]             # <<<<<<<<<<<<<<
 *         self.core.data = data[:1]
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_timestamp, 0, 8, NULL, NULL, &__pyx_slice__21, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_t_1, __pyx_t_2, 8) < 0))) __PYX_ERR(0, 1671, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.timestamp[0]), __pyx_t_2, sizeof(__pyx_v_self->core.timestamp[0]) * (8));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pylivox.pyx":1672
 *         self.core.data_type = data_type
 *         self.core.timestamp = timestamp[:8]
 *         self.core.data = data[:1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_data, 0, 1, NULL, NULL, &__pyx_slice__22, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_t_1, __pyx_t_3, 1) < 0))) __PYX_ERR(0, 1672, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.data[0]), __pyx_t_3, sizeof(__pyx_v_self->core.data[0]) * (1));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pylivox.pyx":1662
 *     cdef LivoxEthPacket core
 * 
 *     def __init__(self, uint8_t version=0, uint8_t slot=0, uint8_t id=0, uint32_t err_code=0,             # <<<<<<<<<<<<<<
 *             uint8_t timestamp_type=0, uint8_t data_type=0, timestamp=[0 for _ in range(8)],
 *                   data=[0]):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1674
 *         self.core.data = data[:1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def version(self):
 *         return self.core.version
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_7version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_7version_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_7version___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_7version___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1676
 *     @property
 *     def version(self):
 *         return self.core.version             # <<<<<<<<<<<<<<
 * 
 *     @version.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1674
 *         self.core.data = data[:1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def version(self):
 *         return self.core.version
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1678
 *         return self.core.version
 * 
 *     @version.setter             # <<<<<<<<<<<<<<
 *     def version(self, value):
 *         self.core.version = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_7version_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_7version_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1680
 *     @version.setter
 *     def version(self, value):
 *         self.core.version = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1680, __pyx_L1_error)
  __pyx_v_self->core.version = __pyx_t_1;

  /* "pylivox.pyx":1678
 *         return self.core.version
 * 
 *     @version.setter             # <<<<<<<<<<<<<<
 *     def version(self, value):
 *         self.core.version = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1682
 *         self.core.version = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def slot(self):
 *         return self.core.slot
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_4slot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_4slot_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_4slot___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_4slot___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1684
 *     @property
 *     def slot(self):
 *         return self.core.slot             # <<<<<<<<<<<<<<
 * 
 *     @slot.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.slot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1682
 *         self.core.version = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def slot(self):
 *         return self.core.slot
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.slot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1686
 *         return self.core.slot
 * 
 *     @slot.setter             # <<<<<<<<<<<<<<
 *     def slot(self, value):
 *         self.core.slot = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_4slot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_4slot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_4slot_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_4slot_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1688
 *     @slot.setter
 *     def slot(self, value):
 *         self.core.slot = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L1_error)
  __pyx_v_self->core.slot = __pyx_t_1;

  /* "pylivox.pyx":1686
 *         return self.core.slot
 * 
 *     @slot.setter             # <<<<<<<<<<<<<<
 *     def slot(self, value):
 *         self.core.slot = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.slot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1690
 *         self.core.slot = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         return self.core.id
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_2id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_2id_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_2id___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_2id___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1692
 *     @property
 *     def id(self):
 *         return self.core.id             # <<<<<<<<<<<<<<
 * 
 *     @id.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1690
 *         self.core.slot = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         return self.core.id
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1694
 *         return self.core.id
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, value):
 *         self.core.id = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_2id_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_2id_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1696
 *     @id.setter
 *     def id(self, value):
 *         self.core.id = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1696, __pyx_L1_error)
  __pyx_v_self->core.id = __pyx_t_1;

  /* "pylivox.pyx":1694
 *         return self.core.id
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, value):
 *         self.core.id = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1698
 *         self.core.id = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def err_code(self):
 *         return self.core.err_code
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_8err_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_8err_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_8err_code___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_8err_code___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1700
 *     @property
 *     def err_code(self):
 *         return self.core.err_code             # <<<<<<<<<<<<<<
 * 
 *     @err_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.err_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1698
 *         self.core.id = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def err_code(self):
 *         return self.core.err_code
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.err_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1702
 *         return self.core.err_code
 * 
 *     @err_code.setter             # <<<<<<<<<<<<<<
 *     def err_code(self, value):
 *         self.core.err_code = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_8err_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_8err_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_8err_code_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_8err_code_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1704
 *     @err_code.setter
 *     def err_code(self, value):
 *         self.core.err_code = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1704, __pyx_L1_error)
  __pyx_v_self->core.err_code = __pyx_t_1;

  /* "pylivox.pyx":1702
 *         return self.core.err_code
 * 
 *     @err_code.setter             # <<<<<<<<<<<<<<
 *     def err_code(self, value):
 *         self.core.err_code = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.err_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1706
 *         self.core.err_code = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def timestamp_type(self):
 *         return self.core.timestamp_type
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_14timestamp_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_14timestamp_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_14timestamp_type___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_14timestamp_type___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1708
 *     @property
 *     def timestamp_type(self):
 *         return self.core.timestamp_type             # <<<<<<<<<<<<<<
 * 
 *     @timestamp_type.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.timestamp_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1708, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1706
 *         self.core.err_code = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def timestamp_type(self):
 *         return self.core.timestamp_type
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.timestamp_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1710
 *         return self.core.timestamp_type
 * 
 *     @timestamp_type.setter             # <<<<<<<<<<<<<<
 *     def timestamp_type(self, value):
 *         self.core.timestamp_type = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_14timestamp_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_14timestamp_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_14timestamp_type_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_14timestamp_type_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1712
 *     @timestamp_type.setter
 *     def timestamp_type(self, value):
 *         self.core.timestamp_type = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1712, __pyx_L1_error)
  __pyx_v_self->core.timestamp_type = __pyx_t_1;

  /* "pylivox.pyx":1710
 *         return self.core.timestamp_type
 * 
 *     @timestamp_type.setter             # <<<<<<<<<<<<<<
 *     def timestamp_type(self, value):
 *         self.core.timestamp_type = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.timestamp_type.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1714
 *         self.core.timestamp_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def data_type(self):
 *         return self.core.data_type
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_9data_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_9data_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_9data_type___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_9data_type___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1716
 *     @property
 *     def data_type(self):
 *         return self.core.data_type             # <<<<<<<<<<<<<<
 * 
 *     @data_type.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.data_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1716, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1714
 *         self.core.timestamp_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def data_type(self):
 *         return self.core.data_type
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.data_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1718
 *         return self.core.data_type
 * 
 *     @data_type.setter             # <<<<<<<<<<<<<<
 *     def data_type(self, value):
 *         self.core.data_type = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_9data_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_9data_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_9data_type_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_9data_type_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1720
 *     @data_type.setter
 *     def data_type(self, value):
 *         self.core.data_type = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1720, __pyx_L1_error)
  __pyx_v_self->core.data_type = __pyx_t_1;

  /* "pylivox.pyx":1718
 *         return self.core.data_type
 * 
 *     @data_type.setter             # <<<<<<<<<<<<<<
 *     def data_type(self, value):
 *         self.core.data_type = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.data_type.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1722
 *         self.core.data_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def timestamp(self):
 *         return self.core.timestamp
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_9timestamp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_9timestamp_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_9timestamp___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_9timestamp___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1724
 *     @property
 *     def timestamp(self):
 *         return self.core.timestamp             # <<<<<<<<<<<<<<
 * 
 *     @timestamp.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromCString(__pyx_v_self->core.timestamp); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1722
 *         self.core.data_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def timestamp(self):
 *         return self.core.timestamp
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.timestamp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1726
 *         return self.core.timestamp
 * 
 *     @timestamp.setter             # <<<<<<<<<<<<<<
 *     def timestamp(self, value):
 *         self.core.timestamp = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_9timestamp_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_9timestamp_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_9timestamp_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_9timestamp_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1[8];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1728
 *     @timestamp.setter
 *     def timestamp(self, value):
 *         self.core.timestamp = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_v_value, __pyx_t_1, 8) < 0))) __PYX_ERR(0, 1728, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.timestamp[0]), __pyx_t_1, sizeof(__pyx_v_self->core.timestamp[0]) * (8));

  /* "pylivox.pyx":1726
 *         return self.core.timestamp
 * 
 *     @timestamp.setter             # <<<<<<<<<<<<<<
 *     def timestamp(self, value):
 *         self.core.timestamp = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.timestamp.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1730
 *         self.core.timestamp = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def data(self):
 *         return self.core.data
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_4data_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_4data_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_4data___get__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_4data___get__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1732
 *     @property
 *     def data(self):
 *         return self.core.data             # <<<<<<<<<<<<<<
 * 
 *     @data.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromCString(__pyx_v_self->core.data); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1730
 *         self.core.timestamp = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def data(self):
 *         return self.core.data
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.data.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1734
 *         return self.core.data
 * 
 *     @data.setter             # <<<<<<<<<<<<<<
 *     def data(self, value):
 *         self.core.data = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_4data_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_16PyLivoxEthPacket_4data_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_4data_2__set__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_16PyLivoxEthPacket_4data_2__set__(struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1[1];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1736
 *     @data.setter
 *     def data(self, value):
 *         self.core.data = value             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap StatusUnion
 */
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_v_value, __pyx_t_1, 1) < 0))) __PYX_ERR(0, 1736, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.data[0]), __pyx_t_1, sizeof(__pyx_v_self->core.data[0]) * (1));

  /* "pylivox.pyx":1734
 *         return self.core.data
 * 
 *     @data.setter             # <<<<<<<<<<<<<<
 *     def data(self, value):
 *         self.core.data = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.data.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_16PyLivoxEthPacket_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLivoxEthPacket_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_16PyLivoxEthPacket_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLivoxEthPacket_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_16PyLivoxEthPacket_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_16PyLivoxEthPacket_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_16PyLivoxEthPacket_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLivoxEthPacket *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLivoxEthPacket.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1745
 *     cdef StatusUnion core
 * 
 *     def __init__(self, uint32_t progress=0, PyErrorMessage status_code=PyErrorMessage()):             # <<<<<<<<<<<<<<
 *         self.core.progress = progress
 *         self.core.status_code = status_code.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_13PyStatusUnion_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_13PyStatusUnion_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint32_t __pyx_v_progress;
  struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_status_code = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_progress,&__pyx_n_s_status_code,0};
    values[1] = __Pyx_Arg_NewRef_VARARGS((PyObject *)__pyx_k__23);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_progress);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1745, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_status_code);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1745, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1745, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_progress = __Pyx_PyInt_As_uint32_t(values[0]); if (unlikely((__pyx_v_progress == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1745, __pyx_L3_error)
    } else {
      __pyx_v_progress = ((uint32_t)0);
    }
    __pyx_v_status_code = ((struct __pyx_obj_7pylivox_PyErrorMessage *)values[1]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1745, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyStatusUnion.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_status_code), __pyx_ptype_7pylivox_PyErrorMessage, 1, "status_code", 0))) __PYX_ERR(0, 1745, __pyx_L1_error)
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion___init__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self), __pyx_v_progress, __pyx_v_status_code);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_13PyStatusUnion___init__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, uint32_t __pyx_v_progress, struct __pyx_obj_7pylivox_PyErrorMessage *__pyx_v_status_code) {
  int __pyx_r;
  ErrorMessage __pyx_t_1;

  /* "pylivox.pyx":1746
 * 
 *     def __init__(self, uint32_t progress=0, PyErrorMessage status_code=PyErrorMessage()):
 *         self.core.progress = progress             # <<<<<<<<<<<<<<
 *         self.core.status_code = status_code.core
 * 
 */
  __pyx_v_self->core.progress = __pyx_v_progress;

  /* "pylivox.pyx":1747
 *     def __init__(self, uint32_t progress=0, PyErrorMessage status_code=PyErrorMessage()):
 *         self.core.progress = progress
 *         self.core.status_code = status_code.core             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __pyx_v_status_code->core;
  __pyx_v_self->core.status_code = __pyx_t_1;

  /* "pylivox.pyx":1745
 *     cdef StatusUnion core
 * 
 *     def __init__(self, uint32_t progress=0, PyErrorMessage status_code=PyErrorMessage()):             # <<<<<<<<<<<<<<
 *         self.core.progress = progress
 *         self.core.status_code = status_code.core
 */

  /* function exit code */
  __pyx_r = 0;
  return __pyx_r;
}

/* "pylivox.pyx":1749
 *         self.core.status_code = status_code.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def progress(self):
 *         return self.core.progress
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_8progress_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_8progress_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion_8progress___get__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_8progress___get__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1751
 *     @property
 *     def progress(self):
 *         return self.core.progress             # <<<<<<<<<<<<<<
 * 
 *     @progress.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint32_t(__pyx_v_self->core.progress); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1749
 *         self.core.status_code = status_code.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def progress(self):
 *         return self.core.progress
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyStatusUnion.progress.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1753
 *         return self.core.progress
 * 
 *     @progress.setter             # <<<<<<<<<<<<<<
 *     def progress(self, value):
 *         self.core.progress = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_13PyStatusUnion_8progress_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_13PyStatusUnion_8progress_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion_8progress_2__set__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_13PyStatusUnion_8progress_2__set__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint32_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1755
 *     @progress.setter
 *     def progress(self, value):
 *         self.core.progress = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint32_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint32_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1755, __pyx_L1_error)
  __pyx_v_self->core.progress = __pyx_t_1;

  /* "pylivox.pyx":1753
 *         return self.core.progress
 * 
 *     @progress.setter             # <<<<<<<<<<<<<<
 *     def progress(self, value):
 *         self.core.progress = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyStatusUnion.progress.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1757
 *         self.core.progress = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def status_code(self):
 *         return self.core.status_code
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_11status_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_11status_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion_11status_code___get__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_11status_code___get__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1759
 *     @property
 *     def status_code(self):
 *         return self.core.status_code             # <<<<<<<<<<<<<<
 * 
 *     @status_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert__to_py_ErrorMessage(__pyx_v_self->core.status_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1757
 *         self.core.progress = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def status_code(self):
 *         return self.core.status_code
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyStatusUnion.status_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1761
 *         return self.core.status_code
 * 
 *     @status_code.setter             # <<<<<<<<<<<<<<
 *     def status_code(self, value):
 *         self.core.status_code = value.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_13PyStatusUnion_11status_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_13PyStatusUnion_11status_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion_11status_code_2__set__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_13PyStatusUnion_11status_code_2__set__(struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  ErrorMessage __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1763
 *     @status_code.setter
 *     def status_code(self, value):
 *         self.core.status_code = value.core             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap DeviceInfo
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_core); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert__from_py_ErrorMessage(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1763, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->core.status_code = __pyx_t_2;

  /* "pylivox.pyx":1761
 *         return self.core.status_code
 * 
 *     @status_code.setter             # <<<<<<<<<<<<<<
 *     def status_code(self, value):
 *         self.core.status_code = value.core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyStatusUnion.status_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyStatusUnion_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyStatusUnion_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyStatusUnion.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_13PyStatusUnion_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyStatusUnion_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_13PyStatusUnion_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyStatusUnion.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_13PyStatusUnion_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_13PyStatusUnion_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyStatusUnion.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1772
 *     cdef DeviceInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t handle=0,             # <<<<<<<<<<<<<<
 *                  uint8_t slot=0, uint8_t id=0,
 *                  uint8_t type=0, uint16_t data_port=0, uint16_t cmd_port=0, uint16_t sensor_port=0,
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_broadcast_code = 0;
  uint8_t __pyx_v_handle;
  uint8_t __pyx_v_slot;
  uint8_t __pyx_v_id;
  uint8_t __pyx_v_type;
  uint16_t __pyx_v_data_port;
  uint16_t __pyx_v_cmd_port;
  uint16_t __pyx_v_sensor_port;
  PyObject *__pyx_v_ip = 0;
  struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_state = 0;
  struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_feature = 0;
  struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_status = 0;
  PyObject *__pyx_v_firmware_version = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_handle,&__pyx_n_s_slot,&__pyx_n_s_id,&__pyx_n_s_type,&__pyx_n_s_data_port,&__pyx_n_s_cmd_port,&__pyx_n_s_sensor_port,&__pyx_n_s_ip,&__pyx_n_s_state,&__pyx_n_s_feature,&__pyx_n_s_status,&__pyx_n_s_firmware_version,0};
    values[0] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__24);
    values[8] = __Pyx_Arg_NewRef_VARARGS(((PyObject *)__pyx_kp_u_0000000000000000));
    values[9] = __Pyx_Arg_NewRef_VARARGS((PyObject *)__pyx_k__25);
    values[10] = __Pyx_Arg_NewRef_VARARGS((PyObject *)__pyx_k__26);
    values[11] = __Pyx_Arg_NewRef_VARARGS((PyObject *)__pyx_k__27);
    values[12] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__28);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case 13: values[12] = __Pyx_Arg_VARARGS(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = __Pyx_Arg_VARARGS(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_handle);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_slot);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_id);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_type);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data_port);
          if (value) { values[5] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cmd_port);
          if (value) { values[6] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sensor_port);
          if (value) { values[7] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ip);
          if (value) { values[8] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_state);
          if (value) { values[9] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_feature);
          if (value) { values[10] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_status);
          if (value) { values[11] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_firmware_version);
          if (value) { values[12] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1772, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case 13: values[12] = __Pyx_Arg_VARARGS(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = __Pyx_Arg_VARARGS(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = __Pyx_Arg_VARARGS(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = __Pyx_Arg_VARARGS(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = __Pyx_Arg_VARARGS(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = __Pyx_Arg_VARARGS(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_VARARGS(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_broadcast_code = values[0];
    if (values[1]) {
      __pyx_v_handle = __Pyx_PyInt_As_uint8_t(values[1]); if (unlikely((__pyx_v_handle == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1772, __pyx_L3_error)
    } else {
      __pyx_v_handle = ((uint8_t)0);
    }
    if (values[2]) {
      __pyx_v_slot = __Pyx_PyInt_As_uint8_t(values[2]); if (unlikely((__pyx_v_slot == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1773, __pyx_L3_error)
    } else {
      __pyx_v_slot = ((uint8_t)0);
    }
    if (values[3]) {
      __pyx_v_id = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_id == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1773, __pyx_L3_error)
    } else {
      __pyx_v_id = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_type = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_type == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1774, __pyx_L3_error)
    } else {
      __pyx_v_type = ((uint8_t)0);
    }
    if (values[5]) {
      __pyx_v_data_port = __Pyx_PyInt_As_uint16_t(values[5]); if (unlikely((__pyx_v_data_port == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1774, __pyx_L3_error)
    } else {
      __pyx_v_data_port = ((uint16_t)0);
    }
    if (values[6]) {
      __pyx_v_cmd_port = __Pyx_PyInt_As_uint16_t(values[6]); if (unlikely((__pyx_v_cmd_port == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1774, __pyx_L3_error)
    } else {
      __pyx_v_cmd_port = ((uint16_t)0);
    }
    if (values[7]) {
      __pyx_v_sensor_port = __Pyx_PyInt_As_uint16_t(values[7]); if (unlikely((__pyx_v_sensor_port == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1774, __pyx_L3_error)
    } else {
      __pyx_v_sensor_port = ((uint16_t)0);
    }
    __pyx_v_ip = values[8];
    __pyx_v_state = ((struct __pyx_obj_7pylivox_PyLidarState *)values[9]);
    __pyx_v_feature = ((struct __pyx_obj_7pylivox_PyLidarFeature *)values[10]);
    __pyx_v_status = ((struct __pyx_obj_7pylivox_PyStatusUnion *)values[11]);
    __pyx_v_firmware_version = values[12];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 13, __pyx_nargs); __PYX_ERR(0, 1772, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_state), __pyx_ptype_7pylivox_PyLidarState, 1, "state", 0))) __PYX_ERR(0, 1776, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_feature), __pyx_ptype_7pylivox_PyLidarFeature, 1, "feature", 0))) __PYX_ERR(0, 1776, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_status), __pyx_ptype_7pylivox_PyStatusUnion, 1, "status", 0))) __PYX_ERR(0, 1777, __pyx_L1_error)
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo___init__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), __pyx_v_broadcast_code, __pyx_v_handle, __pyx_v_slot, __pyx_v_id, __pyx_v_type, __pyx_v_data_port, __pyx_v_cmd_port, __pyx_v_sensor_port, __pyx_v_ip, __pyx_v_state, __pyx_v_feature, __pyx_v_status, __pyx_v_firmware_version);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo___init__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_handle, uint8_t __pyx_v_slot, uint8_t __pyx_v_id, uint8_t __pyx_v_type, uint16_t __pyx_v_data_port, uint16_t __pyx_v_cmd_port, uint16_t __pyx_v_sensor_port, PyObject *__pyx_v_ip, struct __pyx_obj_7pylivox_PyLidarState *__pyx_v_state, struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v_feature, struct __pyx_obj_7pylivox_PyStatusUnion *__pyx_v_status, PyObject *__pyx_v_firmware_version) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  char __pyx_t_4[15];
  unsigned int __pyx_t_5;
  char __pyx_t_6[16];
  LidarState __pyx_t_7;
  LidarFeature __pyx_t_8;
  StatusUnion __pyx_t_9;
  uint8_t __pyx_t_10[4];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":1778
 *                  PyLidarState state=PyLidarState(), PyLidarFeature feature=PyLidarFeature(),
 *                  PyStatusUnion status=PyStatusUnion(), firmware_version=[0 for _ in range(4)]):
 *         self.core.broadcast_code = broadcast_code.encode['utf-8'][:kBroadcastCodeSize-1]  # Ensure null-termination             # <<<<<<<<<<<<<<
 *         self.core.handle = handle
 *         self.core.slot = slot
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_t_1, __pyx_kp_u_utf_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_t_2, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_1, __pyx_t_4, 15) < 0))) __PYX_ERR(0, 1778, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_4, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pylivox.pyx":1779
 *                  PyStatusUnion status=PyStatusUnion(), firmware_version=[0 for _ in range(4)]):
 *         self.core.broadcast_code = broadcast_code.encode['utf-8'][:kBroadcastCodeSize-1]  # Ensure null-termination
 *         self.core.handle = handle             # <<<<<<<<<<<<<<
 *         self.core.slot = slot
 *         self.core.id = id
 */
  __pyx_v_self->core.handle = __pyx_v_handle;

  /* "pylivox.pyx":1780
 *         self.core.broadcast_code = broadcast_code.encode['utf-8'][:kBroadcastCodeSize-1]  # Ensure null-termination
 *         self.core.handle = handle
 *         self.core.slot = slot             # <<<<<<<<<<<<<<
 *         self.core.id = id
 *         self.core.type = type
 */
  __pyx_v_self->core.slot = __pyx_v_slot;

  /* "pylivox.pyx":1781
 *         self.core.handle = handle
 *         self.core.slot = slot
 *         self.core.id = id             # <<<<<<<<<<<<<<
 *         self.core.type = type
 *         self.core.data_port = data_port
 */
  __pyx_v_self->core.id = __pyx_v_id;

  /* "pylivox.pyx":1782
 *         self.core.slot = slot
 *         self.core.id = id
 *         self.core.type = type             # <<<<<<<<<<<<<<
 *         self.core.data_port = data_port
 *         self.core.cmd_port = cmd_port
 */
  __pyx_v_self->core.type = __pyx_v_type;

  /* "pylivox.pyx":1783
 *         self.core.id = id
 *         self.core.type = type
 *         self.core.data_port = data_port             # <<<<<<<<<<<<<<
 *         self.core.cmd_port = cmd_port
 *         self.core.sensor_port = sensor_port
 */
  __pyx_v_self->core.data_port = __pyx_v_data_port;

  /* "pylivox.pyx":1784
 *         self.core.type = type
 *         self.core.data_port = data_port
 *         self.core.cmd_port = cmd_port             # <<<<<<<<<<<<<<
 *         self.core.sensor_port = sensor_port
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 */
  __pyx_v_self->core.cmd_port = __pyx_v_cmd_port;

  /* "pylivox.pyx":1785
 *         self.core.data_port = data_port
 *         self.core.cmd_port = cmd_port
 *         self.core.sensor_port = sensor_port             # <<<<<<<<<<<<<<
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 *         self.core.state = state.core
 */
  __pyx_v_self->core.sensor_port = __pyx_v_sensor_port;

  /* "pylivox.pyx":1786
 *         self.core.cmd_port = cmd_port
 *         self.core.sensor_port = sensor_port
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination             # <<<<<<<<<<<<<<
 *         self.core.state = state.core
 *         self.core.feature = feature.core
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ip, __pyx_n_s_encode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 16, NULL, NULL, &__pyx_slice__29, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_3, __pyx_t_6, 16) < 0))) __PYX_ERR(0, 1786, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.ip[0]), __pyx_t_6, sizeof(__pyx_v_self->core.ip[0]) * (16));
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":1787
 *         self.core.sensor_port = sensor_port
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 *         self.core.state = state.core             # <<<<<<<<<<<<<<
 *         self.core.feature = feature.core
 *         self.core.status = status.core
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_state), __pyx_n_s_core); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = ((LidarState)__Pyx_PyInt_As_LidarState(__pyx_t_3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1787, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_self->core.state = __pyx_t_7;

  /* "pylivox.pyx":1788
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 *         self.core.state = state.core
 *         self.core.feature = feature.core             # <<<<<<<<<<<<<<
 *         self.core.status = status.core
 *         self.core.firmware_version = firmware_version[:4]  # Ensure length
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_feature), __pyx_n_s_core); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = ((LidarFeature)__Pyx_PyInt_As_LidarFeature(__pyx_t_3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_self->core.feature = __pyx_t_8;

  /* "pylivox.pyx":1789
 *         self.core.state = state.core
 *         self.core.feature = feature.core
 *         self.core.status = status.core             # <<<<<<<<<<<<<<
 *         self.core.firmware_version = firmware_version[:4]  # Ensure length
 * 
 */
  __pyx_t_9 = __pyx_v_status->core;
  __pyx_v_self->core.status = __pyx_t_9;

  /* "pylivox.pyx":1790
 *         self.core.feature = feature.core
 *         self.core.status = status.core
 *         self.core.firmware_version = firmware_version[:4]  # Ensure length             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_firmware_version, 0, 4, NULL, NULL, &__pyx_slice__30, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_t_3, __pyx_t_10, 4) < 0))) __PYX_ERR(0, 1790, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.firmware_version[0]), __pyx_t_10, sizeof(__pyx_v_self->core.firmware_version[0]) * (4));
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":1772
 *     cdef DeviceInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t handle=0,             # <<<<<<<<<<<<<<
 *                  uint8_t slot=0, uint8_t id=0,
 *                  uint8_t type=0, uint16_t data_port=0, uint16_t cmd_port=0, uint16_t sensor_port=0,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1792
 *         self.core.firmware_version = firmware_version[:4]  # Ensure length
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1794
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1794, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1794, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1792
 *         self.core.firmware_version = firmware_version[:4]  # Ensure length
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1796
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1798
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1798, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 1798, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1796
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1800
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def handle(self):
 *         return self.core.handle
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_6handle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_6handle_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_6handle___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_6handle___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1802
 *     @property
 *     def handle(self):
 *         return self.core.handle             # <<<<<<<<<<<<<<
 * 
 *     @handle.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.handle); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1800
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def handle(self):
 *         return self.core.handle
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.handle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1804
 *         return self.core.handle
 * 
 *     @handle.setter             # <<<<<<<<<<<<<<
 *     def handle(self, value):
 *         self.core.handle = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_6handle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_6handle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_6handle_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_6handle_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1806
 *     @handle.setter
 *     def handle(self, value):
 *         self.core.handle = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1806, __pyx_L1_error)
  __pyx_v_self->core.handle = __pyx_t_1;

  /* "pylivox.pyx":1804
 *         return self.core.handle
 * 
 *     @handle.setter             # <<<<<<<<<<<<<<
 *     def handle(self, value):
 *         self.core.handle = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.handle.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1808
 *         self.core.handle = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def slot(self):
 *         return self.core.slot
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_4slot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_4slot_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_4slot___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_4slot___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1810
 *     @property
 *     def slot(self):
 *         return self.core.slot             # <<<<<<<<<<<<<<
 * 
 *     @slot.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.slot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1808
 *         self.core.handle = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def slot(self):
 *         return self.core.slot
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.slot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1812
 *         return self.core.slot
 * 
 *     @slot.setter             # <<<<<<<<<<<<<<
 *     def slot(self, value):
 *         self.core.slot = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_4slot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_4slot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_4slot_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_4slot_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1814
 *     @slot.setter
 *     def slot(self, value):
 *         self.core.slot = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1814, __pyx_L1_error)
  __pyx_v_self->core.slot = __pyx_t_1;

  /* "pylivox.pyx":1812
 *         return self.core.slot
 * 
 *     @slot.setter             # <<<<<<<<<<<<<<
 *     def slot(self, value):
 *         self.core.slot = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.slot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1816
 *         self.core.slot = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         return self.core.id
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_2id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_2id_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_2id___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_2id___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1818
 *     @property
 *     def id(self):
 *         return self.core.id             # <<<<<<<<<<<<<<
 * 
 *     @id.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1816
 *         self.core.slot = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         return self.core.id
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1820
 *         return self.core.id
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, value):
 *         self.core.id = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_2id_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_2id_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1822
 *     @id.setter
 *     def id(self, value):
 *         self.core.id = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1822, __pyx_L1_error)
  __pyx_v_self->core.id = __pyx_t_1;

  /* "pylivox.pyx":1820
 *         return self.core.id
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, value):
 *         self.core.id = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1824
 *         self.core.id = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def type(self):
 *         return self.core.type
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_4type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_4type___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_4type___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1826
 *     @property
 *     def type(self):
 *         return self.core.type             # <<<<<<<<<<<<<<
 * 
 *     @type.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1824
 *         self.core.id = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def type(self):
 *         return self.core.type
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1828
 *         return self.core.type
 * 
 *     @type.setter             # <<<<<<<<<<<<<<
 *     def type(self, value):
 *         self.core.type = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_4type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_4type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_4type_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_4type_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1830
 *     @type.setter
 *     def type(self, value):
 *         self.core.type = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1830, __pyx_L1_error)
  __pyx_v_self->core.type = __pyx_t_1;

  /* "pylivox.pyx":1828
 *         return self.core.type
 * 
 *     @type.setter             # <<<<<<<<<<<<<<
 *     def type(self, value):
 *         self.core.type = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.type.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1832
 *         self.core.type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def data_port(self):
 *         return self.core.data_port
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_9data_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_9data_port_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_9data_port___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_9data_port___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1834
 *     @property
 *     def data_port(self):
 *         return self.core.data_port             # <<<<<<<<<<<<<<
 * 
 *     @data_port.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.data_port); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1832
 *         self.core.type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def data_port(self):
 *         return self.core.data_port
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.data_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1836
 *         return self.core.data_port
 * 
 *     @data_port.setter             # <<<<<<<<<<<<<<
 *     def data_port(self, value):
 *         self.core.data_port = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_9data_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_9data_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_9data_port_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_9data_port_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1838
 *     @data_port.setter
 *     def data_port(self, value):
 *         self.core.data_port = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1838, __pyx_L1_error)
  __pyx_v_self->core.data_port = __pyx_t_1;

  /* "pylivox.pyx":1836
 *         return self.core.data_port
 * 
 *     @data_port.setter             # <<<<<<<<<<<<<<
 *     def data_port(self, value):
 *         self.core.data_port = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.data_port.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1840
 *         self.core.data_port = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def cmd_port(self):
 *         return self.core.cmd_port
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_8cmd_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_8cmd_port_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_8cmd_port___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_8cmd_port___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1842
 *     @property
 *     def cmd_port(self):
 *         return self.core.cmd_port             # <<<<<<<<<<<<<<
 * 
 *     @cmd_port.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.cmd_port); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1840
 *         self.core.data_port = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def cmd_port(self):
 *         return self.core.cmd_port
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.cmd_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1844
 *         return self.core.cmd_port
 * 
 *     @cmd_port.setter             # <<<<<<<<<<<<<<
 *     def cmd_port(self, value):
 *         self.core.cmd_port = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_8cmd_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_8cmd_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_8cmd_port_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_8cmd_port_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1846
 *     @cmd_port.setter
 *     def cmd_port(self, value):
 *         self.core.cmd_port = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1846, __pyx_L1_error)
  __pyx_v_self->core.cmd_port = __pyx_t_1;

  /* "pylivox.pyx":1844
 *         return self.core.cmd_port
 * 
 *     @cmd_port.setter             # <<<<<<<<<<<<<<
 *     def cmd_port(self, value):
 *         self.core.cmd_port = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.cmd_port.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1848
 *         self.core.cmd_port = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def sensor_port(self):
 *         return self.core.sensor_port
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_11sensor_port_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_11sensor_port_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_11sensor_port___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_11sensor_port___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1850
 *     @property
 *     def sensor_port(self):
 *         return self.core.sensor_port             # <<<<<<<<<<<<<<
 * 
 *     @sensor_port.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.sensor_port); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1848
 *         self.core.cmd_port = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def sensor_port(self):
 *         return self.core.sensor_port
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.sensor_port.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1852
 *         return self.core.sensor_port
 * 
 *     @sensor_port.setter             # <<<<<<<<<<<<<<
 *     def sensor_port(self, value):
 *         self.core.sensor_port = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_11sensor_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_11sensor_port_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_11sensor_port_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_11sensor_port_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1854
 *     @sensor_port.setter
 *     def sensor_port(self, value):
 *         self.core.sensor_port = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1854, __pyx_L1_error)
  __pyx_v_self->core.sensor_port = __pyx_t_1;

  /* "pylivox.pyx":1852
 *         return self.core.sensor_port
 * 
 *     @sensor_port.setter             # <<<<<<<<<<<<<<
 *     def sensor_port(self, value):
 *         self.core.sensor_port = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.sensor_port.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1856
 *         self.core.sensor_port = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ip(self):
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_2ip_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_2ip_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_2ip___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_2ip___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1858
 *     @property
 *     def ip(self):
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string             # <<<<<<<<<<<<<<
 * 
 *     @ip.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.ip;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1858, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1856
 *         self.core.sensor_port = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ip(self):
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.ip.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1860
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 * 
 *     @ip.setter             # <<<<<<<<<<<<<<
 *     def ip(self, value):
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_2ip_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_2ip_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_2ip_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_2ip_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[16];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1862
 *     @ip.setter
 *     def ip(self, value):
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1862, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 16, NULL, NULL, &__pyx_slice__29, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 16) < 0))) __PYX_ERR(0, 1862, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.ip[0]), __pyx_t_5, sizeof(__pyx_v_self->core.ip[0]) * (16));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1860
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 * 
 *     @ip.setter             # <<<<<<<<<<<<<<
 *     def ip(self, value):
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.ip.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1864
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def state(self):
 *         return self.core.state
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_5state_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_5state_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_5state___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_5state___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1866
 *     @property
 *     def state(self):
 *         return self.core.state             # <<<<<<<<<<<<<<
 * 
 *     @state.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarState(__pyx_v_self->core.state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1864
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def state(self):
 *         return self.core.state
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.state.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1868
 *         return self.core.state
 * 
 *     @state.setter             # <<<<<<<<<<<<<<
 *     def state(self, value):
 *         self.core.state = value.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_5state_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_5state_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_5state_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_5state_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  LidarState __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1870
 *     @state.setter
 *     def state(self, value):
 *         self.core.state = value.core             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_core); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((LidarState)__Pyx_PyInt_As_LidarState(__pyx_t_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1870, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->core.state = __pyx_t_2;

  /* "pylivox.pyx":1868
 *         return self.core.state
 * 
 *     @state.setter             # <<<<<<<<<<<<<<
 *     def state(self, value):
 *         self.core.state = value.core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.state.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1872
 *         self.core.state = value.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def feature(self):
 *         return self.core.feature
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_7feature_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_7feature_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_7feature___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_7feature___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1874
 *     @property
 *     def feature(self):
 *         return self.core.feature             # <<<<<<<<<<<<<<
 * 
 *     @feature.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_LidarFeature(__pyx_v_self->core.feature); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1872
 *         self.core.state = value.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def feature(self):
 *         return self.core.feature
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.feature.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1876
 *         return self.core.feature
 * 
 *     @feature.setter             # <<<<<<<<<<<<<<
 *     def feature(self, value):
 *         self.core.feature = value.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_7feature_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_7feature_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_7feature_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_7feature_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  LidarFeature __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1878
 *     @feature.setter
 *     def feature(self, value):
 *         self.core.feature = value.core             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_core); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = ((LidarFeature)__Pyx_PyInt_As_LidarFeature(__pyx_t_1)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->core.feature = __pyx_t_2;

  /* "pylivox.pyx":1876
 *         return self.core.feature
 * 
 *     @feature.setter             # <<<<<<<<<<<<<<
 *     def feature(self, value):
 *         self.core.feature = value.core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.feature.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1880
 *         self.core.feature = value.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def status(self):
 *         return self.core.status
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_6status_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_6status_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_6status___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_6status___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1882
 *     @property
 *     def status(self):
 *         return self.core.status             # <<<<<<<<<<<<<<
 * 
 *     @status.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert__to_py_StatusUnion(__pyx_v_self->core.status); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1880
 *         self.core.feature = value.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def status(self):
 *         return self.core.status
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.status.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1884
 *         return self.core.status
 * 
 *     @status.setter             # <<<<<<<<<<<<<<
 *     def status(self, value):
 *         self.core.status = value.core
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_6status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_6status_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_6status_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_6status_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  StatusUnion __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1886
 *     @status.setter
 *     def status(self, value):
 *         self.core.status = value.core             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_core); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert__from_py_StatusUnion(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->core.status = __pyx_t_2;

  /* "pylivox.pyx":1884
 *         return self.core.status
 * 
 *     @status.setter             # <<<<<<<<<<<<<<
 *     def status(self, value):
 *         self.core.status = value.core
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.status.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1888
 *         self.core.status = value.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def firmware_version(self):
 *         return self.core.firmware_version  # Can be converted to string if needed
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_16firmware_version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_16firmware_version_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_16firmware_version___get__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_16firmware_version___get__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1890
 *     @property
 *     def firmware_version(self):
 *         return self.core.firmware_version  # Can be converted to string if needed             # <<<<<<<<<<<<<<
 * 
 *     @firmware_version.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromCString(__pyx_v_self->core.firmware_version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1888
 *         self.core.status = value.core
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def firmware_version(self):
 *         return self.core.firmware_version  # Can be converted to string if needed
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.firmware_version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1892
 *         return self.core.firmware_version  # Can be converted to string if needed
 * 
 *     @firmware_version.setter             # <<<<<<<<<<<<<<
 *     def firmware_version(self, value):
 *         self.core.firmware_version = value[:4]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyDeviceInfo_16firmware_version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyDeviceInfo_16firmware_version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_16firmware_version_2__set__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyDeviceInfo_16firmware_version_2__set__(struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  uint8_t __pyx_t_2[4];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1894
 *     @firmware_version.setter
 *     def firmware_version(self, value):
 *         self.core.firmware_version = value[:4]             # <<<<<<<<<<<<<<
 * 
 * # Class to wrap BroadcastDeviceInfo
 */
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_value, 0, 4, NULL, NULL, &__pyx_slice__30, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_t_1, __pyx_t_2, 4) < 0))) __PYX_ERR(0, 1894, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.firmware_version[0]), __pyx_t_2, sizeof(__pyx_v_self->core.firmware_version[0]) * (4));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pylivox.pyx":1892
 *         return self.core.firmware_version  # Can be converted to string if needed
 * 
 *     @firmware_version.setter             # <<<<<<<<<<<<<<
 *     def firmware_version(self, value):
 *         self.core.firmware_version = value[:4]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.firmware_version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceInfo_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceInfo_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyDeviceInfo_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceInfo_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyDeviceInfo_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyDeviceInfo_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyDeviceInfo *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyDeviceInfo_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceInfo *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceInfo.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1903
 *     cdef BroadcastDeviceInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize,             # <<<<<<<<<<<<<<
 *                  uint8_t dev_type=0, uint16_t reserved=0, ip='0'*16):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_broadcast_code = 0;
  uint8_t __pyx_v_dev_type;
  uint16_t __pyx_v_reserved;
  PyObject *__pyx_v_ip = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_dev_type,&__pyx_n_s_reserved,&__pyx_n_s_ip,0};
    values[0] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__31);
    values[3] = __Pyx_Arg_NewRef_VARARGS(((PyObject *)__pyx_kp_u_0000000000000000));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1903, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dev_type);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1903, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reserved);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1903, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ip);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1903, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1903, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_broadcast_code = values[0];
    if (values[1]) {
      __pyx_v_dev_type = __Pyx_PyInt_As_uint8_t(values[1]); if (unlikely((__pyx_v_dev_type == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1904, __pyx_L3_error)
    } else {
      __pyx_v_dev_type = ((uint8_t)0);
    }
    if (values[2]) {
      __pyx_v_reserved = __Pyx_PyInt_As_uint16_t(values[2]); if (unlikely((__pyx_v_reserved == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1904, __pyx_L3_error)
    } else {
      __pyx_v_reserved = ((uint16_t)0);
    }
    __pyx_v_ip = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 1903, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo___init__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self), __pyx_v_broadcast_code, __pyx_v_dev_type, __pyx_v_reserved, __pyx_v_ip);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo___init__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_dev_type, uint16_t __pyx_v_reserved, PyObject *__pyx_v_ip) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  char __pyx_t_6[16];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":1905
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize,
 *                  uint8_t dev_type=0, uint16_t reserved=0, ip='0'*16):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination             # <<<<<<<<<<<<<<
 *         self.core.dev_type = dev_type
 *         self.core.reserved = reserved
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 1905, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1906
 *                  uint8_t dev_type=0, uint16_t reserved=0, ip='0'*16):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 *         self.core.dev_type = dev_type             # <<<<<<<<<<<<<<
 *         self.core.reserved = reserved
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 */
  __pyx_v_self->core.dev_type = __pyx_v_dev_type;

  /* "pylivox.pyx":1907
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 *         self.core.dev_type = dev_type
 *         self.core.reserved = reserved             # <<<<<<<<<<<<<<
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 * 
 */
  __pyx_v_self->core.reserved = __pyx_v_reserved;

  /* "pylivox.pyx":1908
 *         self.core.dev_type = dev_type
 *         self.core.reserved = reserved
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ip, __pyx_n_s_encode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_kp_u_utf_8};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_t_2, 0, 16, NULL, NULL, &__pyx_slice__29, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_3, __pyx_t_6, 16) < 0))) __PYX_ERR(0, 1908, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.ip[0]), __pyx_t_6, sizeof(__pyx_v_self->core.ip[0]) * (16));
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":1903
 *     cdef BroadcastDeviceInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize,             # <<<<<<<<<<<<<<
 *                  uint8_t dev_type=0, uint16_t reserved=0, ip='0'*16):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1910
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1912
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1912, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1910
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1914
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1916
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1916, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 1916, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1914
 *         return self.core.broadcast_code.decode('utf-8')  # Convert bytes to string
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1918
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def dev_type(self):
 *         return self.core.dev_type
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8dev_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8dev_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8dev_type___get__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8dev_type___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1920
 *     @property
 *     def dev_type(self):
 *         return self.core.dev_type             # <<<<<<<<<<<<<<
 * 
 *     @dev_type.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.dev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1918
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def dev_type(self):
 *         return self.core.dev_type
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.dev_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1922
 *         return self.core.dev_type
 * 
 *     @dev_type.setter             # <<<<<<<<<<<<<<
 *     def dev_type(self, value):
 *         self.core.dev_type = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8dev_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8dev_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8dev_type_2__set__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8dev_type_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1924
 *     @dev_type.setter
 *     def dev_type(self, value):
 *         self.core.dev_type = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1924, __pyx_L1_error)
  __pyx_v_self->core.dev_type = __pyx_t_1;

  /* "pylivox.pyx":1922
 *         return self.core.dev_type
 * 
 *     @dev_type.setter             # <<<<<<<<<<<<<<
 *     def dev_type(self, value):
 *         self.core.dev_type = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.dev_type.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1926
 *         self.core.dev_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reserved(self):
 *         return self.core.reserved
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8reserved_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8reserved_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8reserved___get__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8reserved___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1928
 *     @property
 *     def reserved(self):
 *         return self.core.reserved             # <<<<<<<<<<<<<<
 * 
 *     @reserved.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint16_t(__pyx_v_self->core.reserved); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1926
 *         self.core.dev_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def reserved(self):
 *         return self.core.reserved
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.reserved.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1930
 *         return self.core.reserved
 * 
 *     @reserved.setter             # <<<<<<<<<<<<<<
 *     def reserved(self, value):
 *         self.core.reserved = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8reserved_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8reserved_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8reserved_2__set__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_8reserved_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint16_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1932
 *     @reserved.setter
 *     def reserved(self, value):
 *         self.core.reserved = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint16_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint16_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1932, __pyx_L1_error)
  __pyx_v_self->core.reserved = __pyx_t_1;

  /* "pylivox.pyx":1930
 *         return self.core.reserved
 * 
 *     @reserved.setter             # <<<<<<<<<<<<<<
 *     def reserved(self, value):
 *         self.core.reserved = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.reserved.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1934
 *         self.core.reserved = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ip(self):
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_2ip_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_2ip_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2ip___get__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2ip___get__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1936
 *     @property
 *     def ip(self):
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string             # <<<<<<<<<<<<<<
 * 
 *     @ip.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.ip;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1936, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1934
 *         self.core.reserved = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ip(self):
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.ip.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1938
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 * 
 *     @ip.setter             # <<<<<<<<<<<<<<
 *     def ip(self, value):
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_2ip_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_2ip_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2ip_2__set__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2ip_2__set__(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[16];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1940
 *     @ip.setter
 *     def ip(self, value):
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination             # <<<<<<<<<<<<<<
 * 
 * cdef class PyConnectedLidarInfo:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 16, NULL, NULL, &__pyx_slice__29, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 16) < 0))) __PYX_ERR(0, 1940, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.ip[0]), __pyx_t_5, sizeof(__pyx_v_self->core.ip[0]) * (16));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1938
 *         return self.core.ip.decode('utf-8')  # Convert bytes to string
 * 
 *     @ip.setter             # <<<<<<<<<<<<<<
 *     def ip(self, value):
 *         self.core.ip = value.encode('utf-8')[:16]  # Ensure null-termination
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.ip.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_21PyBroadcastDeviceInfo_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_21PyBroadcastDeviceInfo_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_21PyBroadcastDeviceInfo_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyBroadcastDeviceInfo_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyBroadcastDeviceInfo.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1948
 *     cdef ConnectedLidarInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t dev_type=0, version=[0 for _ in range(4)],             # <<<<<<<<<<<<<<
 *             uint8_t slot=0, uint8_t id=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_broadcast_code = 0;
  uint8_t __pyx_v_dev_type;
  PyObject *__pyx_v_version = 0;
  uint8_t __pyx_v_slot;
  uint8_t __pyx_v_id;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_dev_type,&__pyx_n_s_version,&__pyx_n_s_slot,&__pyx_n_s_id,0};
    values[0] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__32);
    values[2] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__33);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1948, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dev_type);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1948, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_version);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1948, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_slot);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1948, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_id);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1948, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1948, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_broadcast_code = values[0];
    if (values[1]) {
      __pyx_v_dev_type = __Pyx_PyInt_As_uint8_t(values[1]); if (unlikely((__pyx_v_dev_type == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1948, __pyx_L3_error)
    } else {
      __pyx_v_dev_type = ((uint8_t)0);
    }
    __pyx_v_version = values[2];
    if (values[3]) {
      __pyx_v_slot = __Pyx_PyInt_As_uint8_t(values[3]); if (unlikely((__pyx_v_slot == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1949, __pyx_L3_error)
    } else {
      __pyx_v_slot = ((uint8_t)0);
    }
    if (values[4]) {
      __pyx_v_id = __Pyx_PyInt_As_uint8_t(values[4]); if (unlikely((__pyx_v_id == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1949, __pyx_L3_error)
    } else {
      __pyx_v_id = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 1948, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo___init__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), __pyx_v_broadcast_code, __pyx_v_dev_type, __pyx_v_version, __pyx_v_slot, __pyx_v_id);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_20PyConnectedLidarInfo___init__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_dev_type, PyObject *__pyx_v_version, uint8_t __pyx_v_slot, uint8_t __pyx_v_id) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  uint8_t __pyx_t_6[4];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":1950
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t dev_type=0, version=[0 for _ in range(4)],
 *             uint8_t slot=0, uint8_t id=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 *         self.core.dev_type = dev_type
 *         self.core.version = version[:4]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 1950, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1951
 *             uint8_t slot=0, uint8_t id=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.dev_type = dev_type             # <<<<<<<<<<<<<<
 *         self.core.version = version[:4]
 *         self.core.slot = slot
 */
  __pyx_v_self->core.dev_type = __pyx_v_dev_type;

  /* "pylivox.pyx":1952
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.dev_type = dev_type
 *         self.core.version = version[:4]             # <<<<<<<<<<<<<<
 *         self.core.slot = slot
 *         self.core.id = id
 */
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_version, 0, 4, NULL, NULL, &__pyx_slice__30, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_t_2, __pyx_t_6, 4) < 0))) __PYX_ERR(0, 1952, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.version[0]), __pyx_t_6, sizeof(__pyx_v_self->core.version[0]) * (4));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1953
 *         self.core.dev_type = dev_type
 *         self.core.version = version[:4]
 *         self.core.slot = slot             # <<<<<<<<<<<<<<
 *         self.core.id = id
 * 
 */
  __pyx_v_self->core.slot = __pyx_v_slot;

  /* "pylivox.pyx":1954
 *         self.core.version = version[:4]
 *         self.core.slot = slot
 *         self.core.id = id             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_v_self->core.id = __pyx_v_id;

  /* "pylivox.pyx":1948
 *     cdef ConnectedLidarInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t dev_type=0, version=[0 for _ in range(4)],             # <<<<<<<<<<<<<<
 *             uint8_t slot=0, uint8_t id=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1956
 *         self.core.id = id
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1958
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1958, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1956
 *         self.core.id = id
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1960
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1962
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 1962, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1960
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1964
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def dev_type(self):
 *         return self.core.dev_type
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_8dev_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_8dev_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_8dev_type___get__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_8dev_type___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1966
 *     @property
 *     def dev_type(self):
 *         return self.core.dev_type             # <<<<<<<<<<<<<<
 * 
 *     @dev_type.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.dev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1964
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def dev_type(self):
 *         return self.core.dev_type
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.dev_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1968
 *         return self.core.dev_type
 * 
 *     @dev_type.setter             # <<<<<<<<<<<<<<
 *     def dev_type(self, value):
 *         self.core.dev_type = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_8dev_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_8dev_type_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_8dev_type_2__set__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_8dev_type_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1970
 *     @dev_type.setter
 *     def dev_type(self, value):
 *         self.core.dev_type = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1970, __pyx_L1_error)
  __pyx_v_self->core.dev_type = __pyx_t_1;

  /* "pylivox.pyx":1968
 *         return self.core.dev_type
 * 
 *     @dev_type.setter             # <<<<<<<<<<<<<<
 *     def dev_type(self, value):
 *         self.core.dev_type = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.dev_type.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1972
 *         self.core.dev_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def version(self):
 *         return self.core.version
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_7version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_7version_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_7version___get__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_7version___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1974
 *     @property
 *     def version(self):
 *         return self.core.version             # <<<<<<<<<<<<<<
 * 
 *     @version.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromCString(__pyx_v_self->core.version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1974, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1972
 *         self.core.dev_type = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def version(self):
 *         return self.core.version
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1976
 *         return self.core.version
 * 
 *     @version.setter             # <<<<<<<<<<<<<<
 *     def version(self, value):
 *         self.core.version = value[:4]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_7version_2__set__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_7version_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  uint8_t __pyx_t_2[4];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":1978
 *     @version.setter
 *     def version(self, value):
 *         self.core.version = value[:4]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_v_value, 0, 4, NULL, NULL, &__pyx_slice__30, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1978, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely((__Pyx_carray_from_py_uint8_t(__pyx_t_1, __pyx_t_2, 4) < 0))) __PYX_ERR(0, 1978, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.version[0]), __pyx_t_2, sizeof(__pyx_v_self->core.version[0]) * (4));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pylivox.pyx":1976
 *         return self.core.version
 * 
 *     @version.setter             # <<<<<<<<<<<<<<
 *     def version(self, value):
 *         self.core.version = value[:4]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1980
 *         self.core.version = value[:4]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def slot(self):
 *         return self.core.slot
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_4slot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_4slot_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_4slot___get__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_4slot___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1982
 *     @property
 *     def slot(self):
 *         return self.core.slot             # <<<<<<<<<<<<<<
 * 
 *     @slot.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.slot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1980
 *         self.core.version = value[:4]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def slot(self):
 *         return self.core.slot
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.slot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1984
 *         return self.core.slot
 * 
 *     @slot.setter             # <<<<<<<<<<<<<<
 *     def slot(self, value):
 *         self.core.slot = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_4slot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_4slot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_4slot_2__set__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_4slot_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1986
 *     @slot.setter
 *     def slot(self, value):
 *         self.core.slot = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1986, __pyx_L1_error)
  __pyx_v_self->core.slot = __pyx_t_1;

  /* "pylivox.pyx":1984
 *         return self.core.slot
 * 
 *     @slot.setter             # <<<<<<<<<<<<<<
 *     def slot(self, value):
 *         self.core.slot = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.slot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":1988
 *         self.core.slot = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         return self.core.id
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_2id_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_2id_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_2id___get__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_2id___get__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":1990
 *     @property
 *     def id(self):
 *         return self.core.id             # <<<<<<<<<<<<<<
 * 
 *     @id.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":1988
 *         self.core.slot = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def id(self):
 *         return self.core.id
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.id.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":1992
 *         return self.core.id
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, value):
 *         self.core.id = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_20PyConnectedLidarInfo_2id_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_2id_2__set__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_20PyConnectedLidarInfo_2id_2__set__(struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":1994
 *     @id.setter
 *     def id(self, value):
 *         self.core.id = value             # <<<<<<<<<<<<<<
 * 
 * cdef class PyLidarModeRequestItem:
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1994, __pyx_L1_error)
  __pyx_v_self->core.id = __pyx_t_1;

  /* "pylivox.pyx":1992
 *         return self.core.id
 * 
 *     @id.setter             # <<<<<<<<<<<<<<
 *     def id(self, value):
 *         self.core.id = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.id.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_20PyConnectedLidarInfo_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_20PyConnectedLidarInfo_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_20PyConnectedLidarInfo_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_20PyConnectedLidarInfo_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_20PyConnectedLidarInfo_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_20PyConnectedLidarInfo_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_20PyConnectedLidarInfo_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyConnectedLidarInfo *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyConnectedLidarInfo.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2002
 *     cdef LidarModeRequestItem core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t state=0):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.state = state
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_22PyLidarModeRequestItem_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_22PyLidarModeRequestItem_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_broadcast_code = 0;
  uint8_t __pyx_v_state;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_state,0};
    values[0] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__34);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2002, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_state);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2002, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 2002, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_broadcast_code = values[0];
    if (values[1]) {
      __pyx_v_state = __Pyx_PyInt_As_uint8_t(values[1]); if (unlikely((__pyx_v_state == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2002, __pyx_L3_error)
    } else {
      __pyx_v_state = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2002, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem___init__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self), __pyx_v_broadcast_code, __pyx_v_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_22PyLidarModeRequestItem___init__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_state) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":2003
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t state=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 *         self.core.state = state
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2003, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2003, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2004
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t state=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.state = state             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_v_self->core.state = __pyx_v_state;

  /* "pylivox.pyx":2002
 *     cdef LidarModeRequestItem core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t state=0):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.state = state
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2006
 *         self.core.state = state
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2008
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2008, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2006
 *         self.core.state = state
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2010
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_22PyLidarModeRequestItem_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_22PyLidarModeRequestItem_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_22PyLidarModeRequestItem_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":2012
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2012, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2010
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2014
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def state(self):
 *         return self.core.state
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_5state_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_5state_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem_5state___get__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_5state___get__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2016
 *     @property
 *     def state(self):
 *         return self.core.state             # <<<<<<<<<<<<<<
 * 
 *     @state.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2016, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2014
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def state(self):
 *         return self.core.state
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.state.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2018
 *         return self.core.state
 * 
 *     @state.setter             # <<<<<<<<<<<<<<
 *     def state(self, value):
 *         self.core.state = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_22PyLidarModeRequestItem_5state_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_22PyLidarModeRequestItem_5state_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem_5state_2__set__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_22PyLidarModeRequestItem_5state_2__set__(struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":2020
 *     @state.setter
 *     def state(self, value):
 *         self.core.state = value             # <<<<<<<<<<<<<<
 * 
 * cdef class PyReturnCode:
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2020, __pyx_L1_error)
  __pyx_v_self->core.state = __pyx_t_1;

  /* "pylivox.pyx":2018
 *         return self.core.state
 * 
 *     @state.setter             # <<<<<<<<<<<<<<
 *     def state(self, value):
 *         self.core.state = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.state.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyLidarModeRequestItem_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyLidarModeRequestItem_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_22PyLidarModeRequestItem_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyLidarModeRequestItem_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_22PyLidarModeRequestItem_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_22PyLidarModeRequestItem_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_22PyLidarModeRequestItem_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyLidarModeRequestItem *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyLidarModeRequestItem.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2027
 *     cdef ReturnCode core
 * 
 *     def __init__(self, uint8_t ret_code=0, broadcast_code='0'*kBroadcastCodeSize):             # <<<<<<<<<<<<<<
 *         self.core.ret_code = ret_code
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyReturnCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_12PyReturnCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  uint8_t __pyx_v_ret_code;
  PyObject *__pyx_v_broadcast_code = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ret_code,&__pyx_n_s_broadcast_code,0};
    values[1] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__35);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ret_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2027, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2027, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 2027, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_ret_code = __Pyx_PyInt_As_uint8_t(values[0]); if (unlikely((__pyx_v_ret_code == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2027, __pyx_L3_error)
    } else {
      __pyx_v_ret_code = ((uint8_t)0);
    }
    __pyx_v_broadcast_code = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2027, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyReturnCode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode___init__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self), __pyx_v_ret_code, __pyx_v_broadcast_code);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyReturnCode___init__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, uint8_t __pyx_v_ret_code, PyObject *__pyx_v_broadcast_code) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":2028
 * 
 *     def __init__(self, uint8_t ret_code=0, broadcast_code='0'*kBroadcastCodeSize):
 *         self.core.ret_code = ret_code             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 */
  __pyx_v_self->core.ret_code = __pyx_v_ret_code;

  /* "pylivox.pyx":2029
 *     def __init__(self, uint8_t ret_code=0, broadcast_code='0'*kBroadcastCodeSize):
 *         self.core.ret_code = ret_code
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2029, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2027
 *     cdef ReturnCode core
 * 
 *     def __init__(self, uint8_t ret_code=0, broadcast_code='0'*kBroadcastCodeSize):             # <<<<<<<<<<<<<<
 *         self.core.ret_code = ret_code
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyReturnCode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2031
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ret_code(self):
 *         return self.core.ret_code
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_8ret_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_8ret_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode_8ret_code___get__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyReturnCode_8ret_code___get__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2033
 *     @property
 *     def ret_code(self):
 *         return self.core.ret_code             # <<<<<<<<<<<<<<
 * 
 *     @ret_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.ret_code); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2033, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2031
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def ret_code(self):
 *         return self.core.ret_code
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyReturnCode.ret_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2035
 *         return self.core.ret_code
 * 
 *     @ret_code.setter             # <<<<<<<<<<<<<<
 *     def ret_code(self, value):
 *         self.core.ret_code = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyReturnCode_8ret_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyReturnCode_8ret_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode_8ret_code_2__set__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyReturnCode_8ret_code_2__set__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":2037
 *     @ret_code.setter
 *     def ret_code(self, value):
 *         self.core.ret_code = value             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2037, __pyx_L1_error)
  __pyx_v_self->core.ret_code = __pyx_t_1;

  /* "pylivox.pyx":2035
 *         return self.core.ret_code
 * 
 *     @ret_code.setter             # <<<<<<<<<<<<<<
 *     def ret_code(self, value):
 *         self.core.ret_code = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyReturnCode.ret_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "pylivox.pyx":2039
 *         self.core.ret_code = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyReturnCode_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2041
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2041, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2039
 *         self.core.ret_code = value
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyReturnCode.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2043
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_12PyReturnCode_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_12PyReturnCode_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_12PyReturnCode_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":2045
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 * cdef class PyDeviceBroadcastCode:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2045, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2043
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyReturnCode.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyReturnCode_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyReturnCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyReturnCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyReturnCode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_12PyReturnCode_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyReturnCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_12PyReturnCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyReturnCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_12PyReturnCode_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyReturnCode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_12PyReturnCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyReturnCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyReturnCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2052
 *     cdef DeviceBroadcastCode core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyDeviceBroadcastCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_21PyDeviceBroadcastCode_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_broadcast_code = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,0};
    values[0] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__36);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2052, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 2052, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_broadcast_code = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 2052, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_21PyDeviceBroadcastCode___init__(((struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)__pyx_v_self), __pyx_v_broadcast_code);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyDeviceBroadcastCode___init__(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self, PyObject *__pyx_v_broadcast_code) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":2053
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2053, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2052
 *     cdef DeviceBroadcastCode core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2055
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyDeviceBroadcastCode_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyDeviceBroadcastCode_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2057
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2057, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2055
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2059
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":2061
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 * cdef class PyRainFogSuppressRequestItem:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2061, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2061, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2059
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyDeviceBroadcastCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_21PyDeviceBroadcastCode_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyDeviceBroadcastCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_21PyDeviceBroadcastCode_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_21PyDeviceBroadcastCode_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyDeviceBroadcastCode_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_21PyDeviceBroadcastCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_21PyDeviceBroadcastCode_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyDeviceBroadcastCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_21PyDeviceBroadcastCode_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_21PyDeviceBroadcastCode_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_21PyDeviceBroadcastCode_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyDeviceBroadcastCode.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2068
 *     cdef RainFogSuppressRequestItem core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t feature=0):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.feature = feature
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_broadcast_code = 0;
  uint8_t __pyx_v_feature;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_broadcast_code,&__pyx_n_s_feature,0};
    values[0] = __Pyx_Arg_NewRef_VARARGS(__pyx_k__37);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_broadcast_code);
          if (value) { values[0] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2068, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_feature);
          if (value) { values[1] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2068, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 2068, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_broadcast_code = values[0];
    if (values[1]) {
      __pyx_v_feature = __Pyx_PyInt_As_uint8_t(values[1]); if (unlikely((__pyx_v_feature == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2068, __pyx_L3_error)
    } else {
      __pyx_v_feature = ((uint8_t)0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 2068, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem___init__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self), __pyx_v_broadcast_code, __pyx_v_feature);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem___init__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, PyObject *__pyx_v_broadcast_code, uint8_t __pyx_v_feature) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "pylivox.pyx":2069
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t feature=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 *         self.core.feature = feature
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_broadcast_code, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2069, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2069, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2070
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t feature=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.feature = feature             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_v_self->core.feature = __pyx_v_feature;

  /* "pylivox.pyx":2068
 *     cdef RainFogSuppressRequestItem core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t feature=0):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.feature = feature
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2072
 *         self.core.feature = feature
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code___get__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code___get__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2074
 *     @property
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')             # <<<<<<<<<<<<<<
 * 
 *     @broadcast_code.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_self->core.broadcast_code;
  __pyx_t_2 = __Pyx_ssize_strlen(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2074, __pyx_L1_error)
  __pyx_t_3 = __Pyx_decode_c_string(__pyx_t_1, 0, __pyx_t_2, NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2072
 *         self.core.feature = feature
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def broadcast_code(self):
 *         return self.core.broadcast_code.decode('utf-8')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.broadcast_code.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2076
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_2__set__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_2__set__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  unsigned int __pyx_t_4;
  char __pyx_t_5[15];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 1);

  /* "pylivox.pyx":2078
 *     @broadcast_code.setter
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_value, __pyx_n_s_encode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_utf_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2078, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_t_1, 0, 0, NULL, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely((__Pyx_carray_from_py_char(__pyx_t_2, __pyx_t_5, 15) < 0))) __PYX_ERR(0, 2078, __pyx_L1_error)
  memcpy(&(__pyx_v_self->core.broadcast_code[0]), __pyx_t_5, sizeof(__pyx_v_self->core.broadcast_code[0]) * (15));
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2076
 *         return self.core.broadcast_code.decode('utf-8')
 * 
 *     @broadcast_code.setter             # <<<<<<<<<<<<<<
 *     def broadcast_code(self, value):
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.broadcast_code.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2080
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def feature(self):
 *         return self.core.feature
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_7feature_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_7feature_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_7feature___get__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_7feature___get__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 1);

  /* "pylivox.pyx":2082
 *     @property
 *     def feature(self):
 *         return self.core.feature             # <<<<<<<<<<<<<<
 * 
 *     @feature.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_uint8_t(__pyx_v_self->core.feature); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "pylivox.pyx":2080
 *         self.core.broadcast_code = value.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def feature(self):
 *         return self.core.feature
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.feature.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pylivox.pyx":2084
 *         return self.core.feature
 * 
 *     @feature.setter             # <<<<<<<<<<<<<<
 *     def feature(self, value):
 *         self.core.feature = value
 */

/* Python wrapper */
static int __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_7feature_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_7feature_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_7feature_2__set__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_7feature_2__set__(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  uint8_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "pylivox.pyx":2086
 *     @feature.setter
 *     def feature(self, value):
 *         self.core.feature = value             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyInt_As_uint8_t(__pyx_v_value); if (unlikely((__pyx_t_1 == ((uint8_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2086, __pyx_L1_error)
  __pyx_v_self->core.feature = __pyx_t_1;

  /* "pylivox.pyx":2084
 *         return self.core.feature
 * 
 *     @feature.setter             # <<<<<<<<<<<<<<
 *     def feature(self, value):
 *         self.core.feature = value
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.feature.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_28PyRainFogSuppressRequestItem_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_2__reduce_cython__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_28PyRainFogSuppressRequestItem_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_4__setstate_cython__(((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_28PyRainFogSuppressRequestItem_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_Pickling_of_struct_members_such, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("pylivox.PyRainFogSuppressRequestItem.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyDeviceType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_31__pyx_unpickle_PyDeviceType(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_31__pyx_unpickle_PyDeviceType = {"__pyx_unpickle_PyDeviceType", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_31__pyx_unpickle_PyDeviceType, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_31__pyx_unpickle_PyDeviceType(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyDeviceType (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyDeviceType", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyDeviceType", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyDeviceType") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyDeviceType", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyDeviceType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_30__pyx_unpickle_PyDeviceType(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_30__pyx_unpickle_PyDeviceType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyDeviceType", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceType.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyDeviceType.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceType.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyDeviceType), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceType.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyDeviceType.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyDeviceType__set_state(((struct __pyx_obj_7pylivox_PyDeviceType *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceType.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyDeviceType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyDeviceType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyDeviceType__set_state(struct __pyx_obj_7pylivox_PyDeviceType *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyDeviceType__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyDeviceType__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarState(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_33__pyx_unpickle_PyLidarState(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_33__pyx_unpickle_PyLidarState = {"__pyx_unpickle_PyLidarState", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_33__pyx_unpickle_PyLidarState, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_33__pyx_unpickle_PyLidarState(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarState (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarState", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarState", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyLidarState") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarState", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_32__pyx_unpickle_PyLidarState(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_32__pyx_unpickle_PyLidarState(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarState", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarState.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyLidarState.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarState.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyLidarState), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarState.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyLidarState.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarState__set_state(((struct __pyx_obj_7pylivox_PyLidarState *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarState.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarState(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarState__set_state(struct __pyx_obj_7pylivox_PyLidarState *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarState__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarState__set_state(<PyLidarState> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarState__set_state(PyLidarState __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarState__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_35__pyx_unpickle_PyLidarMode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_35__pyx_unpickle_PyLidarMode = {"__pyx_unpickle_PyLidarMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_35__pyx_unpickle_PyLidarMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_35__pyx_unpickle_PyLidarMode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarMode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarMode", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarMode", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyLidarMode") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarMode", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_34__pyx_unpickle_PyLidarMode(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_34__pyx_unpickle_PyLidarMode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarMode", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarMode.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyLidarMode.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarMode.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyLidarMode), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarMode.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyLidarMode.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarMode__set_state(((struct __pyx_obj_7pylivox_PyLidarMode *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarMode.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarMode__set_state(struct __pyx_obj_7pylivox_PyLidarMode *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarMode__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarMode__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarFeature(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_37__pyx_unpickle_PyLidarFeature(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_37__pyx_unpickle_PyLidarFeature = {"__pyx_unpickle_PyLidarFeature", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_37__pyx_unpickle_PyLidarFeature, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_37__pyx_unpickle_PyLidarFeature(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarFeature (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarFeature", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarFeature", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyLidarFeature") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarFeature", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarFeature", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_36__pyx_unpickle_PyLidarFeature(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_36__pyx_unpickle_PyLidarFeature(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarFeature", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarFeature.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyLidarFeature.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarFeature.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarFeature.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyLidarFeature.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarFeature__set_state(((struct __pyx_obj_7pylivox_PyLidarFeature *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarFeature.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarFeature(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarFeature", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarFeature__set_state(struct __pyx_obj_7pylivox_PyLidarFeature *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarFeature__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarFeature__set_state(<PyLidarFeature> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarFeature__set_state(PyLidarFeature __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarFeature__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarIpMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_39__pyx_unpickle_PyLidarIpMode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_39__pyx_unpickle_PyLidarIpMode = {"__pyx_unpickle_PyLidarIpMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_39__pyx_unpickle_PyLidarIpMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_39__pyx_unpickle_PyLidarIpMode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarIpMode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarIpMode", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarIpMode", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyLidarIpMode") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarIpMode", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarIpMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_38__pyx_unpickle_PyLidarIpMode(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_38__pyx_unpickle_PyLidarIpMode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarIpMode", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarIpMode.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyLidarIpMode.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarIpMode.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarIpMode.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyLidarIpMode.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarIpMode__set_state(((struct __pyx_obj_7pylivox_PyLidarIpMode *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarIpMode.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarIpMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarIpMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarIpMode__set_state(struct __pyx_obj_7pylivox_PyLidarIpMode *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarIpMode__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarIpMode__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarScanPattern(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_41__pyx_unpickle_PyLidarScanPattern(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_41__pyx_unpickle_PyLidarScanPattern = {"__pyx_unpickle_PyLidarScanPattern", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_41__pyx_unpickle_PyLidarScanPattern, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_41__pyx_unpickle_PyLidarScanPattern(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarScanPattern (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarScanPattern", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarScanPattern", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyLidarScanPattern") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLidarScanPattern", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarScanPattern", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_40__pyx_unpickle_PyLidarScanPattern(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_40__pyx_unpickle_PyLidarScanPattern(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarScanPattern", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarScanPattern.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyLidarScanPattern.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarScanPattern.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarScanPattern.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyLidarScanPattern.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLidarScanPattern__set_state(((struct __pyx_obj_7pylivox_PyLidarScanPattern *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLidarScanPattern.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarScanPattern(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarScanPattern", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLidarScanPattern__set_state(struct __pyx_obj_7pylivox_PyLidarScanPattern *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLidarScanPattern__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarScanPattern__set_state(<PyLidarScanPattern> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarScanPattern__set_state(PyLidarScanPattern __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLidarScanPattern__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyLivoxStatus(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_43__pyx_unpickle_PyLivoxStatus(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_43__pyx_unpickle_PyLivoxStatus = {"__pyx_unpickle_PyLivoxStatus", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_43__pyx_unpickle_PyLivoxStatus, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_43__pyx_unpickle_PyLivoxStatus(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLivoxStatus (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLivoxStatus", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLivoxStatus", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyLivoxStatus") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyLivoxStatus", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLivoxStatus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_42__pyx_unpickle_PyLivoxStatus(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_42__pyx_unpickle_PyLivoxStatus(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLivoxStatus", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLivoxStatus.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyLivoxStatus.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLivoxStatus.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLivoxStatus.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyLivoxStatus.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyLivoxStatus__set_state(((struct __pyx_obj_7pylivox_PyLivoxStatus *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyLivoxStatus.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLivoxStatus(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLivoxStatus", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyLivoxStatus__set_state(struct __pyx_obj_7pylivox_PyLivoxStatus *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyLivoxStatus__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyLivoxStatus__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyDeviceEvent(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_45__pyx_unpickle_PyDeviceEvent(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_45__pyx_unpickle_PyDeviceEvent = {"__pyx_unpickle_PyDeviceEvent", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_45__pyx_unpickle_PyDeviceEvent, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_45__pyx_unpickle_PyDeviceEvent(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyDeviceEvent (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyDeviceEvent", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyDeviceEvent", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyDeviceEvent") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyDeviceEvent", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyDeviceEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_44__pyx_unpickle_PyDeviceEvent(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_44__pyx_unpickle_PyDeviceEvent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyDeviceEvent", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceEvent.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyDeviceEvent.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceEvent.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceEvent.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyDeviceEvent.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyDeviceEvent__set_state(((struct __pyx_obj_7pylivox_PyDeviceEvent *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyDeviceEvent.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyDeviceEvent(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyDeviceEvent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyDeviceEvent__set_state(struct __pyx_obj_7pylivox_PyDeviceEvent *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyDeviceEvent__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyDeviceEvent__set_state(<PyDeviceEvent> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceEvent__set_state(PyDeviceEvent __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyDeviceEvent__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyTimestampType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_47__pyx_unpickle_PyTimestampType(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_47__pyx_unpickle_PyTimestampType = {"__pyx_unpickle_PyTimestampType", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_47__pyx_unpickle_PyTimestampType, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_47__pyx_unpickle_PyTimestampType(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyTimestampType (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyTimestampType", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyTimestampType", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyTimestampType") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyTimestampType", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyTimestampType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_46__pyx_unpickle_PyTimestampType(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_46__pyx_unpickle_PyTimestampType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyTimestampType", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyTimestampType.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyTimestampType.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyTimestampType.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyTimestampType), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyTimestampType.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyTimestampType.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyTimestampType__set_state(((struct __pyx_obj_7pylivox_PyTimestampType *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyTimestampType.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyTimestampType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyTimestampType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyTimestampType__set_state(struct __pyx_obj_7pylivox_PyTimestampType *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyTimestampType__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyTimestampType__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyPointDataType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_49__pyx_unpickle_PyPointDataType(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_49__pyx_unpickle_PyPointDataType = {"__pyx_unpickle_PyPointDataType", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_49__pyx_unpickle_PyPointDataType, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_49__pyx_unpickle_PyPointDataType(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyPointDataType (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyPointDataType", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyPointDataType", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyPointDataType") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyPointDataType", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyPointDataType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_48__pyx_unpickle_PyPointDataType(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_48__pyx_unpickle_PyPointDataType(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyPointDataType", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointDataType.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyPointDataType.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointDataType.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyPointDataType), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointDataType.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyPointDataType.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyPointDataType__set_state(((struct __pyx_obj_7pylivox_PyPointDataType *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointDataType.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyPointDataType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyPointDataType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyPointDataType__set_state(struct __pyx_obj_7pylivox_PyPointDataType *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyPointDataType__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyPointDataType__set_state(<PyPointDataType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointDataType__set_state(PyPointDataType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyPointDataType__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyPointCloudReturnMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_51__pyx_unpickle_PyPointCloudReturnMode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_51__pyx_unpickle_PyPointCloudReturnMode = {"__pyx_unpickle_PyPointCloudReturnMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_51__pyx_unpickle_PyPointCloudReturnMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_51__pyx_unpickle_PyPointCloudReturnMode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyPointCloudReturnMode (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyPointCloudReturnMode", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyPointCloudReturnMode", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyPointCloudReturnMode") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyPointCloudReturnMode", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyPointCloudReturnMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_50__pyx_unpickle_PyPointCloudReturnMode(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_50__pyx_unpickle_PyPointCloudReturnMode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyPointCloudReturnMode", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointCloudReturnMode.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyPointCloudReturnMode.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointCloudReturnMode.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointCloudReturnMode.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyPointCloudReturnMode.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyPointCloudReturnMode__set_state(((struct __pyx_obj_7pylivox_PyPointCloudReturnMode *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyPointCloudReturnMode.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyPointCloudReturnMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyPointCloudReturnMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyPointCloudReturnMode__set_state(struct __pyx_obj_7pylivox_PyPointCloudReturnMode *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyPointCloudReturnMode__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyPointCloudReturnMode__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_PyImuFreq(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7pylivox_53__pyx_unpickle_PyImuFreq(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7pylivox_53__pyx_unpickle_PyImuFreq = {"__pyx_unpickle_PyImuFreq", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_53__pyx_unpickle_PyImuFreq, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7pylivox_53__pyx_unpickle_PyImuFreq(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyImuFreq (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyImuFreq", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyImuFreq", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_PyImuFreq") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_PyImuFreq", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyImuFreq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7pylivox_52__pyx_unpickle_PyImuFreq(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7pylivox_52__pyx_unpickle_PyImuFreq(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  unsigned int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyImuFreq", 1);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__38, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyImuFreq.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError)) __PYX_ERR(1, 5, __pyx_L1_error);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = PyImuFreq.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyImuFreq.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7pylivox_PyImuFreq), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyImuFreq.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = PyImuFreq.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7pylivox___pyx_unpickle_PyImuFreq__set_state(((struct __pyx_obj_7pylivox_PyImuFreq *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 *     __pyx_result = PyImuFreq.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyImuFreq(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyImuFreq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_7pylivox___pyx_unpickle_PyImuFreq__set_state(struct __pyx_obj_7pylivox_PyImuFreq *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  unsigned int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_PyImuFreq__set_state", 1);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 > 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __pyx_t_1 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 13, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyImuFreq__set_state(<PyImuFreq> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyImuFreq__set_state(PyImuFreq __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pylivox.__pyx_unpickle_PyImuFreq__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_7pylivox_PyDeviceType(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyDeviceType(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyDeviceType) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyDeviceType[] = {
  {"DeviceTypeHub", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_1DeviceTypeHub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"DeviceTypeLidarMid40", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_3DeviceTypeLidarMid40, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"DeviceTypeLidarTele", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_5DeviceTypeLidarTele, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"DeviceTypeLidarHorizon", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_7DeviceTypeLidarHorizon, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"DeviceTypeLidarMid70", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_9DeviceTypeLidarMid70, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"DeviceTypeLidarAvia", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_11DeviceTypeLidarAvia, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceType_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyDeviceType_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyDeviceType},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Device type.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyDeviceType},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyDeviceType},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyDeviceType_spec = {
  "pylivox.PyDeviceType",
  sizeof(struct __pyx_obj_7pylivox_PyDeviceType),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyDeviceType_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyDeviceType = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyDeviceType", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyDeviceType), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyDeviceType, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Device type.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyDeviceType, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyDeviceType, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarState(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarState(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarState) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarState[] = {
  {"LidarStateInit", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_1LidarStateInit, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarStateNormal", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_3LidarStateNormal, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarStatePowerSaving", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_5LidarStatePowerSaving, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarStateStandBy", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_7LidarStateStandBy, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarStateError", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_9LidarStateError, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarStateUnknown", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_11LidarStateUnknown, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLidarState_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarState_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarState},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Lidar state.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarState},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarState},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarState_spec = {
  "pylivox.PyLidarState",
  sizeof(struct __pyx_obj_7pylivox_PyLidarState),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarState_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarState = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarState", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarState, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Lidar state.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarMode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarMode(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarMode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarMode[] = {
  {"LidarModeNormal", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_1LidarModeNormal, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarModePowerSaving", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_3LidarModePowerSaving, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarModeStandby", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_5LidarModeStandby, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_11PyLidarMode_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarMode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarMode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Lidar mode.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarMode},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarMode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarMode_spec = {
  "pylivox.PyLidarMode",
  sizeof(struct __pyx_obj_7pylivox_PyLidarMode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarMode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarMode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarMode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarMode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarMode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Lidar mode.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarMode, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarMode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarFeature(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarFeature(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarFeature) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarFeature[] = {
  {"LidarFeatureNone", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_1LidarFeatureNone, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarFeatureRainFog", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_3LidarFeatureRainFog, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyLidarFeature_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarFeature_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarFeature},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Lidar feature.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarFeature},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarFeature},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarFeature_spec = {
  "pylivox.PyLidarFeature",
  sizeof(struct __pyx_obj_7pylivox_PyLidarFeature),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarFeature_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarFeature = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarFeature", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarFeature), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarFeature, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Lidar feature.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarFeature, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarFeature, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarIpMode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarIpMode(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarIpMode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarIpMode[] = {
  {"LidarDynamicIpMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_1LidarDynamicIpMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"LidarStaticIpMode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_3LidarStaticIpMode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLidarIpMode_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarIpMode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarIpMode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Lidar IP mode.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarIpMode},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarIpMode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarIpMode_spec = {
  "pylivox.PyLidarIpMode",
  sizeof(struct __pyx_obj_7pylivox_PyLidarIpMode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarIpMode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarIpMode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarIpMode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarIpMode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarIpMode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Lidar IP mode.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarIpMode, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarIpMode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarScanPattern(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarScanPattern(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarScanPattern) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarScanPattern[] = {
  {"NoneRepetitiveScanPattern", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_1NoneRepetitiveScanPattern, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"RepetitiveScanPattern", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_3RepetitiveScanPattern, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_18PyLidarScanPattern_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarScanPattern_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarScanPattern},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Lidar Scan Pattern.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarScanPattern},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarScanPattern},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarScanPattern_spec = {
  "pylivox.PyLidarScanPattern",
  sizeof(struct __pyx_obj_7pylivox_PyLidarScanPattern),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarScanPattern_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarScanPattern = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarScanPattern", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarScanPattern), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarScanPattern, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Lidar Scan Pattern.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarScanPattern, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarScanPattern, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxStatus(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxStatus(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxStatus) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxStatus[] = {
  {"StatusSendFailed", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_1StatusSendFailed, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusHandlerImplNotExist", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_3StatusHandlerImplNotExist, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusInvalidHandle", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_5StatusInvalidHandle, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusChannelNotExist", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_7StatusChannelNotExist, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusNotEnoughMemory", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_9StatusNotEnoughMemory, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusTimeout", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_11StatusTimeout, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusNotSupported", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_13StatusNotSupported, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusNotConnected", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_15StatusNotConnected, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusFailure", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_17StatusFailure, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"StatusSuccess", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_19StatusSuccess, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_21__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyLivoxStatus_23__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxStatus_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxStatus},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Function return value definition.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxStatus},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxStatus},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxStatus_spec = {
  "pylivox.PyLivoxStatus",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxStatus),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxStatus_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxStatus = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxStatus", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxStatus), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxStatus, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Function return value definition.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxStatus, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxStatus, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyDeviceEvent(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyDeviceEvent(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyDeviceEvent) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyDeviceEvent[] = {
  {"EventConnect", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_1EventConnect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"EventDisconnect", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_3EventDisconnect, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"EventStateChange", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_5EventStateChange, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"EventHubConnectionChange", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_7EventHubConnectionChange, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyDeviceEvent_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyDeviceEvent_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyDeviceEvent},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Device update type, indicating the change of device connection or working state.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyDeviceEvent},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyDeviceEvent},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyDeviceEvent_spec = {
  "pylivox.PyDeviceEvent",
  sizeof(struct __pyx_obj_7pylivox_PyDeviceEvent),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyDeviceEvent_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyDeviceEvent = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyDeviceEvent", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyDeviceEvent), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyDeviceEvent, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Device update type, indicating the change of device connection or working state.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyDeviceEvent, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyDeviceEvent, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyTimestampType(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyTimestampType(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyTimestampType) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyTimestampType[] = {
  {"TimestampTypeNoSync", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_1TimestampTypeNoSync, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"TimestampTypePtp", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_3TimestampTypePtp, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"TimestampTypeRsvd", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_5TimestampTypeRsvd, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"TimestampTypePpsGps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_7TimestampTypePpsGps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"TimestampTypePps", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_9TimestampTypePps, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"TimestampTypeUnknown", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_11TimestampTypeUnknown, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyTimestampType_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyTimestampType_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyTimestampType},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Timestamp sync mode define.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyTimestampType},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyTimestampType},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyTimestampType_spec = {
  "pylivox.PyTimestampType",
  sizeof(struct __pyx_obj_7pylivox_PyTimestampType),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyTimestampType_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyTimestampType = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyTimestampType", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyTimestampType), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyTimestampType, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Timestamp sync mode define.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyTimestampType, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyTimestampType, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyPointDataType(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyPointDataType(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyPointDataType) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyPointDataType[] = {
  {"PointDataTypeCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_1PointDataTypeCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_3PointDataTypeSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeExtendCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_5PointDataTypeExtendCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeExtendSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_7PointDataTypeExtendSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeDualExtendCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_9PointDataTypeDualExtendCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeDualExtendSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_11PointDataTypeDualExtendSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeImu", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_13PointDataTypeImu, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeTripleExtendCartesian", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_15PointDataTypeTripleExtendCartesian, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeTripleExtendSpherical", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_17PointDataTypeTripleExtendSpherical, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointDataTypeMax", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_19PointDataTypeMax, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_21__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyPointDataType_23__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyPointDataType_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyPointDataType},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Point data type.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyPointDataType},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyPointDataType},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyPointDataType_spec = {
  "pylivox.PyPointDataType",
  sizeof(struct __pyx_obj_7pylivox_PyPointDataType),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyPointDataType_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyPointDataType = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyPointDataType", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyPointDataType), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyPointDataType, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Point data type.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyPointDataType, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyPointDataType, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyPointCloudReturnMode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyPointCloudReturnMode(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyPointCloudReturnMode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyPointCloudReturnMode[] = {
  {"PointCloudReturnFirst", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_1PointCloudReturnFirst, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointCloudReturnStrongest", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_3PointCloudReturnStrongest, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointCloudReturnDual", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_5PointCloudReturnDual, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"PointCloudReturnTriple", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_7PointCloudReturnTriple, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyPointCloudReturnMode_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyPointCloudReturnMode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyPointCloudReturnMode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Point cloud return mode.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyPointCloudReturnMode},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyPointCloudReturnMode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyPointCloudReturnMode_spec = {
  "pylivox.PyPointCloudReturnMode",
  sizeof(struct __pyx_obj_7pylivox_PyPointCloudReturnMode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyPointCloudReturnMode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyPointCloudReturnMode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyPointCloudReturnMode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyPointCloudReturnMode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyPointCloudReturnMode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Point cloud return mode.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyPointCloudReturnMode, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyPointCloudReturnMode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyImuFreq(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyImuFreq(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyImuFreq) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyMethodDef __pyx_methods_7pylivox_PyImuFreq[] = {
  {"ImuFreq0Hz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_1ImuFreq0Hz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"ImuFreq200Hz", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_3ImuFreq200Hz, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_9PyImuFreq_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyImuFreq_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyImuFreq},
  {Py_tp_doc, (void *)PyDoc_STR("\n    IMU push frequency.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyImuFreq},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyImuFreq},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyImuFreq_spec = {
  "pylivox.PyImuFreq",
  sizeof(struct __pyx_obj_7pylivox_PyImuFreq),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyImuFreq_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyImuFreq = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyImuFreq", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyImuFreq), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyImuFreq, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    IMU push frequency.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyImuFreq, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyImuFreq, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxSdkVersion(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxSdkVersion *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)o);
  new((void*)&(p->core)) LivoxSdkVersion();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxSdkVersion(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxSdkVersion *p = (struct __pyx_obj_7pylivox_PyLivoxSdkVersion *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxSdkVersion) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSdkVersion_major(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSdkVersion_5major_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSdkVersion_major(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSdkVersion_5major_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSdkVersion_minor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSdkVersion_5minor_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSdkVersion_minor(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSdkVersion_5minor_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSdkVersion_patch(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSdkVersion_5patch_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSdkVersion_patch(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSdkVersion_5patch_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxSdkVersion[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSdkVersion_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSdkVersion_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxSdkVersion[] = {
  {(char *)"major", __pyx_getprop_7pylivox_17PyLivoxSdkVersion_major, __pyx_setprop_7pylivox_17PyLivoxSdkVersion_major, (char *)0, 0},
  {(char *)"minor", __pyx_getprop_7pylivox_17PyLivoxSdkVersion_minor, __pyx_setprop_7pylivox_17PyLivoxSdkVersion_minor, (char *)0, 0},
  {(char *)"patch", __pyx_getprop_7pylivox_17PyLivoxSdkVersion_patch, __pyx_setprop_7pylivox_17PyLivoxSdkVersion_patch, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxSdkVersion_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxSdkVersion},
  {Py_tp_doc, (void *)PyDoc_STR("\n    The numeric version information struct.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxSdkVersion},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxSdkVersion},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_17PyLivoxSdkVersion_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxSdkVersion},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxSdkVersion_spec = {
  "pylivox.PyLivoxSdkVersion",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxSdkVersion),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxSdkVersion_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxSdkVersion = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxSdkVersion", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxSdkVersion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxSdkVersion, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The numeric version information struct.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxSdkVersion, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxSdkVersion, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_17PyLivoxSdkVersion_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxSdkVersion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxRawPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxRawPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxRawPoint *)o);
  new((void*)&(p->core)) LivoxRawPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxRawPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxRawPoint *p = (struct __pyx_obj_7pylivox_PyLivoxRawPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxRawPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxRawPoint_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxRawPoint_1x_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxRawPoint_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxRawPoint_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxRawPoint_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxRawPoint_1y_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxRawPoint_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxRawPoint_1y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxRawPoint_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxRawPoint_1z_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxRawPoint_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxRawPoint_1z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxRawPoint_reflectivity(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxRawPoint_12reflectivity_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxRawPoint_reflectivity(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxRawPoint_12reflectivity_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxRawPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxRawPoint[] = {
  {(char *)"x", __pyx_getprop_7pylivox_15PyLivoxRawPoint_x, __pyx_setprop_7pylivox_15PyLivoxRawPoint_x, (char *)0, 0},
  {(char *)"y", __pyx_getprop_7pylivox_15PyLivoxRawPoint_y, __pyx_setprop_7pylivox_15PyLivoxRawPoint_y, (char *)0, 0},
  {(char *)"z", __pyx_getprop_7pylivox_15PyLivoxRawPoint_z, __pyx_setprop_7pylivox_15PyLivoxRawPoint_z, (char *)0, 0},
  {(char *)"reflectivity", __pyx_getprop_7pylivox_15PyLivoxRawPoint_reflectivity, __pyx_setprop_7pylivox_15PyLivoxRawPoint_reflectivity, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxRawPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxRawPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Cartesian coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxRawPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxRawPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_15PyLivoxRawPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxRawPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxRawPoint_spec = {
  "pylivox.PyLivoxRawPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxRawPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxRawPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxRawPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxRawPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxRawPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxRawPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Cartesian coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxRawPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxRawPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_15PyLivoxRawPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxRawPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxSpherPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxSpherPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)o);
  new((void*)&(p->core)) LivoxSpherPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxSpherPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxSpherPoint *p = (struct __pyx_obj_7pylivox_PyLivoxSpherPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxSpherPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSpherPoint_depth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSpherPoint_5depth_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSpherPoint_depth(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSpherPoint_5depth_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSpherPoint_theta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSpherPoint_5theta_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSpherPoint_theta(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSpherPoint_5theta_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSpherPoint_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSpherPoint_3phi_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSpherPoint_phi(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSpherPoint_3phi_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_17PyLivoxSpherPoint_reflectivity(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_17PyLivoxSpherPoint_12reflectivity_1__get__(o);
}

static int __pyx_setprop_7pylivox_17PyLivoxSpherPoint_reflectivity(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_17PyLivoxSpherPoint_12reflectivity_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxSpherPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_17PyLivoxSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxSpherPoint[] = {
  {(char *)"depth", __pyx_getprop_7pylivox_17PyLivoxSpherPoint_depth, __pyx_setprop_7pylivox_17PyLivoxSpherPoint_depth, (char *)0, 0},
  {(char *)"theta", __pyx_getprop_7pylivox_17PyLivoxSpherPoint_theta, __pyx_setprop_7pylivox_17PyLivoxSpherPoint_theta, (char *)0, 0},
  {(char *)"phi", __pyx_getprop_7pylivox_17PyLivoxSpherPoint_phi, __pyx_setprop_7pylivox_17PyLivoxSpherPoint_phi, (char *)0, 0},
  {(char *)"reflectivity", __pyx_getprop_7pylivox_17PyLivoxSpherPoint_reflectivity, __pyx_setprop_7pylivox_17PyLivoxSpherPoint_reflectivity, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxSpherPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxSpherPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Spherical coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxSpherPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxSpherPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_17PyLivoxSpherPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxSpherPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxSpherPoint_spec = {
  "pylivox.PyLivoxSpherPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxSpherPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxSpherPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxSpherPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxSpherPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxSpherPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxSpherPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Spherical coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxSpherPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxSpherPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_17PyLivoxSpherPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxSpherPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxPoint *)o);
  new((void*)&(p->core)) LivoxPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxPoint *p = (struct __pyx_obj_7pylivox_PyLivoxPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_12PyLivoxPoint_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyLivoxPoint_1x_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyLivoxPoint_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyLivoxPoint_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyLivoxPoint_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyLivoxPoint_1y_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyLivoxPoint_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyLivoxPoint_1y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyLivoxPoint_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyLivoxPoint_1z_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyLivoxPoint_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyLivoxPoint_1z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyLivoxPoint_reflectivity(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyLivoxPoint_12reflectivity_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyLivoxPoint_reflectivity(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyLivoxPoint_12reflectivity_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLivoxPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyLivoxPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxPoint[] = {
  {(char *)"x", __pyx_getprop_7pylivox_12PyLivoxPoint_x, __pyx_setprop_7pylivox_12PyLivoxPoint_x, (char *)0, 0},
  {(char *)"y", __pyx_getprop_7pylivox_12PyLivoxPoint_y, __pyx_setprop_7pylivox_12PyLivoxPoint_y, (char *)0, 0},
  {(char *)"z", __pyx_getprop_7pylivox_12PyLivoxPoint_z, __pyx_setprop_7pylivox_12PyLivoxPoint_z, (char *)0, 0},
  {(char *)"reflectivity", __pyx_getprop_7pylivox_12PyLivoxPoint_reflectivity, __pyx_setprop_7pylivox_12PyLivoxPoint_reflectivity, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Standard point cloud format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_12PyLivoxPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxPoint_spec = {
  "pylivox.PyLivoxPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Standard point cloud format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_12PyLivoxPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxExtendRawPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)o);
  new((void*)&(p->core)) LivoxExtendRawPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxExtendRawPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *p = (struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxExtendRawPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1x_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1y_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1z_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_reflectivity(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_reflectivity(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_12reflectivity_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_tag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3tag_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_tag(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3tag_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxExtendRawPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxExtendRawPoint[] = {
  {(char *)"x", __pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_x, __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_x, (char *)0, 0},
  {(char *)"y", __pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_y, __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_y, (char *)0, 0},
  {(char *)"z", __pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_z, __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_z, (char *)0, 0},
  {(char *)"reflectivity", __pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_reflectivity, __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_reflectivity, (char *)0, 0},
  {(char *)"tag", __pyx_getprop_7pylivox_21PyLivoxExtendRawPoint_tag, __pyx_setprop_7pylivox_21PyLivoxExtendRawPoint_tag, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxExtendRawPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxExtendRawPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Extend cartesian coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxExtendRawPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxExtendRawPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxExtendRawPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxExtendRawPoint_spec = {
  "pylivox.PyLivoxExtendRawPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxExtendRawPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxExtendRawPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxExtendRawPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxExtendRawPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxExtendRawPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Extend cartesian coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxExtendRawPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxExtendRawPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_21PyLivoxExtendRawPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxExtendRawPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxExtendSpherPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)o);
  new((void*)&(p->core)) LivoxExtendSpherPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxExtendSpherPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *p = (struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxExtendSpherPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_depth(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5depth_1__get__(o);
}

static int __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_depth(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5depth_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_theta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5theta_1__get__(o);
}

static int __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_theta(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5theta_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3phi_1__get__(o);
}

static int __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_phi(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3phi_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_reflectivity(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_1__get__(o);
}

static int __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_reflectivity(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_12reflectivity_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_tag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3tag_1__get__(o);
}

static int __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_tag(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3tag_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxExtendSpherPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxExtendSpherPoint[] = {
  {(char *)"depth", __pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_depth, __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_depth, (char *)0, 0},
  {(char *)"theta", __pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_theta, __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_theta, (char *)0, 0},
  {(char *)"phi", __pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_phi, __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_phi, (char *)0, 0},
  {(char *)"reflectivity", __pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_reflectivity, __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_reflectivity, (char *)0, 0},
  {(char *)"tag", __pyx_getprop_7pylivox_23PyLivoxExtendSpherPoint_tag, __pyx_setprop_7pylivox_23PyLivoxExtendSpherPoint_tag, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxExtendSpherPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxExtendSpherPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Extend spherical coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxExtendSpherPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxExtendSpherPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxExtendSpherPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxExtendSpherPoint_spec = {
  "pylivox.PyLivoxExtendSpherPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxExtendSpherPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxExtendSpherPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxExtendSpherPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxExtendSpherPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxExtendSpherPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Extend spherical coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxExtendSpherPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxExtendSpherPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_23PyLivoxExtendSpherPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxExtendSpherPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxDualExtendRawPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)o);
  new((void*)&(p->core)) LivoxDualExtendRawPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxDualExtendRawPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *p = (struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxDualExtendRawPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_x1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x1_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_x1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_y1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y1_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_y1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_z1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z1_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_z1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_tag1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_tag1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_x2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x2_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_x2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2x2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_y2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y2_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_y2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2y2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_z2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z2_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_z2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_2z2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_13reflectivity2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_tag2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_1__get__(o);
}

static int __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_tag2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_4tag2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxDualExtendRawPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxDualExtendRawPoint[] = {
  {(char *)"x1", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_x1, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_x1, (char *)0, 0},
  {(char *)"y1", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_y1, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_y1, (char *)0, 0},
  {(char *)"z1", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_z1, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_z1, (char *)0, 0},
  {(char *)"reflectivity1", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity1, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity1, (char *)0, 0},
  {(char *)"tag1", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_tag1, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_tag1, (char *)0, 0},
  {(char *)"x2", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_x2, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_x2, (char *)0, 0},
  {(char *)"y2", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_y2, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_y2, (char *)0, 0},
  {(char *)"z2", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_z2, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_z2, (char *)0, 0},
  {(char *)"reflectivity2", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity2, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_reflectivity2, (char *)0, 0},
  {(char *)"tag2", __pyx_getprop_7pylivox_25PyLivoxDualExtendRawPoint_tag2, __pyx_setprop_7pylivox_25PyLivoxDualExtendRawPoint_tag2, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxDualExtendRawPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxDualExtendRawPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Dual extend cartesian coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxDualExtendRawPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxDualExtendRawPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxDualExtendRawPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxDualExtendRawPoint_spec = {
  "pylivox.PyLivoxDualExtendRawPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxDualExtendRawPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxDualExtendRawPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxDualExtendRawPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxDualExtendRawPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxDualExtendRawPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Dual extend cartesian coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxDualExtendRawPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxDualExtendRawPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_25PyLivoxDualExtendRawPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxDualExtendRawPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxDualExtendSpherPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)o);
  new((void*)&(p->core)) LivoxDualExtendSpherPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxDualExtendSpherPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *p = (struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxDualExtendSpherPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_theta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_theta(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5theta_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_phi(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3phi_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_6depth2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_13reflectivity2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_4tag2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxDualExtendSpherPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxDualExtendSpherPoint[] = {
  {(char *)"theta", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_theta, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_theta, (char *)0, 0},
  {(char *)"phi", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_phi, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_phi, (char *)0, 0},
  {(char *)"depth1", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth1, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth1, (char *)0, 0},
  {(char *)"reflectivity1", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity1, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity1, (char *)0, 0},
  {(char *)"tag1", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag1, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag1, (char *)0, 0},
  {(char *)"depth2", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth2, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_depth2, (char *)0, 0},
  {(char *)"reflectivity2", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity2, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_reflectivity2, (char *)0, 0},
  {(char *)"tag2", __pyx_getprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag2, __pyx_setprop_7pylivox_27PyLivoxDualExtendSpherPoint_tag2, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxDualExtendSpherPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxDualExtendSpherPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Dual extend spherical coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxDualExtendSpherPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxDualExtendSpherPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxDualExtendSpherPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxDualExtendSpherPoint_spec = {
  "pylivox.PyLivoxDualExtendSpherPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxDualExtendSpherPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxDualExtendSpherPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxDualExtendSpherPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxDualExtendSpherPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxDualExtendSpherPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Dual extend spherical coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxDualExtendSpherPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxDualExtendSpherPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_27PyLivoxDualExtendSpherPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxDualExtendSpherPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxTripleExtendRawPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)o);
  new((void*)&(p->core)) LivoxTripleExtendRawPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendRawPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *p = (struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendRawPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_x1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_x1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_y1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_y1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_z1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_z1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_x2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_x2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_y2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_y2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_z2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_z2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_x3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_x3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2x3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_y3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_y3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2y3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_z3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_z3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_2z3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_13reflectivity3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_1__get__(o);
}

static int __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_4tag3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxTripleExtendRawPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxTripleExtendRawPoint[] = {
  {(char *)"x1", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_x1, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_x1, (char *)0, 0},
  {(char *)"y1", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_y1, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_y1, (char *)0, 0},
  {(char *)"z1", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_z1, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_z1, (char *)0, 0},
  {(char *)"reflectivity1", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity1, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity1, (char *)0, 0},
  {(char *)"tag1", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag1, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag1, (char *)0, 0},
  {(char *)"x2", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_x2, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_x2, (char *)0, 0},
  {(char *)"y2", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_y2, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_y2, (char *)0, 0},
  {(char *)"z2", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_z2, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_z2, (char *)0, 0},
  {(char *)"reflectivity2", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity2, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity2, (char *)0, 0},
  {(char *)"tag2", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag2, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag2, (char *)0, 0},
  {(char *)"x3", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_x3, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_x3, (char *)0, 0},
  {(char *)"y3", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_y3, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_y3, (char *)0, 0},
  {(char *)"z3", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_z3, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_z3, (char *)0, 0},
  {(char *)"reflectivity3", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity3, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_reflectivity3, (char *)0, 0},
  {(char *)"tag3", __pyx_getprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag3, __pyx_setprop_7pylivox_27PyLivoxTripleExtendRawPoint_tag3, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxTripleExtendRawPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendRawPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Triple extend cartesian coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxTripleExtendRawPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxTripleExtendRawPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxTripleExtendRawPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxTripleExtendRawPoint_spec = {
  "pylivox.PyLivoxTripleExtendRawPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxTripleExtendRawPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxTripleExtendRawPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxTripleExtendRawPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxTripleExtendRawPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendRawPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Triple extend cartesian coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxTripleExtendRawPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxTripleExtendRawPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_27PyLivoxTripleExtendRawPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxTripleExtendRawPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxTripleExtendSpherPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)o);
  new((void*)&(p->core)) LivoxTripleExtendSpherPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendSpherPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *p = (struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendSpherPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_theta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_theta(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5theta_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_phi(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3phi_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_6depth3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_13reflectivity3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_1__get__(o);
}

static int __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_4tag3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxTripleExtendSpherPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxTripleExtendSpherPoint[] = {
  {(char *)"theta", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_theta, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_theta, (char *)0, 0},
  {(char *)"phi", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_phi, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_phi, (char *)0, 0},
  {(char *)"depth1", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth1, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth1, (char *)0, 0},
  {(char *)"reflectivity1", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity1, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity1, (char *)0, 0},
  {(char *)"tag1", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag1, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag1, (char *)0, 0},
  {(char *)"depth2", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth2, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth2, (char *)0, 0},
  {(char *)"reflectivity2", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity2, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity2, (char *)0, 0},
  {(char *)"tag2", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag2, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag2, (char *)0, 0},
  {(char *)"depth3", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth3, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_depth3, (char *)0, 0},
  {(char *)"reflectivity3", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity3, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_reflectivity3, (char *)0, 0},
  {(char *)"tag3", __pyx_getprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag3, __pyx_setprop_7pylivox_29PyLivoxTripleExtendSpherPoint_tag3, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendSpherPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Triple extend spherical coordinate format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxTripleExtendSpherPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxTripleExtendSpherPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxTripleExtendSpherPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint_spec = {
  "pylivox.PyLivoxTripleExtendSpherPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxTripleExtendSpherPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxTripleExtendSpherPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxTripleExtendSpherPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Triple extend spherical coordinate format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxTripleExtendSpherPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxTripleExtendSpherPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_29PyLivoxTripleExtendSpherPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxTripleExtendSpherPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxImuPoint(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxImuPoint *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxImuPoint *)o);
  new((void*)&(p->core)) LivoxImuPoint();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxImuPoint(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxImuPoint *p = (struct __pyx_obj_7pylivox_PyLivoxImuPoint *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxImuPoint) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxImuPoint_gyro_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_x_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxImuPoint_gyro_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxImuPoint_gyro_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_y_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxImuPoint_gyro_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxImuPoint_gyro_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_z_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxImuPoint_gyro_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxImuPoint_6gyro_z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxImuPoint_acc_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_x_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxImuPoint_acc_x(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_x_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxImuPoint_acc_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_y_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxImuPoint_acc_y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_15PyLivoxImuPoint_acc_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_z_1__get__(o);
}

static int __pyx_setprop_7pylivox_15PyLivoxImuPoint_acc_z(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_15PyLivoxImuPoint_5acc_z_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxImuPoint[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxImuPoint_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_15PyLivoxImuPoint_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxImuPoint[] = {
  {(char *)"gyro_x", __pyx_getprop_7pylivox_15PyLivoxImuPoint_gyro_x, __pyx_setprop_7pylivox_15PyLivoxImuPoint_gyro_x, (char *)0, 0},
  {(char *)"gyro_y", __pyx_getprop_7pylivox_15PyLivoxImuPoint_gyro_y, __pyx_setprop_7pylivox_15PyLivoxImuPoint_gyro_y, (char *)0, 0},
  {(char *)"gyro_z", __pyx_getprop_7pylivox_15PyLivoxImuPoint_gyro_z, __pyx_setprop_7pylivox_15PyLivoxImuPoint_gyro_z, (char *)0, 0},
  {(char *)"acc_x", __pyx_getprop_7pylivox_15PyLivoxImuPoint_acc_x, __pyx_setprop_7pylivox_15PyLivoxImuPoint_acc_x, (char *)0, 0},
  {(char *)"acc_y", __pyx_getprop_7pylivox_15PyLivoxImuPoint_acc_y, __pyx_setprop_7pylivox_15PyLivoxImuPoint_acc_y, (char *)0, 0},
  {(char *)"acc_z", __pyx_getprop_7pylivox_15PyLivoxImuPoint_acc_z, __pyx_setprop_7pylivox_15PyLivoxImuPoint_acc_z, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxImuPoint_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxImuPoint},
  {Py_tp_doc, (void *)PyDoc_STR("\n    IMU data format.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxImuPoint},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxImuPoint},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_15PyLivoxImuPoint_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxImuPoint},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxImuPoint_spec = {
  "pylivox.PyLivoxImuPoint",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxImuPoint),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxImuPoint_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxImuPoint = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxImuPoint", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxImuPoint), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxImuPoint, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    IMU data format.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxImuPoint, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxImuPoint, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_15PyLivoxImuPoint_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxImuPoint, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarErrorCode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLidarErrorCode *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLidarErrorCode *)o);
  new((void*)&(p->core)) LidarErrorCode();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarErrorCode(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLidarErrorCode *p = (struct __pyx_obj_7pylivox_PyLidarErrorCode *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarErrorCode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_temp_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_11temp_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_temp_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_11temp_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_volt_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_11volt_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_volt_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_11volt_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_motor_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_12motor_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_motor_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_12motor_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_dirty_warn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_10dirty_warn_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_dirty_warn(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_10dirty_warn_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_firmware_err(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_12firmware_err_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_firmware_err(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_12firmware_err_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_pps_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_10pps_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_pps_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_10pps_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_device_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_13device_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_device_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_13device_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_fan_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_10fan_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_fan_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_10fan_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_self_heating(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_12self_heating_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_self_heating(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_12self_heating_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_ptp_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_10ptp_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_ptp_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_10ptp_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_time_sync_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_16time_sync_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_time_sync_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_16time_sync_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_rsvd(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_4rsvd_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_rsvd(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_4rsvd_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLidarErrorCode_system_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLidarErrorCode_13system_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLidarErrorCode_system_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLidarErrorCode_13system_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarErrorCode[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLidarErrorCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLidarErrorCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLidarErrorCode[] = {
  {(char *)"temp_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_temp_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_temp_status, (char *)0, 0},
  {(char *)"volt_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_volt_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_volt_status, (char *)0, 0},
  {(char *)"motor_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_motor_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_motor_status, (char *)0, 0},
  {(char *)"dirty_warn", __pyx_getprop_7pylivox_16PyLidarErrorCode_dirty_warn, __pyx_setprop_7pylivox_16PyLidarErrorCode_dirty_warn, (char *)0, 0},
  {(char *)"firmware_err", __pyx_getprop_7pylivox_16PyLidarErrorCode_firmware_err, __pyx_setprop_7pylivox_16PyLidarErrorCode_firmware_err, (char *)0, 0},
  {(char *)"pps_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_pps_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_pps_status, (char *)0, 0},
  {(char *)"device_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_device_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_device_status, (char *)0, 0},
  {(char *)"fan_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_fan_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_fan_status, (char *)0, 0},
  {(char *)"self_heating", __pyx_getprop_7pylivox_16PyLidarErrorCode_self_heating, __pyx_setprop_7pylivox_16PyLidarErrorCode_self_heating, (char *)0, 0},
  {(char *)"ptp_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_ptp_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_ptp_status, (char *)0, 0},
  {(char *)"time_sync_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_time_sync_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_time_sync_status, (char *)0, 0},
  {(char *)"rsvd", __pyx_getprop_7pylivox_16PyLidarErrorCode_rsvd, __pyx_setprop_7pylivox_16PyLidarErrorCode_rsvd, (char *)0, 0},
  {(char *)"system_status", __pyx_getprop_7pylivox_16PyLidarErrorCode_system_status, __pyx_setprop_7pylivox_16PyLidarErrorCode_system_status, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarErrorCode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarErrorCode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    LiDAR error code.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarErrorCode},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLidarErrorCode},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_16PyLidarErrorCode_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarErrorCode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarErrorCode_spec = {
  "pylivox.PyLidarErrorCode",
  sizeof(struct __pyx_obj_7pylivox_PyLidarErrorCode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarErrorCode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarErrorCode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarErrorCode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarErrorCode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarErrorCode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    LiDAR error code.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarErrorCode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLidarErrorCode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_16PyLidarErrorCode_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarErrorCode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyHubErrorCode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyHubErrorCode *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyHubErrorCode *)o);
  new((void*)&(p->core)) HubErrorCode();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyHubErrorCode(PyObject *o) {
  struct __pyx_obj_7pylivox_PyHubErrorCode *p = (struct __pyx_obj_7pylivox_PyHubErrorCode *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyHubErrorCode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_sync_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_11sync_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_sync_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_11sync_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_temp_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_11temp_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_temp_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_11temp_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_lidar_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_12lidar_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_lidar_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_12lidar_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_lidar_link_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_17lidar_link_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_lidar_link_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_17lidar_link_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_firmware_err(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_12firmware_err_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_firmware_err(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_12firmware_err_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_rsvd(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_4rsvd_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_rsvd(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_4rsvd_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyHubErrorCode_system_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyHubErrorCode_13system_status_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyHubErrorCode_system_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyHubErrorCode_13system_status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyHubErrorCode[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyHubErrorCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyHubErrorCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyHubErrorCode[] = {
  {(char *)"sync_status", __pyx_getprop_7pylivox_14PyHubErrorCode_sync_status, __pyx_setprop_7pylivox_14PyHubErrorCode_sync_status, (char *)0, 0},
  {(char *)"temp_status", __pyx_getprop_7pylivox_14PyHubErrorCode_temp_status, __pyx_setprop_7pylivox_14PyHubErrorCode_temp_status, (char *)0, 0},
  {(char *)"lidar_status", __pyx_getprop_7pylivox_14PyHubErrorCode_lidar_status, __pyx_setprop_7pylivox_14PyHubErrorCode_lidar_status, (char *)0, 0},
  {(char *)"lidar_link_status", __pyx_getprop_7pylivox_14PyHubErrorCode_lidar_link_status, __pyx_setprop_7pylivox_14PyHubErrorCode_lidar_link_status, (char *)0, 0},
  {(char *)"firmware_err", __pyx_getprop_7pylivox_14PyHubErrorCode_firmware_err, __pyx_setprop_7pylivox_14PyHubErrorCode_firmware_err, (char *)0, 0},
  {(char *)"rsvd", __pyx_getprop_7pylivox_14PyHubErrorCode_rsvd, __pyx_setprop_7pylivox_14PyHubErrorCode_rsvd, (char *)0, 0},
  {(char *)"system_status", __pyx_getprop_7pylivox_14PyHubErrorCode_system_status, __pyx_setprop_7pylivox_14PyHubErrorCode_system_status, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyHubErrorCode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyHubErrorCode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Hub error code.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyHubErrorCode},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyHubErrorCode},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_14PyHubErrorCode_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyHubErrorCode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyHubErrorCode_spec = {
  "pylivox.PyHubErrorCode",
  sizeof(struct __pyx_obj_7pylivox_PyHubErrorCode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyHubErrorCode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyHubErrorCode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyHubErrorCode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyHubErrorCode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyHubErrorCode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Hub error code.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyHubErrorCode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyHubErrorCode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_14PyHubErrorCode_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyHubErrorCode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyErrorMessage(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyErrorMessage(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyErrorMessage) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_14PyErrorMessage_error_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyErrorMessage_10error_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyErrorMessage_error_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyErrorMessage_10error_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyErrorMessage_lidar_error_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyErrorMessage_16lidar_error_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyErrorMessage_lidar_error_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyErrorMessage_16lidar_error_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_14PyErrorMessage_hub_error_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_14PyErrorMessage_14hub_error_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_14PyErrorMessage_hub_error_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_14PyErrorMessage_14hub_error_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyErrorMessage[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyErrorMessage_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_14PyErrorMessage_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyErrorMessage[] = {
  {(char *)"error_code", __pyx_getprop_7pylivox_14PyErrorMessage_error_code, __pyx_setprop_7pylivox_14PyErrorMessage_error_code, (char *)0, 0},
  {(char *)"lidar_error_code", __pyx_getprop_7pylivox_14PyErrorMessage_lidar_error_code, __pyx_setprop_7pylivox_14PyErrorMessage_lidar_error_code, (char *)0, 0},
  {(char *)"hub_error_code", __pyx_getprop_7pylivox_14PyErrorMessage_hub_error_code, __pyx_setprop_7pylivox_14PyErrorMessage_hub_error_code, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyErrorMessage_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyErrorMessage},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Device error message.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyErrorMessage},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyErrorMessage},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_14PyErrorMessage_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyErrorMessage},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyErrorMessage_spec = {
  "pylivox.PyErrorMessage",
  sizeof(struct __pyx_obj_7pylivox_PyErrorMessage),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyErrorMessage_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyErrorMessage = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyErrorMessage", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyErrorMessage), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyErrorMessage, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Device error message.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyErrorMessage, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyErrorMessage, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_14PyErrorMessage_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyErrorMessage, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLivoxEthPacket(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLivoxEthPacket *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLivoxEthPacket *)o);
  new((void*)&(p->core)) LivoxEthPacket();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLivoxEthPacket(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLivoxEthPacket *p = (struct __pyx_obj_7pylivox_PyLivoxEthPacket *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLivoxEthPacket) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_7version_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_version(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_7version_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_slot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_4slot_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_slot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_4slot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_2id_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_2id_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_err_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_8err_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_err_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_8err_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_timestamp_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_14timestamp_type_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_timestamp_type(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_14timestamp_type_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_data_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_9data_type_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_data_type(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_9data_type_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_timestamp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_9timestamp_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_timestamp(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_9timestamp_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_16PyLivoxEthPacket_data(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_16PyLivoxEthPacket_4data_1__get__(o);
}

static int __pyx_setprop_7pylivox_16PyLivoxEthPacket_data(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_16PyLivoxEthPacket_4data_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLivoxEthPacket[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLivoxEthPacket_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_16PyLivoxEthPacket_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLivoxEthPacket[] = {
  {(char *)"version", __pyx_getprop_7pylivox_16PyLivoxEthPacket_version, __pyx_setprop_7pylivox_16PyLivoxEthPacket_version, (char *)0, 0},
  {(char *)"slot", __pyx_getprop_7pylivox_16PyLivoxEthPacket_slot, __pyx_setprop_7pylivox_16PyLivoxEthPacket_slot, (char *)0, 0},
  {(char *)"id", __pyx_getprop_7pylivox_16PyLivoxEthPacket_id, __pyx_setprop_7pylivox_16PyLivoxEthPacket_id, (char *)0, 0},
  {(char *)"err_code", __pyx_getprop_7pylivox_16PyLivoxEthPacket_err_code, __pyx_setprop_7pylivox_16PyLivoxEthPacket_err_code, (char *)0, 0},
  {(char *)"timestamp_type", __pyx_getprop_7pylivox_16PyLivoxEthPacket_timestamp_type, __pyx_setprop_7pylivox_16PyLivoxEthPacket_timestamp_type, (char *)0, 0},
  {(char *)"data_type", __pyx_getprop_7pylivox_16PyLivoxEthPacket_data_type, __pyx_setprop_7pylivox_16PyLivoxEthPacket_data_type, (char *)0, 0},
  {(char *)"timestamp", __pyx_getprop_7pylivox_16PyLivoxEthPacket_timestamp, __pyx_setprop_7pylivox_16PyLivoxEthPacket_timestamp, (char *)0, 0},
  {(char *)"data", __pyx_getprop_7pylivox_16PyLivoxEthPacket_data, __pyx_setprop_7pylivox_16PyLivoxEthPacket_data, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLivoxEthPacket_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLivoxEthPacket},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Point cloud packet.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLivoxEthPacket},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLivoxEthPacket},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_16PyLivoxEthPacket_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLivoxEthPacket},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLivoxEthPacket_spec = {
  "pylivox.PyLivoxEthPacket",
  sizeof(struct __pyx_obj_7pylivox_PyLivoxEthPacket),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLivoxEthPacket_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLivoxEthPacket = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLivoxEthPacket", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLivoxEthPacket), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLivoxEthPacket, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Point cloud packet.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLivoxEthPacket, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLivoxEthPacket, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_16PyLivoxEthPacket_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLivoxEthPacket, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyStatusUnion(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyStatusUnion(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyStatusUnion) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_13PyStatusUnion_progress(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_13PyStatusUnion_8progress_1__get__(o);
}

static int __pyx_setprop_7pylivox_13PyStatusUnion_progress(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_13PyStatusUnion_8progress_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_13PyStatusUnion_status_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_13PyStatusUnion_11status_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_13PyStatusUnion_status_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_13PyStatusUnion_11status_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyStatusUnion[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyStatusUnion_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_13PyStatusUnion_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyStatusUnion[] = {
  {(char *)"progress", __pyx_getprop_7pylivox_13PyStatusUnion_progress, __pyx_setprop_7pylivox_13PyStatusUnion_progress, (char *)0, 0},
  {(char *)"status_code", __pyx_getprop_7pylivox_13PyStatusUnion_status_code, __pyx_setprop_7pylivox_13PyStatusUnion_status_code, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyStatusUnion_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyStatusUnion},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Information of LiDAR work state.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyStatusUnion},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyStatusUnion},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_13PyStatusUnion_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyStatusUnion},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyStatusUnion_spec = {
  "pylivox.PyStatusUnion",
  sizeof(struct __pyx_obj_7pylivox_PyStatusUnion),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyStatusUnion_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyStatusUnion = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyStatusUnion", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyStatusUnion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyStatusUnion, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Information of LiDAR work state.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyStatusUnion, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyStatusUnion, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_13PyStatusUnion_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyStatusUnion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyDeviceInfo(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyDeviceInfo *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyDeviceInfo *)o);
  new((void*)&(p->core)) DeviceInfo();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyDeviceInfo(PyObject *o) {
  struct __pyx_obj_7pylivox_PyDeviceInfo *p = (struct __pyx_obj_7pylivox_PyDeviceInfo *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyDeviceInfo) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_handle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_6handle_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_handle(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_6handle_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_slot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_4slot_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_slot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_4slot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_2id_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_2id_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_4type_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_type(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_4type_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_data_port(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_9data_port_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_data_port(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_9data_port_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_cmd_port(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_8cmd_port_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_cmd_port(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_8cmd_port_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_sensor_port(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_11sensor_port_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_sensor_port(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_11sensor_port_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_ip(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_2ip_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_ip(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_2ip_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_state(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_5state_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_state(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_5state_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_feature(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_7feature_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_feature(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_7feature_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_status(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_6status_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_status(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_6status_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyDeviceInfo_firmware_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyDeviceInfo_16firmware_version_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyDeviceInfo_firmware_version(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyDeviceInfo_16firmware_version_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyDeviceInfo[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceInfo_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyDeviceInfo_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyDeviceInfo[] = {
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_12PyDeviceInfo_broadcast_code, __pyx_setprop_7pylivox_12PyDeviceInfo_broadcast_code, (char *)0, 0},
  {(char *)"handle", __pyx_getprop_7pylivox_12PyDeviceInfo_handle, __pyx_setprop_7pylivox_12PyDeviceInfo_handle, (char *)0, 0},
  {(char *)"slot", __pyx_getprop_7pylivox_12PyDeviceInfo_slot, __pyx_setprop_7pylivox_12PyDeviceInfo_slot, (char *)0, 0},
  {(char *)"id", __pyx_getprop_7pylivox_12PyDeviceInfo_id, __pyx_setprop_7pylivox_12PyDeviceInfo_id, (char *)0, 0},
  {(char *)"type", __pyx_getprop_7pylivox_12PyDeviceInfo_type, __pyx_setprop_7pylivox_12PyDeviceInfo_type, (char *)0, 0},
  {(char *)"data_port", __pyx_getprop_7pylivox_12PyDeviceInfo_data_port, __pyx_setprop_7pylivox_12PyDeviceInfo_data_port, (char *)0, 0},
  {(char *)"cmd_port", __pyx_getprop_7pylivox_12PyDeviceInfo_cmd_port, __pyx_setprop_7pylivox_12PyDeviceInfo_cmd_port, (char *)0, 0},
  {(char *)"sensor_port", __pyx_getprop_7pylivox_12PyDeviceInfo_sensor_port, __pyx_setprop_7pylivox_12PyDeviceInfo_sensor_port, (char *)0, 0},
  {(char *)"ip", __pyx_getprop_7pylivox_12PyDeviceInfo_ip, __pyx_setprop_7pylivox_12PyDeviceInfo_ip, (char *)0, 0},
  {(char *)"state", __pyx_getprop_7pylivox_12PyDeviceInfo_state, __pyx_setprop_7pylivox_12PyDeviceInfo_state, (char *)0, 0},
  {(char *)"feature", __pyx_getprop_7pylivox_12PyDeviceInfo_feature, __pyx_setprop_7pylivox_12PyDeviceInfo_feature, (char *)0, 0},
  {(char *)"status", __pyx_getprop_7pylivox_12PyDeviceInfo_status, __pyx_setprop_7pylivox_12PyDeviceInfo_status, (char *)0, 0},
  {(char *)"firmware_version", __pyx_getprop_7pylivox_12PyDeviceInfo_firmware_version, __pyx_setprop_7pylivox_12PyDeviceInfo_firmware_version, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyDeviceInfo_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyDeviceInfo},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Information of the connected LiDAR or hub.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyDeviceInfo},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyDeviceInfo},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_12PyDeviceInfo_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyDeviceInfo},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyDeviceInfo_spec = {
  "pylivox.PyDeviceInfo",
  sizeof(struct __pyx_obj_7pylivox_PyDeviceInfo),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyDeviceInfo_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyDeviceInfo = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyDeviceInfo", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyDeviceInfo), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyDeviceInfo, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Information of the connected LiDAR or hub.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyDeviceInfo, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyDeviceInfo, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_12PyDeviceInfo_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyDeviceInfo, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyBroadcastDeviceInfo(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)o);
  new((void*)&(p->core)) BroadcastDeviceInfo();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyBroadcastDeviceInfo(PyObject *o) {
  struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *p = (struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyBroadcastDeviceInfo) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_dev_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8dev_type_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_dev_type(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8dev_type_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_reserved(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8reserved_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_reserved(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_8reserved_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_ip(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_2ip_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_ip(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_2ip_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyBroadcastDeviceInfo[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyBroadcastDeviceInfo[] = {
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_broadcast_code, __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_broadcast_code, (char *)0, 0},
  {(char *)"dev_type", __pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_dev_type, __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_dev_type, (char *)0, 0},
  {(char *)"reserved", __pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_reserved, __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_reserved, (char *)0, 0},
  {(char *)"ip", __pyx_getprop_7pylivox_21PyBroadcastDeviceInfo_ip, __pyx_setprop_7pylivox_21PyBroadcastDeviceInfo_ip, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyBroadcastDeviceInfo_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyBroadcastDeviceInfo},
  {Py_tp_doc, (void *)PyDoc_STR("\n    The information of broadcast device.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyBroadcastDeviceInfo},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyBroadcastDeviceInfo},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_21PyBroadcastDeviceInfo_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyBroadcastDeviceInfo},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyBroadcastDeviceInfo_spec = {
  "pylivox.PyBroadcastDeviceInfo",
  sizeof(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyBroadcastDeviceInfo_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyBroadcastDeviceInfo = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyBroadcastDeviceInfo", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyBroadcastDeviceInfo), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyBroadcastDeviceInfo, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The information of broadcast device.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyBroadcastDeviceInfo, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyBroadcastDeviceInfo, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_21PyBroadcastDeviceInfo_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyBroadcastDeviceInfo, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyConnectedLidarInfo(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyConnectedLidarInfo *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)o);
  new((void*)&(p->core)) ConnectedLidarInfo();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyConnectedLidarInfo(PyObject *o) {
  struct __pyx_obj_7pylivox_PyConnectedLidarInfo *p = (struct __pyx_obj_7pylivox_PyConnectedLidarInfo *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyConnectedLidarInfo) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_20PyConnectedLidarInfo_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_20PyConnectedLidarInfo_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_20PyConnectedLidarInfo_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_20PyConnectedLidarInfo_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_20PyConnectedLidarInfo_dev_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_20PyConnectedLidarInfo_8dev_type_1__get__(o);
}

static int __pyx_setprop_7pylivox_20PyConnectedLidarInfo_dev_type(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_20PyConnectedLidarInfo_8dev_type_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_20PyConnectedLidarInfo_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_20PyConnectedLidarInfo_7version_1__get__(o);
}

static int __pyx_setprop_7pylivox_20PyConnectedLidarInfo_version(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_20PyConnectedLidarInfo_7version_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_20PyConnectedLidarInfo_slot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_20PyConnectedLidarInfo_4slot_1__get__(o);
}

static int __pyx_setprop_7pylivox_20PyConnectedLidarInfo_slot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_20PyConnectedLidarInfo_4slot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_20PyConnectedLidarInfo_id(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_20PyConnectedLidarInfo_2id_1__get__(o);
}

static int __pyx_setprop_7pylivox_20PyConnectedLidarInfo_id(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_20PyConnectedLidarInfo_2id_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyConnectedLidarInfo[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_20PyConnectedLidarInfo_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_20PyConnectedLidarInfo_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyConnectedLidarInfo[] = {
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_20PyConnectedLidarInfo_broadcast_code, __pyx_setprop_7pylivox_20PyConnectedLidarInfo_broadcast_code, (char *)0, 0},
  {(char *)"dev_type", __pyx_getprop_7pylivox_20PyConnectedLidarInfo_dev_type, __pyx_setprop_7pylivox_20PyConnectedLidarInfo_dev_type, (char *)0, 0},
  {(char *)"version", __pyx_getprop_7pylivox_20PyConnectedLidarInfo_version, __pyx_setprop_7pylivox_20PyConnectedLidarInfo_version, (char *)0, 0},
  {(char *)"slot", __pyx_getprop_7pylivox_20PyConnectedLidarInfo_slot, __pyx_setprop_7pylivox_20PyConnectedLidarInfo_slot, (char *)0, 0},
  {(char *)"id", __pyx_getprop_7pylivox_20PyConnectedLidarInfo_id, __pyx_setprop_7pylivox_20PyConnectedLidarInfo_id, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyConnectedLidarInfo_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyConnectedLidarInfo},
  {Py_tp_doc, (void *)PyDoc_STR("\n    The information of LiDAR units that are connected to the Livox Hub.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyConnectedLidarInfo},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyConnectedLidarInfo},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_20PyConnectedLidarInfo_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyConnectedLidarInfo},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyConnectedLidarInfo_spec = {
  "pylivox.PyConnectedLidarInfo",
  sizeof(struct __pyx_obj_7pylivox_PyConnectedLidarInfo),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyConnectedLidarInfo_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyConnectedLidarInfo = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyConnectedLidarInfo", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyConnectedLidarInfo), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyConnectedLidarInfo, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The information of LiDAR units that are connected to the Livox Hub.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyConnectedLidarInfo, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyConnectedLidarInfo, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_20PyConnectedLidarInfo_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyConnectedLidarInfo, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyLidarModeRequestItem(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyLidarModeRequestItem *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)o);
  new((void*)&(p->core)) LidarModeRequestItem();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyLidarModeRequestItem(PyObject *o) {
  struct __pyx_obj_7pylivox_PyLidarModeRequestItem *p = (struct __pyx_obj_7pylivox_PyLidarModeRequestItem *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyLidarModeRequestItem) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_22PyLidarModeRequestItem_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_22PyLidarModeRequestItem_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_22PyLidarModeRequestItem_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_22PyLidarModeRequestItem_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_22PyLidarModeRequestItem_state(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_22PyLidarModeRequestItem_5state_1__get__(o);
}

static int __pyx_setprop_7pylivox_22PyLidarModeRequestItem_state(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_22PyLidarModeRequestItem_5state_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyLidarModeRequestItem[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyLidarModeRequestItem_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_22PyLidarModeRequestItem_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyLidarModeRequestItem[] = {
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_22PyLidarModeRequestItem_broadcast_code, __pyx_setprop_7pylivox_22PyLidarModeRequestItem_broadcast_code, (char *)0, 0},
  {(char *)"state", __pyx_getprop_7pylivox_22PyLidarModeRequestItem_state, __pyx_setprop_7pylivox_22PyLidarModeRequestItem_state, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyLidarModeRequestItem_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyLidarModeRequestItem},
  {Py_tp_doc, (void *)PyDoc_STR("\n    LiDAR mode configuration information.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyLidarModeRequestItem},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyLidarModeRequestItem},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_22PyLidarModeRequestItem_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyLidarModeRequestItem},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyLidarModeRequestItem_spec = {
  "pylivox.PyLidarModeRequestItem",
  sizeof(struct __pyx_obj_7pylivox_PyLidarModeRequestItem),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyLidarModeRequestItem_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyLidarModeRequestItem = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyLidarModeRequestItem", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyLidarModeRequestItem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyLidarModeRequestItem, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    LiDAR mode configuration information.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyLidarModeRequestItem, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyLidarModeRequestItem, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_22PyLidarModeRequestItem_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyLidarModeRequestItem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyReturnCode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyReturnCode *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyReturnCode *)o);
  new((void*)&(p->core)) ReturnCode();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyReturnCode(PyObject *o) {
  struct __pyx_obj_7pylivox_PyReturnCode *p = (struct __pyx_obj_7pylivox_PyReturnCode *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyReturnCode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_12PyReturnCode_ret_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyReturnCode_8ret_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyReturnCode_ret_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyReturnCode_8ret_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_12PyReturnCode_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_12PyReturnCode_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_12PyReturnCode_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_12PyReturnCode_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyReturnCode[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyReturnCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_12PyReturnCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyReturnCode[] = {
  {(char *)"ret_code", __pyx_getprop_7pylivox_12PyReturnCode_ret_code, __pyx_setprop_7pylivox_12PyReturnCode_ret_code, (char *)0, 0},
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_12PyReturnCode_broadcast_code, __pyx_setprop_7pylivox_12PyReturnCode_broadcast_code, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyReturnCode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyReturnCode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyReturnCode},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyReturnCode},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_12PyReturnCode_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyReturnCode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyReturnCode_spec = {
  "pylivox.PyReturnCode",
  sizeof(struct __pyx_obj_7pylivox_PyReturnCode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyReturnCode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyReturnCode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyReturnCode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyReturnCode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyReturnCode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyReturnCode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyReturnCode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_12PyReturnCode_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyReturnCode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyDeviceBroadcastCode(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)o);
  new((void*)&(p->core)) DeviceBroadcastCode();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyDeviceBroadcastCode(PyObject *o) {
  struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *p = (struct __pyx_obj_7pylivox_PyDeviceBroadcastCode *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyDeviceBroadcastCode) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_21PyDeviceBroadcastCode_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_21PyDeviceBroadcastCode_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_21PyDeviceBroadcastCode_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyDeviceBroadcastCode[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyDeviceBroadcastCode_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_21PyDeviceBroadcastCode_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyDeviceBroadcastCode[] = {
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_21PyDeviceBroadcastCode_broadcast_code, __pyx_setprop_7pylivox_21PyDeviceBroadcastCode_broadcast_code, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyDeviceBroadcastCode_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyDeviceBroadcastCode},
  {Py_tp_doc, (void *)PyDoc_STR("\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyDeviceBroadcastCode},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyDeviceBroadcastCode},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_21PyDeviceBroadcastCode_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyDeviceBroadcastCode},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyDeviceBroadcastCode_spec = {
  "pylivox.PyDeviceBroadcastCode",
  sizeof(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyDeviceBroadcastCode_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyDeviceBroadcastCode = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyDeviceBroadcastCode", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyDeviceBroadcastCode), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyDeviceBroadcastCode, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyDeviceBroadcastCode, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyDeviceBroadcastCode, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_21PyDeviceBroadcastCode_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyDeviceBroadcastCode, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7pylivox_PyRainFogSuppressRequestItem(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)o);
  new((void*)&(p->core)) RainFogSuppressRequestItem();
  return o;
}

static void __pyx_tp_dealloc_7pylivox_PyRainFogSuppressRequestItem(PyObject *o) {
  struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *p = (struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7pylivox_PyRainFogSuppressRequestItem) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->core);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static PyObject *__pyx_getprop_7pylivox_28PyRainFogSuppressRequestItem_broadcast_code(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_1__get__(o);
}

static int __pyx_setprop_7pylivox_28PyRainFogSuppressRequestItem_broadcast_code(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_14broadcast_code_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7pylivox_28PyRainFogSuppressRequestItem_feature(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_7feature_1__get__(o);
}

static int __pyx_setprop_7pylivox_28PyRainFogSuppressRequestItem_feature(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_7feature_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7pylivox_PyRainFogSuppressRequestItem[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7pylivox_PyRainFogSuppressRequestItem[] = {
  {(char *)"broadcast_code", __pyx_getprop_7pylivox_28PyRainFogSuppressRequestItem_broadcast_code, __pyx_setprop_7pylivox_28PyRainFogSuppressRequestItem_broadcast_code, (char *)0, 0},
  {(char *)"feature", __pyx_getprop_7pylivox_28PyRainFogSuppressRequestItem_feature, __pyx_setprop_7pylivox_28PyRainFogSuppressRequestItem_feature, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7pylivox_PyRainFogSuppressRequestItem_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7pylivox_PyRainFogSuppressRequestItem},
  {Py_tp_doc, (void *)PyDoc_STR("\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7pylivox_PyRainFogSuppressRequestItem},
  {Py_tp_getset, (void *)__pyx_getsets_7pylivox_PyRainFogSuppressRequestItem},
  {Py_tp_init, (void *)__pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7pylivox_PyRainFogSuppressRequestItem},
  {0, 0},
};
static PyType_Spec __pyx_type_7pylivox_PyRainFogSuppressRequestItem_spec = {
  "pylivox.PyRainFogSuppressRequestItem",
  sizeof(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7pylivox_PyRainFogSuppressRequestItem_slots,
};
#else

static PyTypeObject __pyx_type_7pylivox_PyRainFogSuppressRequestItem = {
  PyVarObject_HEAD_INIT(0, 0)
  "pylivox.""PyRainFogSuppressRequestItem", /*tp_name*/
  sizeof(struct __pyx_obj_7pylivox_PyRainFogSuppressRequestItem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7pylivox_PyRainFogSuppressRequestItem, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7pylivox_PyRainFogSuppressRequestItem, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7pylivox_PyRainFogSuppressRequestItem, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7pylivox_28PyRainFogSuppressRequestItem_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7pylivox_PyRainFogSuppressRequestItem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if PY_VERSION_HEX >= 0x030d00A4
  0, /*tp_versions_used*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_u_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 1, 0, 0},
    {&__pyx_kp_u_0000000000000000, __pyx_k_0000000000000000, sizeof(__pyx_k_0000000000000000), 0, 1, 0, 0},
    {&__pyx_n_s_DeviceTypeHub, __pyx_k_DeviceTypeHub, sizeof(__pyx_k_DeviceTypeHub), 0, 0, 1, 1},
    {&__pyx_n_s_DeviceTypeLidarAvia, __pyx_k_DeviceTypeLidarAvia, sizeof(__pyx_k_DeviceTypeLidarAvia), 0, 0, 1, 1},
    {&__pyx_n_s_DeviceTypeLidarHorizon, __pyx_k_DeviceTypeLidarHorizon, sizeof(__pyx_k_DeviceTypeLidarHorizon), 0, 0, 1, 1},
    {&__pyx_n_s_DeviceTypeLidarMid40, __pyx_k_DeviceTypeLidarMid40, sizeof(__pyx_k_DeviceTypeLidarMid40), 0, 0, 1, 1},
    {&__pyx_n_s_DeviceTypeLidarMid70, __pyx_k_DeviceTypeLidarMid70, sizeof(__pyx_k_DeviceTypeLidarMid70), 0, 0, 1, 1},
    {&__pyx_n_s_DeviceTypeLidarTele, __pyx_k_DeviceTypeLidarTele, sizeof(__pyx_k_DeviceTypeLidarTele), 0, 0, 1, 1},
    {&__pyx_n_s_EventConnect, __pyx_k_EventConnect, sizeof(__pyx_k_EventConnect), 0, 0, 1, 1},
    {&__pyx_n_s_EventDisconnect, __pyx_k_EventDisconnect, sizeof(__pyx_k_EventDisconnect), 0, 0, 1, 1},
    {&__pyx_n_s_EventHubConnectionChange, __pyx_k_EventHubConnectionChange, sizeof(__pyx_k_EventHubConnectionChange), 0, 0, 1, 1},
    {&__pyx_n_s_EventStateChange, __pyx_k_EventStateChange, sizeof(__pyx_k_EventStateChange), 0, 0, 1, 1},
    {&__pyx_n_s_ImuFreq0Hz, __pyx_k_ImuFreq0Hz, sizeof(__pyx_k_ImuFreq0Hz), 0, 0, 1, 1},
    {&__pyx_n_s_ImuFreq200Hz, __pyx_k_ImuFreq200Hz, sizeof(__pyx_k_ImuFreq200Hz), 0, 0, 1, 1},
    {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_k_Incompatible_checksums_0x_x_vs_0, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0), 0, 0, 1, 0},
    {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
    {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
    {&__pyx_n_s_LIVOX_SDK_MAJOR_VERSION, __pyx_k_LIVOX_SDK_MAJOR_VERSION, sizeof(__pyx_k_LIVOX_SDK_MAJOR_VERSION), 0, 0, 1, 1},
    {&__pyx_n_s_LIVOX_SDK_MINOR_VERSION, __pyx_k_LIVOX_SDK_MINOR_VERSION, sizeof(__pyx_k_LIVOX_SDK_MINOR_VERSION), 0, 0, 1, 1},
    {&__pyx_n_s_LIVOX_SDK_PATCH_VERSION, __pyx_k_LIVOX_SDK_PATCH_VERSION, sizeof(__pyx_k_LIVOX_SDK_PATCH_VERSION), 0, 0, 1, 1},
    {&__pyx_n_s_LidarDynamicIpMode, __pyx_k_LidarDynamicIpMode, sizeof(__pyx_k_LidarDynamicIpMode), 0, 0, 1, 1},
    {&__pyx_n_s_LidarFeatureNone, __pyx_k_LidarFeatureNone, sizeof(__pyx_k_LidarFeatureNone), 0, 0, 1, 1},
    {&__pyx_n_s_LidarFeatureRainFog, __pyx_k_LidarFeatureRainFog, sizeof(__pyx_k_LidarFeatureRainFog), 0, 0, 1, 1},
    {&__pyx_n_s_LidarModeNormal, __pyx_k_LidarModeNormal, sizeof(__pyx_k_LidarModeNormal), 0, 0, 1, 1},
    {&__pyx_n_s_LidarModePowerSaving, __pyx_k_LidarModePowerSaving, sizeof(__pyx_k_LidarModePowerSaving), 0, 0, 1, 1},
    {&__pyx_n_s_LidarModeStandby, __pyx_k_LidarModeStandby, sizeof(__pyx_k_LidarModeStandby), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStateError, __pyx_k_LidarStateError, sizeof(__pyx_k_LidarStateError), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStateInit, __pyx_k_LidarStateInit, sizeof(__pyx_k_LidarStateInit), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStateNormal, __pyx_k_LidarStateNormal, sizeof(__pyx_k_LidarStateNormal), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStatePowerSaving, __pyx_k_LidarStatePowerSaving, sizeof(__pyx_k_LidarStatePowerSaving), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStateStandBy, __pyx_k_LidarStateStandBy, sizeof(__pyx_k_LidarStateStandBy), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStateUnknown, __pyx_k_LidarStateUnknown, sizeof(__pyx_k_LidarStateUnknown), 0, 0, 1, 1},
    {&__pyx_n_s_LidarStaticIpMode, __pyx_k_LidarStaticIpMode, sizeof(__pyx_k_LidarStaticIpMode), 0, 0, 1, 1},
    {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
    {&__pyx_kp_s_More_than_one_union_attribute_pa, __pyx_k_More_than_one_union_attribute_pa, sizeof(__pyx_k_More_than_one_union_attribute_pa), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_any_of_th, __pyx_k_No_value_specified_for_any_of_th, sizeof(__pyx_k_No_value_specified_for_any_of_th), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at, __pyx_k_No_value_specified_for_struct_at, sizeof(__pyx_k_No_value_specified_for_struct_at), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_10, __pyx_k_No_value_specified_for_struct_at_10, sizeof(__pyx_k_No_value_specified_for_struct_at_10), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_11, __pyx_k_No_value_specified_for_struct_at_11, sizeof(__pyx_k_No_value_specified_for_struct_at_11), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_12, __pyx_k_No_value_specified_for_struct_at_12, sizeof(__pyx_k_No_value_specified_for_struct_at_12), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_13, __pyx_k_No_value_specified_for_struct_at_13, sizeof(__pyx_k_No_value_specified_for_struct_at_13), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_14, __pyx_k_No_value_specified_for_struct_at_14, sizeof(__pyx_k_No_value_specified_for_struct_at_14), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_15, __pyx_k_No_value_specified_for_struct_at_15, sizeof(__pyx_k_No_value_specified_for_struct_at_15), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_16, __pyx_k_No_value_specified_for_struct_at_16, sizeof(__pyx_k_No_value_specified_for_struct_at_16), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_2, __pyx_k_No_value_specified_for_struct_at_2, sizeof(__pyx_k_No_value_specified_for_struct_at_2), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_3, __pyx_k_No_value_specified_for_struct_at_3, sizeof(__pyx_k_No_value_specified_for_struct_at_3), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_4, __pyx_k_No_value_specified_for_struct_at_4, sizeof(__pyx_k_No_value_specified_for_struct_at_4), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_5, __pyx_k_No_value_specified_for_struct_at_5, sizeof(__pyx_k_No_value_specified_for_struct_at_5), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_6, __pyx_k_No_value_specified_for_struct_at_6, sizeof(__pyx_k_No_value_specified_for_struct_at_6), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_7, __pyx_k_No_value_specified_for_struct_at_7, sizeof(__pyx_k_No_value_specified_for_struct_at_7), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_8, __pyx_k_No_value_specified_for_struct_at_8, sizeof(__pyx_k_No_value_specified_for_struct_at_8), 0, 0, 1, 0},
    {&__pyx_kp_s_No_value_specified_for_struct_at_9, __pyx_k_No_value_specified_for_struct_at_9, sizeof(__pyx_k_No_value_specified_for_struct_at_9), 0, 0, 1, 0},
    {&__pyx_n_s_NoneRepetitiveScanPattern, __pyx_k_NoneRepetitiveScanPattern, sizeof(__pyx_k_NoneRepetitiveScanPattern), 0, 0, 1, 1},
    {&__pyx_n_s_OverflowError, __pyx_k_OverflowError, sizeof(__pyx_k_OverflowError), 0, 0, 1, 1},
    {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
    {&__pyx_kp_s_Pickling_of_struct_members_such, __pyx_k_Pickling_of_struct_members_such, sizeof(__pyx_k_Pickling_of_struct_members_such), 0, 0, 1, 0},
    {&__pyx_n_s_PointCloudReturnDual, __pyx_k_PointCloudReturnDual, sizeof(__pyx_k_PointCloudReturnDual), 0, 0, 1, 1},
    {&__pyx_n_s_PointCloudReturnFirst, __pyx_k_PointCloudReturnFirst, sizeof(__pyx_k_PointCloudReturnFirst), 0, 0, 1, 1},
    {&__pyx_n_s_PointCloudReturnStrongest, __pyx_k_PointCloudReturnStrongest, sizeof(__pyx_k_PointCloudReturnStrongest), 0, 0, 1, 1},
    {&__pyx_n_s_PointCloudReturnTriple, __pyx_k_PointCloudReturnTriple, sizeof(__pyx_k_PointCloudReturnTriple), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeCartesian, __pyx_k_PointDataTypeCartesian, sizeof(__pyx_k_PointDataTypeCartesian), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeDualExtendCartesian, __pyx_k_PointDataTypeDualExtendCartesian, sizeof(__pyx_k_PointDataTypeDualExtendCartesian), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeDualExtendSpherical, __pyx_k_PointDataTypeDualExtendSpherical, sizeof(__pyx_k_PointDataTypeDualExtendSpherical), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeExtendCartesian, __pyx_k_PointDataTypeExtendCartesian, sizeof(__pyx_k_PointDataTypeExtendCartesian), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeExtendSpherical, __pyx_k_PointDataTypeExtendSpherical, sizeof(__pyx_k_PointDataTypeExtendSpherical), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeImu, __pyx_k_PointDataTypeImu, sizeof(__pyx_k_PointDataTypeImu), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeMax, __pyx_k_PointDataTypeMax, sizeof(__pyx_k_PointDataTypeMax), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeSpherical, __pyx_k_PointDataTypeSpherical, sizeof(__pyx_k_PointDataTypeSpherical), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeTripleExtendCartesi, __pyx_k_PointDataTypeTripleExtendCartesi, sizeof(__pyx_k_PointDataTypeTripleExtendCartesi), 0, 0, 1, 1},
    {&__pyx_n_s_PointDataTypeTripleExtendSpheric, __pyx_k_PointDataTypeTripleExtendSpheric, sizeof(__pyx_k_PointDataTypeTripleExtendSpheric), 0, 0, 1, 1},
    {&__pyx_n_s_PyAddHubToConnect, __pyx_k_PyAddHubToConnect, sizeof(__pyx_k_PyAddHubToConnect), 0, 0, 1, 1},
    {&__pyx_n_s_PyAddLidarToConnect, __pyx_k_PyAddLidarToConnect, sizeof(__pyx_k_PyAddLidarToConnect), 0, 0, 1, 1},
    {&__pyx_n_s_PyBroadcastDeviceInfo, __pyx_k_PyBroadcastDeviceInfo, sizeof(__pyx_k_PyBroadcastDeviceInfo), 0, 0, 1, 1},
    {&__pyx_n_s_PyBroadcastDeviceInfo___reduce_c, __pyx_k_PyBroadcastDeviceInfo___reduce_c, sizeof(__pyx_k_PyBroadcastDeviceInfo___reduce_c), 0, 0, 1, 1},
    {&__pyx_n_s_PyBroadcastDeviceInfo___setstate, __pyx_k_PyBroadcastDeviceInfo___setstate, sizeof(__pyx_k_PyBroadcastDeviceInfo___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_PyConnectedLidarInfo, __pyx_k_PyConnectedLidarInfo, sizeof(__pyx_k_PyConnectedLidarInfo), 0, 0, 1, 1},
    {&__pyx_n_s_PyConnectedLidarInfo___reduce_cy, __pyx_k_PyConnectedLidarInfo___reduce_cy, sizeof(__pyx_k_PyConnectedLidarInfo___reduce_cy), 0, 0, 1, 1},
    {&__pyx_n_s_PyConnectedLidarInfo___setstate, __pyx_k_PyConnectedLidarInfo___setstate, sizeof(__pyx_k_PyConnectedLidarInfo___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceBroadcastCode, __pyx_k_PyDeviceBroadcastCode, sizeof(__pyx_k_PyDeviceBroadcastCode), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceBroadcastCode___reduce_c, __pyx_k_PyDeviceBroadcastCode___reduce_c, sizeof(__pyx_k_PyDeviceBroadcastCode___reduce_c), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceBroadcastCode___setstate, __pyx_k_PyDeviceBroadcastCode___setstate, sizeof(__pyx_k_PyDeviceBroadcastCode___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent, __pyx_k_PyDeviceEvent, sizeof(__pyx_k_PyDeviceEvent), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent_EventConnect, __pyx_k_PyDeviceEvent_EventConnect, sizeof(__pyx_k_PyDeviceEvent_EventConnect), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent_EventDisconnect, __pyx_k_PyDeviceEvent_EventDisconnect, sizeof(__pyx_k_PyDeviceEvent_EventDisconnect), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent_EventHubConnection, __pyx_k_PyDeviceEvent_EventHubConnection, sizeof(__pyx_k_PyDeviceEvent_EventHubConnection), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent_EventStateChange, __pyx_k_PyDeviceEvent_EventStateChange, sizeof(__pyx_k_PyDeviceEvent_EventStateChange), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent___reduce_cython, __pyx_k_PyDeviceEvent___reduce_cython, sizeof(__pyx_k_PyDeviceEvent___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceEvent___setstate_cython, __pyx_k_PyDeviceEvent___setstate_cython, sizeof(__pyx_k_PyDeviceEvent___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceInfo, __pyx_k_PyDeviceInfo, sizeof(__pyx_k_PyDeviceInfo), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceInfo___reduce_cython, __pyx_k_PyDeviceInfo___reduce_cython, sizeof(__pyx_k_PyDeviceInfo___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceInfo___setstate_cython, __pyx_k_PyDeviceInfo___setstate_cython, sizeof(__pyx_k_PyDeviceInfo___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType, __pyx_k_PyDeviceType, sizeof(__pyx_k_PyDeviceType), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType_DeviceTypeHub, __pyx_k_PyDeviceType_DeviceTypeHub, sizeof(__pyx_k_PyDeviceType_DeviceTypeHub), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType_DeviceTypeLidarAvia, __pyx_k_PyDeviceType_DeviceTypeLidarAvia, sizeof(__pyx_k_PyDeviceType_DeviceTypeLidarAvia), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType_DeviceTypeLidarHori, __pyx_k_PyDeviceType_DeviceTypeLidarHori, sizeof(__pyx_k_PyDeviceType_DeviceTypeLidarHori), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType_DeviceTypeLidarMid4, __pyx_k_PyDeviceType_DeviceTypeLidarMid4, sizeof(__pyx_k_PyDeviceType_DeviceTypeLidarMid4), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType_DeviceTypeLidarMid7, __pyx_k_PyDeviceType_DeviceTypeLidarMid7, sizeof(__pyx_k_PyDeviceType_DeviceTypeLidarMid7), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType_DeviceTypeLidarTele, __pyx_k_PyDeviceType_DeviceTypeLidarTele, sizeof(__pyx_k_PyDeviceType_DeviceTypeLidarTele), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType___reduce_cython, __pyx_k_PyDeviceType___reduce_cython, sizeof(__pyx_k_PyDeviceType___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyDeviceType___setstate_cython, __pyx_k_PyDeviceType___setstate_cython, sizeof(__pyx_k_PyDeviceType___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyDisableConsoleLogger, __pyx_k_PyDisableConsoleLogger, sizeof(__pyx_k_PyDisableConsoleLogger), 0, 0, 1, 1},
    {&__pyx_n_s_PyDisconnectDevice, __pyx_k_PyDisconnectDevice, sizeof(__pyx_k_PyDisconnectDevice), 0, 0, 1, 1},
    {&__pyx_n_s_PyErrorMessage, __pyx_k_PyErrorMessage, sizeof(__pyx_k_PyErrorMessage), 0, 0, 1, 1},
    {&__pyx_n_s_PyErrorMessage___reduce_cython, __pyx_k_PyErrorMessage___reduce_cython, sizeof(__pyx_k_PyErrorMessage___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyErrorMessage___setstate_cython, __pyx_k_PyErrorMessage___setstate_cython, sizeof(__pyx_k_PyErrorMessage___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyGetConnectedDevices, __pyx_k_PyGetConnectedDevices, sizeof(__pyx_k_PyGetConnectedDevices), 0, 0, 1, 1},
    {&__pyx_n_s_PyGetLivoxSdkVersion, __pyx_k_PyGetLivoxSdkVersion, sizeof(__pyx_k_PyGetLivoxSdkVersion), 0, 0, 1, 1},
    {&__pyx_n_s_PyHubErrorCode, __pyx_k_PyHubErrorCode, sizeof(__pyx_k_PyHubErrorCode), 0, 0, 1, 1},
    {&__pyx_n_s_PyHubErrorCode___reduce_cython, __pyx_k_PyHubErrorCode___reduce_cython, sizeof(__pyx_k_PyHubErrorCode___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyHubErrorCode___setstate_cython, __pyx_k_PyHubErrorCode___setstate_cython, sizeof(__pyx_k_PyHubErrorCode___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyHubGetLidarHandle, __pyx_k_PyHubGetLidarHandle, sizeof(__pyx_k_PyHubGetLidarHandle), 0, 0, 1, 1},
    {&__pyx_n_s_PyHubStartSampling, __pyx_k_PyHubStartSampling, sizeof(__pyx_k_PyHubStartSampling), 0, 0, 1, 1},
    {&__pyx_n_s_PyHubStopSampling, __pyx_k_PyHubStopSampling, sizeof(__pyx_k_PyHubStopSampling), 0, 0, 1, 1},
    {&__pyx_n_s_PyImuFreq, __pyx_k_PyImuFreq, sizeof(__pyx_k_PyImuFreq), 0, 0, 1, 1},
    {&__pyx_n_s_PyImuFreq_ImuFreq0Hz, __pyx_k_PyImuFreq_ImuFreq0Hz, sizeof(__pyx_k_PyImuFreq_ImuFreq0Hz), 0, 0, 1, 1},
    {&__pyx_n_s_PyImuFreq_ImuFreq200Hz, __pyx_k_PyImuFreq_ImuFreq200Hz, sizeof(__pyx_k_PyImuFreq_ImuFreq200Hz), 0, 0, 1, 1},
    {&__pyx_n_s_PyImuFreq___reduce_cython, __pyx_k_PyImuFreq___reduce_cython, sizeof(__pyx_k_PyImuFreq___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyImuFreq___setstate_cython, __pyx_k_PyImuFreq___setstate_cython, sizeof(__pyx_k_PyImuFreq___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyInit, __pyx_k_PyInit, sizeof(__pyx_k_PyInit), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarErrorCode, __pyx_k_PyLidarErrorCode, sizeof(__pyx_k_PyLidarErrorCode), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarErrorCode___reduce_cython, __pyx_k_PyLidarErrorCode___reduce_cython, sizeof(__pyx_k_PyLidarErrorCode___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarErrorCode___setstate_cyth, __pyx_k_PyLidarErrorCode___setstate_cyth, sizeof(__pyx_k_PyLidarErrorCode___setstate_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarFeature, __pyx_k_PyLidarFeature, sizeof(__pyx_k_PyLidarFeature), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarFeature_LidarFeatureNone, __pyx_k_PyLidarFeature_LidarFeatureNone, sizeof(__pyx_k_PyLidarFeature_LidarFeatureNone), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarFeature_LidarFeatureRainF, __pyx_k_PyLidarFeature_LidarFeatureRainF, sizeof(__pyx_k_PyLidarFeature_LidarFeatureRainF), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarFeature___reduce_cython, __pyx_k_PyLidarFeature___reduce_cython, sizeof(__pyx_k_PyLidarFeature___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarFeature___setstate_cython, __pyx_k_PyLidarFeature___setstate_cython, sizeof(__pyx_k_PyLidarFeature___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarIpMode, __pyx_k_PyLidarIpMode, sizeof(__pyx_k_PyLidarIpMode), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarIpMode_LidarDynamicIpMode, __pyx_k_PyLidarIpMode_LidarDynamicIpMode, sizeof(__pyx_k_PyLidarIpMode_LidarDynamicIpMode), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarIpMode_LidarStaticIpMode, __pyx_k_PyLidarIpMode_LidarStaticIpMode, sizeof(__pyx_k_PyLidarIpMode_LidarStaticIpMode), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarIpMode___reduce_cython, __pyx_k_PyLidarIpMode___reduce_cython, sizeof(__pyx_k_PyLidarIpMode___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarIpMode___setstate_cython, __pyx_k_PyLidarIpMode___setstate_cython, sizeof(__pyx_k_PyLidarIpMode___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarMode, __pyx_k_PyLidarMode, sizeof(__pyx_k_PyLidarMode), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarModeRequestItem, __pyx_k_PyLidarModeRequestItem, sizeof(__pyx_k_PyLidarModeRequestItem), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarModeRequestItem___reduce, __pyx_k_PyLidarModeRequestItem___reduce, sizeof(__pyx_k_PyLidarModeRequestItem___reduce), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarModeRequestItem___setstat, __pyx_k_PyLidarModeRequestItem___setstat, sizeof(__pyx_k_PyLidarModeRequestItem___setstat), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarMode_LidarModeNormal, __pyx_k_PyLidarMode_LidarModeNormal, sizeof(__pyx_k_PyLidarMode_LidarModeNormal), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarMode_LidarModePowerSaving, __pyx_k_PyLidarMode_LidarModePowerSaving, sizeof(__pyx_k_PyLidarMode_LidarModePowerSaving), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarMode_LidarModeStandby, __pyx_k_PyLidarMode_LidarModeStandby, sizeof(__pyx_k_PyLidarMode_LidarModeStandby), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarMode___reduce_cython, __pyx_k_PyLidarMode___reduce_cython, sizeof(__pyx_k_PyLidarMode___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarMode___setstate_cython, __pyx_k_PyLidarMode___setstate_cython, sizeof(__pyx_k_PyLidarMode___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarScanPattern, __pyx_k_PyLidarScanPattern, sizeof(__pyx_k_PyLidarScanPattern), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarScanPattern_NoneRepetitiv, __pyx_k_PyLidarScanPattern_NoneRepetitiv, sizeof(__pyx_k_PyLidarScanPattern_NoneRepetitiv), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarScanPattern_RepetitiveSca, __pyx_k_PyLidarScanPattern_RepetitiveSca, sizeof(__pyx_k_PyLidarScanPattern_RepetitiveSca), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarScanPattern___reduce_cyth, __pyx_k_PyLidarScanPattern___reduce_cyth, sizeof(__pyx_k_PyLidarScanPattern___reduce_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarScanPattern___setstate_cy, __pyx_k_PyLidarScanPattern___setstate_cy, sizeof(__pyx_k_PyLidarScanPattern___setstate_cy), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState, __pyx_k_PyLidarState, sizeof(__pyx_k_PyLidarState), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState_LidarStateError, __pyx_k_PyLidarState_LidarStateError, sizeof(__pyx_k_PyLidarState_LidarStateError), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState_LidarStateInit, __pyx_k_PyLidarState_LidarStateInit, sizeof(__pyx_k_PyLidarState_LidarStateInit), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState_LidarStateNormal, __pyx_k_PyLidarState_LidarStateNormal, sizeof(__pyx_k_PyLidarState_LidarStateNormal), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState_LidarStatePowerSavi, __pyx_k_PyLidarState_LidarStatePowerSavi, sizeof(__pyx_k_PyLidarState_LidarStatePowerSavi), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState_LidarStateStandBy, __pyx_k_PyLidarState_LidarStateStandBy, sizeof(__pyx_k_PyLidarState_LidarStateStandBy), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState_LidarStateUnknown, __pyx_k_PyLidarState_LidarStateUnknown, sizeof(__pyx_k_PyLidarState_LidarStateUnknown), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState___reduce_cython, __pyx_k_PyLidarState___reduce_cython, sizeof(__pyx_k_PyLidarState___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLidarState___setstate_cython, __pyx_k_PyLidarState___setstate_cython, sizeof(__pyx_k_PyLidarState___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxDualExtendRawPoint, __pyx_k_PyLivoxDualExtendRawPoint, sizeof(__pyx_k_PyLivoxDualExtendRawPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxDualExtendRawPoint___redu, __pyx_k_PyLivoxDualExtendRawPoint___redu, sizeof(__pyx_k_PyLivoxDualExtendRawPoint___redu), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxDualExtendRawPoint___sets, __pyx_k_PyLivoxDualExtendRawPoint___sets, sizeof(__pyx_k_PyLivoxDualExtendRawPoint___sets), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxDualExtendSpherPoint, __pyx_k_PyLivoxDualExtendSpherPoint, sizeof(__pyx_k_PyLivoxDualExtendSpherPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxDualExtendSpherPoint___re, __pyx_k_PyLivoxDualExtendSpherPoint___re, sizeof(__pyx_k_PyLivoxDualExtendSpherPoint___re), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxDualExtendSpherPoint___se, __pyx_k_PyLivoxDualExtendSpherPoint___se, sizeof(__pyx_k_PyLivoxDualExtendSpherPoint___se), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxEthPacket, __pyx_k_PyLivoxEthPacket, sizeof(__pyx_k_PyLivoxEthPacket), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxEthPacket___reduce_cython, __pyx_k_PyLivoxEthPacket___reduce_cython, sizeof(__pyx_k_PyLivoxEthPacket___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxEthPacket___setstate_cyth, __pyx_k_PyLivoxEthPacket___setstate_cyth, sizeof(__pyx_k_PyLivoxEthPacket___setstate_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxExtendRawPoint, __pyx_k_PyLivoxExtendRawPoint, sizeof(__pyx_k_PyLivoxExtendRawPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxExtendRawPoint___reduce_c, __pyx_k_PyLivoxExtendRawPoint___reduce_c, sizeof(__pyx_k_PyLivoxExtendRawPoint___reduce_c), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxExtendRawPoint___setstate, __pyx_k_PyLivoxExtendRawPoint___setstate, sizeof(__pyx_k_PyLivoxExtendRawPoint___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxExtendSpherPoint, __pyx_k_PyLivoxExtendSpherPoint, sizeof(__pyx_k_PyLivoxExtendSpherPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxExtendSpherPoint___reduce, __pyx_k_PyLivoxExtendSpherPoint___reduce, sizeof(__pyx_k_PyLivoxExtendSpherPoint___reduce), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxExtendSpherPoint___setsta, __pyx_k_PyLivoxExtendSpherPoint___setsta, sizeof(__pyx_k_PyLivoxExtendSpherPoint___setsta), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxImuPoint, __pyx_k_PyLivoxImuPoint, sizeof(__pyx_k_PyLivoxImuPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxImuPoint___reduce_cython, __pyx_k_PyLivoxImuPoint___reduce_cython, sizeof(__pyx_k_PyLivoxImuPoint___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxImuPoint___setstate_cytho, __pyx_k_PyLivoxImuPoint___setstate_cytho, sizeof(__pyx_k_PyLivoxImuPoint___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxPoint, __pyx_k_PyLivoxPoint, sizeof(__pyx_k_PyLivoxPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxPoint___reduce_cython, __pyx_k_PyLivoxPoint___reduce_cython, sizeof(__pyx_k_PyLivoxPoint___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxPoint___setstate_cython, __pyx_k_PyLivoxPoint___setstate_cython, sizeof(__pyx_k_PyLivoxPoint___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxRawPoint, __pyx_k_PyLivoxRawPoint, sizeof(__pyx_k_PyLivoxRawPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxRawPoint___reduce_cython, __pyx_k_PyLivoxRawPoint___reduce_cython, sizeof(__pyx_k_PyLivoxRawPoint___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxRawPoint___setstate_cytho, __pyx_k_PyLivoxRawPoint___setstate_cytho, sizeof(__pyx_k_PyLivoxRawPoint___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxSdkVersion, __pyx_k_PyLivoxSdkVersion, sizeof(__pyx_k_PyLivoxSdkVersion), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxSdkVersion___reduce_cytho, __pyx_k_PyLivoxSdkVersion___reduce_cytho, sizeof(__pyx_k_PyLivoxSdkVersion___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxSdkVersion___setstate_cyt, __pyx_k_PyLivoxSdkVersion___setstate_cyt, sizeof(__pyx_k_PyLivoxSdkVersion___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxSpherPoint, __pyx_k_PyLivoxSpherPoint, sizeof(__pyx_k_PyLivoxSpherPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxSpherPoint___reduce_cytho, __pyx_k_PyLivoxSpherPoint___reduce_cytho, sizeof(__pyx_k_PyLivoxSpherPoint___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxSpherPoint___setstate_cyt, __pyx_k_PyLivoxSpherPoint___setstate_cyt, sizeof(__pyx_k_PyLivoxSpherPoint___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus, __pyx_k_PyLivoxStatus, sizeof(__pyx_k_PyLivoxStatus), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusChannelNotEx, __pyx_k_PyLivoxStatus_StatusChannelNotEx, sizeof(__pyx_k_PyLivoxStatus_StatusChannelNotEx), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusFailure, __pyx_k_PyLivoxStatus_StatusFailure, sizeof(__pyx_k_PyLivoxStatus_StatusFailure), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusHandlerImplN, __pyx_k_PyLivoxStatus_StatusHandlerImplN, sizeof(__pyx_k_PyLivoxStatus_StatusHandlerImplN), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusInvalidHandl, __pyx_k_PyLivoxStatus_StatusInvalidHandl, sizeof(__pyx_k_PyLivoxStatus_StatusInvalidHandl), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusNotConnected, __pyx_k_PyLivoxStatus_StatusNotConnected, sizeof(__pyx_k_PyLivoxStatus_StatusNotConnected), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusNotEnoughMem, __pyx_k_PyLivoxStatus_StatusNotEnoughMem, sizeof(__pyx_k_PyLivoxStatus_StatusNotEnoughMem), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusNotSupported, __pyx_k_PyLivoxStatus_StatusNotSupported, sizeof(__pyx_k_PyLivoxStatus_StatusNotSupported), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusSendFailed, __pyx_k_PyLivoxStatus_StatusSendFailed, sizeof(__pyx_k_PyLivoxStatus_StatusSendFailed), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusSuccess, __pyx_k_PyLivoxStatus_StatusSuccess, sizeof(__pyx_k_PyLivoxStatus_StatusSuccess), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus_StatusTimeout, __pyx_k_PyLivoxStatus_StatusTimeout, sizeof(__pyx_k_PyLivoxStatus_StatusTimeout), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus___reduce_cython, __pyx_k_PyLivoxStatus___reduce_cython, sizeof(__pyx_k_PyLivoxStatus___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxStatus___setstate_cython, __pyx_k_PyLivoxStatus___setstate_cython, sizeof(__pyx_k_PyLivoxStatus___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxTripleExtendRawPoint, __pyx_k_PyLivoxTripleExtendRawPoint, sizeof(__pyx_k_PyLivoxTripleExtendRawPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxTripleExtendRawPoint___re, __pyx_k_PyLivoxTripleExtendRawPoint___re, sizeof(__pyx_k_PyLivoxTripleExtendRawPoint___re), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxTripleExtendRawPoint___se, __pyx_k_PyLivoxTripleExtendRawPoint___se, sizeof(__pyx_k_PyLivoxTripleExtendRawPoint___se), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxTripleExtendSpherPoint, __pyx_k_PyLivoxTripleExtendSpherPoint, sizeof(__pyx_k_PyLivoxTripleExtendSpherPoint), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxTripleExtendSpherPoint_2, __pyx_k_PyLivoxTripleExtendSpherPoint_2, sizeof(__pyx_k_PyLivoxTripleExtendSpherPoint_2), 0, 0, 1, 1},
    {&__pyx_n_s_PyLivoxTripleExtendSpherPoint_3, __pyx_k_PyLivoxTripleExtendSpherPoint_3, sizeof(__pyx_k_PyLivoxTripleExtendSpherPoint_3), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode, __pyx_k_PyPointCloudReturnMode, sizeof(__pyx_k_PyPointCloudReturnMode), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode_PointClou, __pyx_k_PyPointCloudReturnMode_PointClou, sizeof(__pyx_k_PyPointCloudReturnMode_PointClou), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode_PointClou_2, __pyx_k_PyPointCloudReturnMode_PointClou_2, sizeof(__pyx_k_PyPointCloudReturnMode_PointClou_2), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode_PointClou_3, __pyx_k_PyPointCloudReturnMode_PointClou_3, sizeof(__pyx_k_PyPointCloudReturnMode_PointClou_3), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode_PointClou_4, __pyx_k_PyPointCloudReturnMode_PointClou_4, sizeof(__pyx_k_PyPointCloudReturnMode_PointClou_4), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode___reduce, __pyx_k_PyPointCloudReturnMode___reduce, sizeof(__pyx_k_PyPointCloudReturnMode___reduce), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointCloudReturnMode___setstat, __pyx_k_PyPointCloudReturnMode___setstat, sizeof(__pyx_k_PyPointCloudReturnMode___setstat), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType, __pyx_k_PyPointDataType, sizeof(__pyx_k_PyPointDataType), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeCar, __pyx_k_PyPointDataType_PointDataTypeCar, sizeof(__pyx_k_PyPointDataType_PointDataTypeCar), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeDua, __pyx_k_PyPointDataType_PointDataTypeDua, sizeof(__pyx_k_PyPointDataType_PointDataTypeDua), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeDua_2, __pyx_k_PyPointDataType_PointDataTypeDua_2, sizeof(__pyx_k_PyPointDataType_PointDataTypeDua_2), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeExt, __pyx_k_PyPointDataType_PointDataTypeExt, sizeof(__pyx_k_PyPointDataType_PointDataTypeExt), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeExt_2, __pyx_k_PyPointDataType_PointDataTypeExt_2, sizeof(__pyx_k_PyPointDataType_PointDataTypeExt_2), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeImu, __pyx_k_PyPointDataType_PointDataTypeImu, sizeof(__pyx_k_PyPointDataType_PointDataTypeImu), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeMax, __pyx_k_PyPointDataType_PointDataTypeMax, sizeof(__pyx_k_PyPointDataType_PointDataTypeMax), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeSph, __pyx_k_PyPointDataType_PointDataTypeSph, sizeof(__pyx_k_PyPointDataType_PointDataTypeSph), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeTri, __pyx_k_PyPointDataType_PointDataTypeTri, sizeof(__pyx_k_PyPointDataType_PointDataTypeTri), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType_PointDataTypeTri_2, __pyx_k_PyPointDataType_PointDataTypeTri_2, sizeof(__pyx_k_PyPointDataType_PointDataTypeTri_2), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType___reduce_cython, __pyx_k_PyPointDataType___reduce_cython, sizeof(__pyx_k_PyPointDataType___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyPointDataType___setstate_cytho, __pyx_k_PyPointDataType___setstate_cytho, sizeof(__pyx_k_PyPointDataType___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_PyRainFogSuppressRequestItem, __pyx_k_PyRainFogSuppressRequestItem, sizeof(__pyx_k_PyRainFogSuppressRequestItem), 0, 0, 1, 1},
    {&__pyx_n_s_PyRainFogSuppressRequestItem___r, __pyx_k_PyRainFogSuppressRequestItem___r, sizeof(__pyx_k_PyRainFogSuppressRequestItem___r), 0, 0, 1, 1},
    {&__pyx_n_s_PyRainFogSuppressRequestItem___s, __pyx_k_PyRainFogSuppressRequestItem___s, sizeof(__pyx_k_PyRainFogSuppressRequestItem___s), 0, 0, 1, 1},
    {&__pyx_n_s_PyReturnCode, __pyx_k_PyReturnCode, sizeof(__pyx_k_PyReturnCode), 0, 0, 1, 1},
    {&__pyx_n_s_PyReturnCode___reduce_cython, __pyx_k_PyReturnCode___reduce_cython, sizeof(__pyx_k_PyReturnCode___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyReturnCode___setstate_cython, __pyx_k_PyReturnCode___setstate_cython, sizeof(__pyx_k_PyReturnCode___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PySaveLoggerFile, __pyx_k_PySaveLoggerFile, sizeof(__pyx_k_PySaveLoggerFile), 0, 0, 1, 1},
    {&__pyx_n_s_PySetCartesianCoordinate, __pyx_k_PySetCartesianCoordinate, sizeof(__pyx_k_PySetCartesianCoordinate), 0, 0, 1, 1},
    {&__pyx_n_s_PySetSphericalCoordinate, __pyx_k_PySetSphericalCoordinate, sizeof(__pyx_k_PySetSphericalCoordinate), 0, 0, 1, 1},
    {&__pyx_n_s_PyStart, __pyx_k_PyStart, sizeof(__pyx_k_PyStart), 0, 0, 1, 1},
    {&__pyx_n_s_PyStatusUnion, __pyx_k_PyStatusUnion, sizeof(__pyx_k_PyStatusUnion), 0, 0, 1, 1},
    {&__pyx_n_s_PyStatusUnion___reduce_cython, __pyx_k_PyStatusUnion___reduce_cython, sizeof(__pyx_k_PyStatusUnion___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyStatusUnion___setstate_cython, __pyx_k_PyStatusUnion___setstate_cython, sizeof(__pyx_k_PyStatusUnion___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType, __pyx_k_PyTimestampType, sizeof(__pyx_k_PyTimestampType), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType_TimestampTypeNoS, __pyx_k_PyTimestampType_TimestampTypeNoS, sizeof(__pyx_k_PyTimestampType_TimestampTypeNoS), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType_TimestampTypePps, __pyx_k_PyTimestampType_TimestampTypePps, sizeof(__pyx_k_PyTimestampType_TimestampTypePps), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType_TimestampTypePps_2, __pyx_k_PyTimestampType_TimestampTypePps_2, sizeof(__pyx_k_PyTimestampType_TimestampTypePps_2), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType_TimestampTypePtp, __pyx_k_PyTimestampType_TimestampTypePtp, sizeof(__pyx_k_PyTimestampType_TimestampTypePtp), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType_TimestampTypeRsv, __pyx_k_PyTimestampType_TimestampTypeRsv, sizeof(__pyx_k_PyTimestampType_TimestampTypeRsv), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType_TimestampTypeUnk, __pyx_k_PyTimestampType_TimestampTypeUnk, sizeof(__pyx_k_PyTimestampType_TimestampTypeUnk), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType___reduce_cython, __pyx_k_PyTimestampType___reduce_cython, sizeof(__pyx_k_PyTimestampType___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PyTimestampType___setstate_cytho, __pyx_k_PyTimestampType___setstate_cytho, sizeof(__pyx_k_PyTimestampType___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_PyUninit, __pyx_k_PyUninit, sizeof(__pyx_k_PyUninit), 0, 0, 1, 1},
    {&__pyx_n_s_RepetitiveScanPattern, __pyx_k_RepetitiveScanPattern, sizeof(__pyx_k_RepetitiveScanPattern), 0, 0, 1, 1},
    {&__pyx_n_s_StatusChannelNotExist, __pyx_k_StatusChannelNotExist, sizeof(__pyx_k_StatusChannelNotExist), 0, 0, 1, 1},
    {&__pyx_n_s_StatusFailure, __pyx_k_StatusFailure, sizeof(__pyx_k_StatusFailure), 0, 0, 1, 1},
    {&__pyx_n_s_StatusHandlerImplNotExist, __pyx_k_StatusHandlerImplNotExist, sizeof(__pyx_k_StatusHandlerImplNotExist), 0, 0, 1, 1},
    {&__pyx_n_s_StatusInvalidHandle, __pyx_k_StatusInvalidHandle, sizeof(__pyx_k_StatusInvalidHandle), 0, 0, 1, 1},
    {&__pyx_n_s_StatusNotConnected, __pyx_k_StatusNotConnected, sizeof(__pyx_k_StatusNotConnected), 0, 0, 1, 1},
    {&__pyx_n_s_StatusNotEnoughMemory, __pyx_k_StatusNotEnoughMemory, sizeof(__pyx_k_StatusNotEnoughMemory), 0, 0, 1, 1},
    {&__pyx_n_s_StatusNotSupported, __pyx_k_StatusNotSupported, sizeof(__pyx_k_StatusNotSupported), 0, 0, 1, 1},
    {&__pyx_n_s_StatusSendFailed, __pyx_k_StatusSendFailed, sizeof(__pyx_k_StatusSendFailed), 0, 0, 1, 1},
    {&__pyx_n_s_StatusSuccess, __pyx_k_StatusSuccess, sizeof(__pyx_k_StatusSuccess), 0, 0, 1, 1},
    {&__pyx_n_s_StatusTimeout, __pyx_k_StatusTimeout, sizeof(__pyx_k_StatusTimeout), 0, 0, 1, 1},
    {&__pyx_n_s_TimestampTypeNoSync, __pyx_k_TimestampTypeNoSync, sizeof(__pyx_k_TimestampTypeNoSync), 0, 0, 1, 1},
    {&__pyx_n_s_TimestampTypePps, __pyx_k_TimestampTypePps, sizeof(__pyx_k_TimestampTypePps), 0, 0, 1, 1},
    {&__pyx_n_s_TimestampTypePpsGps, __pyx_k_TimestampTypePpsGps, sizeof(__pyx_k_TimestampTypePpsGps), 0, 0, 1, 1},
    {&__pyx_n_s_TimestampTypePtp, __pyx_k_TimestampTypePtp, sizeof(__pyx_k_TimestampTypePtp), 0, 0, 1, 1},
    {&__pyx_n_s_TimestampTypeRsvd, __pyx_k_TimestampTypeRsvd, sizeof(__pyx_k_TimestampTypeRsvd), 0, 0, 1, 1},
    {&__pyx_n_s_TimestampTypeUnknown, __pyx_k_TimestampTypeUnknown, sizeof(__pyx_k_TimestampTypeUnknown), 0, 0, 1, 1},
    {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
    {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
    {&__pyx_n_s__205, __pyx_k__205, sizeof(__pyx_k__205), 0, 0, 1, 1},
    {&__pyx_kp_u__39, __pyx_k__39, sizeof(__pyx_k__39), 0, 1, 0, 0},
    {&__pyx_n_s__40, __pyx_k__40, sizeof(__pyx_k__40), 0, 0, 1, 1},
    {&__pyx_n_s_acc_x, __pyx_k_acc_x, sizeof(__pyx_k_acc_x), 0, 0, 1, 1},
    {&__pyx_n_s_acc_y, __pyx_k_acc_y, sizeof(__pyx_k_acc_y), 0, 0, 1, 1},
    {&__pyx_n_s_acc_z, __pyx_k_acc_z, sizeof(__pyx_k_acc_z), 0, 0, 1, 1},
    {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_broadcast_code, __pyx_k_broadcast_code, sizeof(__pyx_k_broadcast_code), 0, 0, 1, 1},
    {&__pyx_n_s_cb, __pyx_k_cb, sizeof(__pyx_k_cb), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_cmd_port, __pyx_k_cmd_port, sizeof(__pyx_k_cmd_port), 0, 0, 1, 1},
    {&__pyx_n_s_core, __pyx_k_core, sizeof(__pyx_k_core), 0, 0, 1, 1},
    {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
    {&__pyx_n_s_data_port, __pyx_k_data_port, sizeof(__pyx_k_data_port), 0, 0, 1, 1},
    {&__pyx_n_s_data_type, __pyx_k_data_type, sizeof(__pyx_k_data_type), 0, 0, 1, 1},
    {&__pyx_n_s_depth, __pyx_k_depth, sizeof(__pyx_k_depth), 0, 0, 1, 1},
    {&__pyx_n_s_depth1, __pyx_k_depth1, sizeof(__pyx_k_depth1), 0, 0, 1, 1},
    {&__pyx_n_s_depth2, __pyx_k_depth2, sizeof(__pyx_k_depth2), 0, 0, 1, 1},
    {&__pyx_n_s_depth3, __pyx_k_depth3, sizeof(__pyx_k_depth3), 0, 0, 1, 1},
    {&__pyx_n_s_dev_type, __pyx_k_dev_type, sizeof(__pyx_k_dev_type), 0, 0, 1, 1},
    {&__pyx_n_s_device_status, __pyx_k_device_status, sizeof(__pyx_k_device_status), 0, 0, 1, 1},
    {&__pyx_n_s_devices, __pyx_k_devices, sizeof(__pyx_k_devices), 0, 0, 1, 1},
    {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
    {&__pyx_n_s_dict_2, __pyx_k_dict_2, sizeof(__pyx_k_dict_2), 0, 0, 1, 1},
    {&__pyx_n_s_dirty_warn, __pyx_k_dirty_warn, sizeof(__pyx_k_dirty_warn), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
    {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
    {&__pyx_n_s_err_code, __pyx_k_err_code, sizeof(__pyx_k_err_code), 0, 0, 1, 1},
    {&__pyx_n_s_error_code, __pyx_k_error_code, sizeof(__pyx_k_error_code), 0, 0, 1, 1},
    {&__pyx_kp_s_error_code_lidar_error_code_hub, __pyx_k_error_code_lidar_error_code_hub, sizeof(__pyx_k_error_code_lidar_error_code_hub), 0, 0, 1, 0},
    {&__pyx_n_s_fan_status, __pyx_k_fan_status, sizeof(__pyx_k_fan_status), 0, 0, 1, 1},
    {&__pyx_n_s_feature, __pyx_k_feature, sizeof(__pyx_k_feature), 0, 0, 1, 1},
    {&__pyx_n_s_firmware_err, __pyx_k_firmware_err, sizeof(__pyx_k_firmware_err), 0, 0, 1, 1},
    {&__pyx_n_s_firmware_version, __pyx_k_firmware_version, sizeof(__pyx_k_firmware_version), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
    {&__pyx_n_s_gyro_x, __pyx_k_gyro_x, sizeof(__pyx_k_gyro_x), 0, 0, 1, 1},
    {&__pyx_n_s_gyro_y, __pyx_k_gyro_y, sizeof(__pyx_k_gyro_y), 0, 0, 1, 1},
    {&__pyx_n_s_gyro_z, __pyx_k_gyro_z, sizeof(__pyx_k_gyro_z), 0, 0, 1, 1},
    {&__pyx_n_s_handle, __pyx_k_handle, sizeof(__pyx_k_handle), 0, 0, 1, 1},
    {&__pyx_n_s_hub_error_code, __pyx_k_hub_error_code, sizeof(__pyx_k_hub_error_code), 0, 0, 1, 1},
    {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_s_ip, __pyx_k_ip, sizeof(__pyx_k_ip), 0, 0, 1, 1},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_kBroadcastCodeSize, __pyx_k_kBroadcastCodeSize, sizeof(__pyx_k_kBroadcastCodeSize), 0, 0, 1, 1},
    {&__pyx_n_s_kMaxLidarCount, __pyx_k_kMaxLidarCount, sizeof(__pyx_k_kMaxLidarCount), 0, 0, 1, 1},
    {&__pyx_n_s_lidar_error_code, __pyx_k_lidar_error_code, sizeof(__pyx_k_lidar_error_code), 0, 0, 1, 1},
    {&__pyx_n_s_lidar_link_status, __pyx_k_lidar_link_status, sizeof(__pyx_k_lidar_link_status), 0, 0, 1, 1},
    {&__pyx_n_s_lidar_status, __pyx_k_lidar_status, sizeof(__pyx_k_lidar_status), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_major, __pyx_k_major, sizeof(__pyx_k_major), 0, 0, 1, 1},
    {&__pyx_n_s_minor, __pyx_k_minor, sizeof(__pyx_k_minor), 0, 0, 1, 1},
    {&__pyx_n_s_motor_status, __pyx_k_motor_status, sizeof(__pyx_k_motor_status), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
    {&__pyx_n_s_patch, __pyx_k_patch, sizeof(__pyx_k_patch), 0, 0, 1, 1},
    {&__pyx_n_s_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 0, 1, 1},
    {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
    {&__pyx_n_s_pps_status, __pyx_k_pps_status, sizeof(__pyx_k_pps_status), 0, 0, 1, 1},
    {&__pyx_n_s_progress, __pyx_k_progress, sizeof(__pyx_k_progress), 0, 0, 1, 1},
    {&__pyx_kp_s_progress_status_code, __pyx_k_progress_status_code, sizeof(__pyx_k_progress_status_code), 0, 0, 1, 0},
    {&__pyx_n_s_ptp_status, __pyx_k_ptp_status, sizeof(__pyx_k_ptp_status), 0, 0, 1, 1},
    {&__pyx_n_s_pylivox, __pyx_k_pylivox, sizeof(__pyx_k_pylivox), 0, 0, 1, 1},
    {&__pyx_kp_s_pylivox_pyx, __pyx_k_pylivox_pyx, sizeof(__pyx_k_pylivox_pyx), 0, 0, 1, 0},
    {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyDeviceEvent, __pyx_k_pyx_unpickle_PyDeviceEvent, sizeof(__pyx_k_pyx_unpickle_PyDeviceEvent), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyDeviceType, __pyx_k_pyx_unpickle_PyDeviceType, sizeof(__pyx_k_pyx_unpickle_PyDeviceType), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyImuFreq, __pyx_k_pyx_unpickle_PyImuFreq, sizeof(__pyx_k_pyx_unpickle_PyImuFreq), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyLidarFeature, __pyx_k_pyx_unpickle_PyLidarFeature, sizeof(__pyx_k_pyx_unpickle_PyLidarFeature), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyLidarIpMode, __pyx_k_pyx_unpickle_PyLidarIpMode, sizeof(__pyx_k_pyx_unpickle_PyLidarIpMode), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyLidarMode, __pyx_k_pyx_unpickle_PyLidarMode, sizeof(__pyx_k_pyx_unpickle_PyLidarMode), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyLidarScanPatter, __pyx_k_pyx_unpickle_PyLidarScanPatter, sizeof(__pyx_k_pyx_unpickle_PyLidarScanPatter), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyLidarState, __pyx_k_pyx_unpickle_PyLidarState, sizeof(__pyx_k_pyx_unpickle_PyLidarState), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyLivoxStatus, __pyx_k_pyx_unpickle_PyLivoxStatus, sizeof(__pyx_k_pyx_unpickle_PyLivoxStatus), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyPointCloudRetur, __pyx_k_pyx_unpickle_PyPointCloudRetur, sizeof(__pyx_k_pyx_unpickle_PyPointCloudRetur), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyPointDataType, __pyx_k_pyx_unpickle_PyPointDataType, sizeof(__pyx_k_pyx_unpickle_PyPointDataType), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_PyTimestampType, __pyx_k_pyx_unpickle_PyTimestampType, sizeof(__pyx_k_pyx_unpickle_PyTimestampType), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
    {&__pyx_n_s_reflectivity, __pyx_k_reflectivity, sizeof(__pyx_k_reflectivity), 0, 0, 1, 1},
    {&__pyx_n_s_reflectivity1, __pyx_k_reflectivity1, sizeof(__pyx_k_reflectivity1), 0, 0, 1, 1},
    {&__pyx_n_s_reflectivity2, __pyx_k_reflectivity2, sizeof(__pyx_k_reflectivity2), 0, 0, 1, 1},
    {&__pyx_n_s_reflectivity3, __pyx_k_reflectivity3, sizeof(__pyx_k_reflectivity3), 0, 0, 1, 1},
    {&__pyx_n_s_reserved, __pyx_k_reserved, sizeof(__pyx_k_reserved), 0, 0, 1, 1},
    {&__pyx_n_s_ret_code, __pyx_k_ret_code, sizeof(__pyx_k_ret_code), 0, 0, 1, 1},
    {&__pyx_n_s_rsvd, __pyx_k_rsvd, sizeof(__pyx_k_rsvd), 0, 0, 1, 1},
    {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
    {&__pyx_n_s_self_heating, __pyx_k_self_heating, sizeof(__pyx_k_self_heating), 0, 0, 1, 1},
    {&__pyx_n_s_sensor_port, __pyx_k_sensor_port, sizeof(__pyx_k_sensor_port), 0, 0, 1, 1},
    {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
    {&__pyx_n_s_slot, __pyx_k_slot, sizeof(__pyx_k_slot), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
    {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
    {&__pyx_n_s_status, __pyx_k_status, sizeof(__pyx_k_status), 0, 0, 1, 1},
    {&__pyx_n_s_status_code, __pyx_k_status_code, sizeof(__pyx_k_status_code), 0, 0, 1, 1},
    {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
    {&__pyx_n_s_sync_status, __pyx_k_sync_status, sizeof(__pyx_k_sync_status), 0, 0, 1, 1},
    {&__pyx_n_s_system_status, __pyx_k_system_status, sizeof(__pyx_k_system_status), 0, 0, 1, 1},
    {&__pyx_n_s_tag, __pyx_k_tag, sizeof(__pyx_k_tag), 0, 0, 1, 1},
    {&__pyx_n_s_tag1, __pyx_k_tag1, sizeof(__pyx_k_tag1), 0, 0, 1, 1},
    {&__pyx_n_s_tag2, __pyx_k_tag2, sizeof(__pyx_k_tag2), 0, 0, 1, 1},
    {&__pyx_n_s_tag3, __pyx_k_tag3, sizeof(__pyx_k_tag3), 0, 0, 1, 1},
    {&__pyx_n_s_temp_status, __pyx_k_temp_status, sizeof(__pyx_k_temp_status), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_theta, __pyx_k_theta, sizeof(__pyx_k_theta), 0, 0, 1, 1},
    {&__pyx_n_s_time_sync_status, __pyx_k_time_sync_status, sizeof(__pyx_k_time_sync_status), 0, 0, 1, 1},
    {&__pyx_n_s_timestamp, __pyx_k_timestamp, sizeof(__pyx_k_timestamp), 0, 0, 1, 1},
    {&__pyx_n_s_timestamp_type, __pyx_k_timestamp_type, sizeof(__pyx_k_timestamp_type), 0, 0, 1, 1},
    {&__pyx_n_s_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 0, 1, 1},
    {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
    {&__pyx_n_s_use_setstate, __pyx_k_use_setstate, sizeof(__pyx_k_use_setstate), 0, 0, 1, 1},
    {&__pyx_kp_u_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 1, 0, 0},
    {&__pyx_n_s_version, __pyx_k_version, sizeof(__pyx_k_version), 0, 0, 1, 1},
    {&__pyx_n_s_volt_status, __pyx_k_volt_status, sizeof(__pyx_k_volt_status), 0, 0, 1, 1},
    {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
    {&__pyx_n_s_x1, __pyx_k_x1, sizeof(__pyx_k_x1), 0, 0, 1, 1},
    {&__pyx_n_s_x2, __pyx_k_x2, sizeof(__pyx_k_x2), 0, 0, 1, 1},
    {&__pyx_n_s_x3, __pyx_k_x3, sizeof(__pyx_k_x3), 0, 0, 1, 1},
    {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
    {&__pyx_n_s_y1, __pyx_k_y1, sizeof(__pyx_k_y1), 0, 0, 1, 1},
    {&__pyx_n_s_y2, __pyx_k_y2, sizeof(__pyx_k_y2), 0, 0, 1, 1},
    {&__pyx_n_s_y3, __pyx_k_y3, sizeof(__pyx_k_y3), 0, 0, 1, 1},
    {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
    {&__pyx_n_s_z1, __pyx_k_z1, sizeof(__pyx_k_z1), 0, 0, 1, 1},
    {&__pyx_n_s_z2, __pyx_k_z2, sizeof(__pyx_k_z2), 0, 0, 1, 1},
    {&__pyx_n_s_z3, __pyx_k_z3, sizeof(__pyx_k_z3), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 436, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 1663, __pyx_L1_error)
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(1, 19, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(1, 20, __pyx_L1_error)
  __pyx_builtin_OverflowError = __Pyx_GetBuiltinName(__pyx_n_s_OverflowError); if (!__pyx_builtin_OverflowError) __PYX_ERR(1, 83, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(1, 86, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(1, 96, __pyx_L1_error)
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) __PYX_ERR(3, 120, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "FromPyStructUtility":20
 *         value = obj['temp_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'temp_status'")             # <<<<<<<<<<<<<<
 *     result.temp_status = value
 *     try:
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "FromPyStructUtility":25
 *         value = obj['volt_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'volt_status'")             # <<<<<<<<<<<<<<
 *     result.volt_status = value
 *     try:
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_2); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "FromPyStructUtility":30
 *         value = obj['motor_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'motor_status'")             # <<<<<<<<<<<<<<
 *     result.motor_status = value
 *     try:
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_3); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(1, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "FromPyStructUtility":35
 *         value = obj['dirty_warn']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'dirty_warn'")             # <<<<<<<<<<<<<<
 *     result.dirty_warn = value
 *     try:
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_4); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "FromPyStructUtility":40
 *         value = obj['firmware_err']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'firmware_err'")             # <<<<<<<<<<<<<<
 *     result.firmware_err = value
 *     try:
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_5); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "FromPyStructUtility":45
 *         value = obj['pps_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'pps_status'")             # <<<<<<<<<<<<<<
 *     result.pps_status = value
 *     try:
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_6); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "FromPyStructUtility":50
 *         value = obj['device_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'device_status'")             # <<<<<<<<<<<<<<
 *     result.device_status = value
 *     try:
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_7); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "FromPyStructUtility":55
 *         value = obj['fan_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'fan_status'")             # <<<<<<<<<<<<<<
 *     result.fan_status = value
 *     try:
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_8); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "FromPyStructUtility":60
 *         value = obj['self_heating']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'self_heating'")             # <<<<<<<<<<<<<<
 *     result.self_heating = value
 *     try:
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_9); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "FromPyStructUtility":65
 *         value = obj['ptp_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'ptp_status'")             # <<<<<<<<<<<<<<
 *     result.ptp_status = value
 *     try:
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_10); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "FromPyStructUtility":70
 *         value = obj['time_sync_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'time_sync_status'")             # <<<<<<<<<<<<<<
 *     result.time_sync_status = value
 *     try:
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_11); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "FromPyStructUtility":75
 *         value = obj['rsvd']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'rsvd'")             # <<<<<<<<<<<<<<
 *     result.rsvd = value
 *     try:
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_12); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "FromPyStructUtility":80
 *         value = obj['system_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'system_status'")             # <<<<<<<<<<<<<<
 *     result.system_status = value
 *     return result
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_13); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(1, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "FromPyStructUtility":20
 *         value = obj['sync_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'sync_status'")             # <<<<<<<<<<<<<<
 *     result.sync_status = value
 *     try:
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_14); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(1, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "FromPyStructUtility":30
 *         value = obj['lidar_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_status'")             # <<<<<<<<<<<<<<
 *     result.lidar_status = value
 *     try:
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_15); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(1, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "FromPyStructUtility":35
 *         value = obj['lidar_link_status']
 *     except KeyError:
 *         raise ValueError("No value specified for struct attribute 'lidar_link_status'")             # <<<<<<<<<<<<<<
 *     result.lidar_link_status = value
 *     try:
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_No_value_specified_for_struct_at_16); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "pylivox.pyx":1671
 *         self.core.timestamp_type = timestamp_type
 *         self.core.data_type = data_type
 *         self.core.timestamp = timestamp[:8]             # <<<<<<<<<<<<<<
 *         self.core.data = data[:1]
 * 
 */
  __pyx_slice__21 = PySlice_New(Py_None, __pyx_int_8, Py_None); if (unlikely(!__pyx_slice__21)) __PYX_ERR(0, 1671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__21);
  __Pyx_GIVEREF(__pyx_slice__21);

  /* "pylivox.pyx":1672
 *         self.core.data_type = data_type
 *         self.core.timestamp = timestamp[:8]
 *         self.core.data = data[:1]             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_slice__22 = PySlice_New(Py_None, __pyx_int_1, Py_None); if (unlikely(!__pyx_slice__22)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__22);
  __Pyx_GIVEREF(__pyx_slice__22);

  /* "pylivox.pyx":1786
 *         self.core.cmd_port = cmd_port
 *         self.core.sensor_port = sensor_port
 *         self.core.ip = ip.encode('utf-8')[:16]  # Ensure null-termination             # <<<<<<<<<<<<<<
 *         self.core.state = state.core
 *         self.core.feature = feature.core
 */
  __pyx_slice__29 = PySlice_New(Py_None, __pyx_int_16, Py_None); if (unlikely(!__pyx_slice__29)) __PYX_ERR(0, 1786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__29);
  __Pyx_GIVEREF(__pyx_slice__29);

  /* "pylivox.pyx":1790
 *         self.core.feature = feature.core
 *         self.core.status = status.core
 *         self.core.firmware_version = firmware_version[:4]  # Ensure length             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_slice__30 = PySlice_New(Py_None, __pyx_int_4, Py_None); if (unlikely(!__pyx_slice__30)) __PYX_ERR(0, 1790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__30);
  __Pyx_GIVEREF(__pyx_slice__30);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xe3b0c44, 0xda39a3e, 0xd41d8cd):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0xe3b0c44, 0xda39a3e, 0xd41d8cd) = ())" % __pyx_checksum
 */
  __pyx_tuple__38 = PyTuple_Pack(3, __pyx_int_238750788, __pyx_int_228825662, __pyx_int_222419149); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "pylivox.pyx":35
 *     livox_status GetConnectedDevices(DeviceInfo *devices, uint8_t *size)
 * 
 * def PyInit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Initialize the SDK.
 */
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyInit, 35, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(0, 35, __pyx_L1_error)

  /* "pylivox.pyx":42
 *     return Init()
 * 
 * def PyUninit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyUninit, 42, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(0, 42, __pyx_L1_error)

  /* "pylivox.pyx":48
 *     Uninit()
 * 
 * def PyStart():             # <<<<<<<<<<<<<<
 *     '''
 *     * Start the device scanning routine which runs on a separate thread.
 */
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyStart, 48, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(0, 48, __pyx_L1_error)

  /* "pylivox.pyx":55
 *     return Start()
 * 
 * def PyDisableConsoleLogger():             # <<<<<<<<<<<<<<
 *     '''
 *     * Disable console log output.
 */
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyDisableConsoleLogger, 55, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) __PYX_ERR(0, 55, __pyx_L1_error)

  /* "pylivox.pyx":61
 *     return DisableConsoleLogger()
 * 
 * def PySaveLoggerFile():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PySaveLoggerFile, 61, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(0, 61, __pyx_L1_error)

  /* "pylivox.pyx":67
 *     return SaveLoggerFile()
 * 
 * def PyGetLivoxSdkVersion(version: PyLivoxSdkVersion):             # <<<<<<<<<<<<<<
 *     '''
 *     * Return SDK's version information in a numeric form.
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_n_s_version); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyGetLivoxSdkVersion, 67, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(0, 67, __pyx_L1_error)

  /* "pylivox.pyx":77
 *     (<object>f)(status, handle, response)
 * 
 * def PyHubStartSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Start hub sampling.
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_n_s_cb); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyHubStartSampling, 77, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(0, 77, __pyx_L1_error)

  /* "pylivox.pyx":86
 *     return HubStartSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubStopSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Stop the Livox Hub's sampling.
 */
  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyHubStopSampling, 86, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(0, 86, __pyx_L1_error)

  /* "pylivox.pyx":95
 *     return HubStopSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubGetLidarHandle(slot, id):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get the LiDAR unit handle used in the Livox Hub data callback function from slot and id.
 */
  __pyx_tuple__51 = PyTuple_Pack(2, __pyx_n_s_slot, __pyx_n_s_id); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyHubGetLidarHandle, 95, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(0, 95, __pyx_L1_error)

  /* "pylivox.pyx":104
 *     return HubGetLidarHandle(slot, id)
 * 
 * def PyDisconnectDevice(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Disconnect divice.
 */
  __pyx_tuple__53 = PyTuple_Pack(2, __pyx_n_s_handle, __pyx_n_s_cb); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyDisconnectDevice, 104, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(0, 104, __pyx_L1_error)

  /* "pylivox.pyx":114
 *     return DisconnectDevice(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetCartesianCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to cartesian coordinate.
 */
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PySetCartesianCoordinate, 114, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 114, __pyx_L1_error)

  /* "pylivox.pyx":124
 *     return SetCartesianCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetSphericalCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to spherical coordinate.
 */
  __pyx_codeobj__56 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PySetSphericalCoordinate, 124, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__56)) __PYX_ERR(0, 124, __pyx_L1_error)

  /* "pylivox.pyx":134
 *     return SetSphericalCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PyAddHubToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Add a broadcast code to the connecting list and only devices with broadcast code in this list will be connected. The
 */
  __pyx_tuple__57 = PyTuple_Pack(2, __pyx_n_s_broadcast_code, __pyx_n_s_handle); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);
  __pyx_codeobj__58 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyAddHubToConnect, 134, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__58)) __PYX_ERR(0, 134, __pyx_L1_error)

  /* "pylivox.pyx":145
 *     return AddHubToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyAddLidarToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get all connected devices' information.
 */
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyAddLidarToConnect, 145, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(0, 145, __pyx_L1_error)

  /* "pylivox.pyx":154
 *     return AddLidarToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyGetConnectedDevices(devices, size):             # <<<<<<<<<<<<<<
 *     '''
 *     * Function type of callback that queries device's information.
 */
  __pyx_tuple__60 = PyTuple_Pack(2, __pyx_n_s_devices, __pyx_n_s_size); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PyGetConnectedDevices, 154, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 154, __pyx_L1_error)

  /* "pylivox.pyx":436
 *     Device type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeHub():
 *         return DeviceType.kDeviceTypeHub
 */
  __pyx_codeobj__62 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_DeviceTypeHub, 436, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__62)) __PYX_ERR(0, 436, __pyx_L1_error)

  /* "pylivox.pyx":440
 *         return DeviceType.kDeviceTypeHub
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid40():
 *         return DeviceType.kDeviceTypeLidarMid40
 */
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_DeviceTypeLidarMid40, 440, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(0, 440, __pyx_L1_error)

  /* "pylivox.pyx":444
 *         return DeviceType.kDeviceTypeLidarMid40
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarTele():
 *         return DeviceType.kDeviceTypeLidarTele
 */
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_DeviceTypeLidarTele, 444, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 444, __pyx_L1_error)

  /* "pylivox.pyx":448
 *         return DeviceType.kDeviceTypeLidarTele
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarHorizon():
 *         return DeviceType.kDeviceTypeLidarHorizon
 */
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_DeviceTypeLidarHorizon, 448, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(0, 448, __pyx_L1_error)

  /* "pylivox.pyx":452
 *         return DeviceType.kDeviceTypeLidarHorizon
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid70():
 *         return DeviceType.kDeviceTypeLidarMid70
 */
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_DeviceTypeLidarMid70, 452, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 452, __pyx_L1_error)

  /* "pylivox.pyx":456
 *         return DeviceType.kDeviceTypeLidarMid70
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarAvia():
 *         return DeviceType.kDeviceTypeLidarAvia
 */
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_DeviceTypeLidarAvia, 456, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 456, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__68 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceType__set_state(self, __pyx_state)
 */
  __pyx_tuple__70 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":464
 *     Lidar state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateInit():
 *         return LidarState.kLidarStateInit
 */
  __pyx_codeobj__72 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStateInit, 464, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__72)) __PYX_ERR(0, 464, __pyx_L1_error)

  /* "pylivox.pyx":468
 *         return LidarState.kLidarStateInit
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateNormal():
 *         return LidarState.kLidarStateNormal
 */
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStateNormal, 468, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(0, 468, __pyx_L1_error)

  /* "pylivox.pyx":472
 *         return LidarState.kLidarStateNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStatePowerSaving():
 *         return LidarState.kLidarStatePowerSaving
 */
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStatePowerSaving, 472, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(0, 472, __pyx_L1_error)

  /* "pylivox.pyx":476
 *         return LidarState.kLidarStatePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateStandBy():
 *         return LidarState.kLidarStateStandBy
 */
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStateStandBy, 476, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(0, 476, __pyx_L1_error)

  /* "pylivox.pyx":480
 *         return LidarState.kLidarStateStandBy
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateError():
 *         return LidarState.kLidarStateError
 */
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStateError, 480, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(0, 480, __pyx_L1_error)

  /* "pylivox.pyx":484
 *         return LidarState.kLidarStateError
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateUnknown():
 *         return LidarState.kLidarStateUnknown
 */
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStateUnknown, 484, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(0, 484, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarState__set_state(self, __pyx_state)
 */
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":493
 *     Lidar mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeNormal():
 *         return LidarMode.kLidarModeNormal
 */
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarModeNormal, 493, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(0, 493, __pyx_L1_error)

  /* "pylivox.pyx":497
 *         return LidarMode.kLidarModeNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModePowerSaving():
 *         return LidarMode.kLidarModePowerSaving
 */
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarModePowerSaving, 497, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) __PYX_ERR(0, 497, __pyx_L1_error)

  /* "pylivox.pyx":501
 *         return LidarMode.kLidarModePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeStandby():
 *         return LidarMode.kLidarModeStandby
 */
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarModeStandby, 501, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(0, 501, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarMode__set_state(self, __pyx_state)
 */
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":509
 *     Lidar feature.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureNone():
 *         return LidarFeature.kLidarFeatureNone
 */
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarFeatureNone, 509, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(0, 509, __pyx_L1_error)

  /* "pylivox.pyx":513
 *         return LidarFeature.kLidarFeatureNone
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureRainFog():
 *         return LidarFeature.kLidarFeatureRainFog
 */
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarFeatureRainFog, 513, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(0, 513, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarFeature__set_state(self, __pyx_state)
 */
  __pyx_codeobj__88 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__88)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":521
 *     Lidar IP mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarDynamicIpMode():
 *         return LidarIpMode.kLidarDynamicIpMode
 */
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarDynamicIpMode, 521, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) __PYX_ERR(0, 521, __pyx_L1_error)

  /* "pylivox.pyx":525
 *         return LidarIpMode.kLidarDynamicIpMode
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStaticIpMode():
 *         return LidarIpMode.kLidarStaticIpMode
 */
  __pyx_codeobj__90 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_LidarStaticIpMode, 525, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__90)) __PYX_ERR(0, 525, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarIpMode__set_state(self, __pyx_state)
 */
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":533
 *     Lidar Scan Pattern.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def NoneRepetitiveScanPattern():
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 */
  __pyx_codeobj__93 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_NoneRepetitiveScanPattern, 533, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__93)) __PYX_ERR(0, 533, __pyx_L1_error)

  /* "pylivox.pyx":537
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def RepetitiveScanPattern():
 *         return LidarScanPattern.kRepetitiveScanPattern
 */
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_RepetitiveScanPattern, 537, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 537, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarScanPattern__set_state(self, __pyx_state)
 */
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":545
 *     Function return value definition.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSendFailed():
 *         return LivoxStatus.kStatusSendFailed
 */
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusSendFailed, 545, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(0, 545, __pyx_L1_error)

  /* "pylivox.pyx":549
 *         return LivoxStatus.kStatusSendFailed
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusHandlerImplNotExist():
 *         return LivoxStatus.kStatusHandlerImplNotExist
 */
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusHandlerImplNotExist, 549, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(0, 549, __pyx_L1_error)

  /* "pylivox.pyx":553
 *         return LivoxStatus.kStatusHandlerImplNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusInvalidHandle():
 *         return LivoxStatus.kStatusInvalidHandle
 */
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusInvalidHandle, 553, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 553, __pyx_L1_error)

  /* "pylivox.pyx":557
 *         return LivoxStatus.kStatusInvalidHandle
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusChannelNotExist():
 *         return LivoxStatus.kStatusChannelNotExist
 */
  __pyx_codeobj__100 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusChannelNotExist, 557, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__100)) __PYX_ERR(0, 557, __pyx_L1_error)

  /* "pylivox.pyx":561
 *         return LivoxStatus.kStatusChannelNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotEnoughMemory():
 *         return LivoxStatus.kStatusNotEnoughMemory
 */
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusNotEnoughMemory, 561, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(0, 561, __pyx_L1_error)

  /* "pylivox.pyx":565
 *         return LivoxStatus.kStatusNotEnoughMemory
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusTimeout():
 *         return LivoxStatus.kStatusTimeout
 */
  __pyx_codeobj__102 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusTimeout, 565, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__102)) __PYX_ERR(0, 565, __pyx_L1_error)

  /* "pylivox.pyx":569
 *         return LivoxStatus.kStatusTimeout
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotSupported():
 *         return LivoxStatus.kStatusNotSupported
 */
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusNotSupported, 569, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 569, __pyx_L1_error)

  /* "pylivox.pyx":573
 *         return LivoxStatus.kStatusNotSupported
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotConnected():
 *         return LivoxStatus.kStatusNotConnected
 */
  __pyx_codeobj__104 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusNotConnected, 573, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__104)) __PYX_ERR(0, 573, __pyx_L1_error)

  /* "pylivox.pyx":577
 *         return LivoxStatus.kStatusNotConnected
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusFailure():
 *         return LivoxStatus.kStatusFailure
 */
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusFailure, 577, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(0, 577, __pyx_L1_error)

  /* "pylivox.pyx":581
 *         return LivoxStatus.kStatusFailure
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSuccess():
 *         return LivoxStatus.kStatusSuccess
 */
  __pyx_codeobj__106 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_StatusSuccess, 581, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__106)) __PYX_ERR(0, 581, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLivoxStatus__set_state(self, __pyx_state)
 */
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":589
 *     Device update type, indicating the change of device connection or working state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventConnect():
 *         return DeviceEvent.kEventConnect
 */
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_EventConnect, 589, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(0, 589, __pyx_L1_error)

  /* "pylivox.pyx":593
 *         return DeviceEvent.kEventConnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventDisconnect():
 *         return DeviceEvent.kEventDisconnect
 */
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_EventDisconnect, 593, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(0, 593, __pyx_L1_error)

  /* "pylivox.pyx":597
 *         return DeviceEvent.kEventDisconnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventStateChange():
 *         return DeviceEvent.kEventStateChange
 */
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_EventStateChange, 597, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(0, 597, __pyx_L1_error)

  /* "pylivox.pyx":601
 *         return DeviceEvent.kEventStateChange
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventHubConnectionChange():
 *         return DeviceEvent.kEventHubConnectionChange
 */
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_EventHubConnectionChange, 601, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 601, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceEvent__set_state(self, __pyx_state)
 */
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":609
 *     Timestamp sync mode define.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeNoSync():
 *         return TimestampType.kTimestampTypeNoSync
 */
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_TimestampTypeNoSync, 609, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) __PYX_ERR(0, 609, __pyx_L1_error)

  /* "pylivox.pyx":613
 *         return TimestampType.kTimestampTypeNoSync
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePtp():
 *         return TimestampType.kTimestampTypePtp
 */
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_TimestampTypePtp, 613, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 613, __pyx_L1_error)

  /* "pylivox.pyx":617
 *         return TimestampType.kTimestampTypePtp
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeRsvd():
 *         return TimestampType.kTimestampTypeRsvd
 */
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_TimestampTypeRsvd, 617, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(0, 617, __pyx_L1_error)

  /* "pylivox.pyx":621
 *         return TimestampType.kTimestampTypeRsvd
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePpsGps():
 *         return TimestampType.kTimestampTypePpsGps
 */
  __pyx_codeobj__118 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_TimestampTypePpsGps, 621, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__118)) __PYX_ERR(0, 621, __pyx_L1_error)

  /* "pylivox.pyx":625
 *         return TimestampType.kTimestampTypePpsGps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePps():
 *         return TimestampType.kTimestampTypePps
 */
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_TimestampTypePps, 625, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(0, 625, __pyx_L1_error)

  /* "pylivox.pyx":629
 *         return TimestampType.kTimestampTypePps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeUnknown():
 *         return TimestampType.kTimestampTypeUnknown
 */
  __pyx_codeobj__120 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_TimestampTypeUnknown, 629, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__120)) __PYX_ERR(0, 629, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__121 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__121)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyTimestampType__set_state(self, __pyx_state)
 */
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":637
 *     Point data type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeCartesian():
 *         return PointDataType.kCartesian
 */
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeCartesian, 637, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) __PYX_ERR(0, 637, __pyx_L1_error)

  /* "pylivox.pyx":641
 *         return PointDataType.kCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeSpherical():
 *         return PointDataType.kSpherical
 */
  __pyx_codeobj__124 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeSpherical, 641, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__124)) __PYX_ERR(0, 641, __pyx_L1_error)

  /* "pylivox.pyx":645
 *         return PointDataType.kSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendCartesian():
 *         return PointDataType.kExtendCartesian
 */
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeExtendCartesian, 645, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(0, 645, __pyx_L1_error)

  /* "pylivox.pyx":649
 *         return PointDataType.kExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendSpherical():
 *         return PointDataType.kExtendSpherical
 */
  __pyx_codeobj__126 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeExtendSpherical, 649, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__126)) __PYX_ERR(0, 649, __pyx_L1_error)

  /* "pylivox.pyx":653
 *         return PointDataType.kExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendCartesian():
 *         return PointDataType.kDualExtendCartesian
 */
  __pyx_codeobj__127 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeDualExtendCartesian, 653, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__127)) __PYX_ERR(0, 653, __pyx_L1_error)

  /* "pylivox.pyx":657
 *         return PointDataType.kDualExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendSpherical():
 *         return PointDataType.kDualExtendSpherical
 */
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeDualExtendSpherical, 657, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(0, 657, __pyx_L1_error)

  /* "pylivox.pyx":661
 *         return PointDataType.kDualExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeImu():
 *         return PointDataType.kImu
 */
  __pyx_codeobj__129 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeImu, 661, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__129)) __PYX_ERR(0, 661, __pyx_L1_error)

  /* "pylivox.pyx":665
 *         return PointDataType.kImu
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendCartesian():
 *         return PointDataType.kTripleExtendCartesian
 */
  __pyx_codeobj__130 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeTripleExtendCartesi, 665, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__130)) __PYX_ERR(0, 665, __pyx_L1_error)

  /* "pylivox.pyx":669
 *         return PointDataType.kTripleExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendSpherical():
 *         return PointDataType.kTripleExtendSpherical
 */
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeTripleExtendSpheric, 669, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(0, 669, __pyx_L1_error)

  /* "pylivox.pyx":673
 *         return PointDataType.kTripleExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeMax():
 *         return PointDataType.kMaxPointDataType
 */
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointDataTypeMax, 673, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(0, 673, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__133 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__133)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointDataType__set_state(self, __pyx_state)
 */
  __pyx_codeobj__134 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__134)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":681
 *     Point cloud return mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnFirst():
 *         return PointCloudReturnMode.kFirstReturn
 */
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointCloudReturnFirst, 681, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(0, 681, __pyx_L1_error)

  /* "pylivox.pyx":685
 *         return PointCloudReturnMode.kFirstReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnStrongest():
 *         return PointCloudReturnMode.kStrongestReturn
 */
  __pyx_codeobj__136 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointCloudReturnStrongest, 685, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__136)) __PYX_ERR(0, 685, __pyx_L1_error)

  /* "pylivox.pyx":689
 *         return PointCloudReturnMode.kStrongestReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnDual():
 *         return PointCloudReturnMode.kDualReturn
 */
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointCloudReturnDual, 689, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(0, 689, __pyx_L1_error)

  /* "pylivox.pyx":693
 *         return PointCloudReturnMode.kDualReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnTriple():
 *         return PointCloudReturnMode.kTripleReturn
 */
  __pyx_codeobj__138 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_PointCloudReturnTriple, 693, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__138)) __PYX_ERR(0, 693, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointCloudReturnMode__set_state(self, __pyx_state)
 */
  __pyx_codeobj__140 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__140)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "pylivox.pyx":701
 *     IMU push frequency.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq0Hz():
 *         return ImuFreq.kImuFreq0Hz
 */
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_ImuFreq0Hz, 701, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(0, 701, __pyx_L1_error)

  /* "pylivox.pyx":705
 *         return ImuFreq.kImuFreq0Hz
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq200Hz():
 *         return ImuFreq.kImuFreq200Hz
 */
  __pyx_codeobj__142 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_pylivox_pyx, __pyx_n_s_ImuFreq200Hz, 705, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__142)) __PYX_ERR(0, 705, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyImuFreq__set_state(self, __pyx_state)
 */
  __pyx_codeobj__144 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__144)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_tuple__145 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__145)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__145);
  __Pyx_GIVEREF(__pyx_tuple__145);
  __pyx_codeobj__146 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__146)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__148 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__148)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__150 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__150)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__152 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__152)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__154 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__154)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__156 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__156)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__158 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__158)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__160 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__160)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__161 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__161)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__162 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__162)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__163 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__163)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__164 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__164)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__165 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__165)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__166 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__166)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__167 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__167)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__168 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__168)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__169 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__169)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__170 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__170)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__171 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__171)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__172 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__172)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__173 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__173)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__174 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__174)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__175 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__175)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__176 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__176)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__177 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__177)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__178 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__178)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__179 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__179)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__180 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__180)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__181 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__181)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__182 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__182)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__183 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__183)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__184 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__184)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__185 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__185)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__186 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__186)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__187 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__187)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__188 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__188)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__189 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__189)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__190 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__145, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__190)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_codeobj__191 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__191)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyDeviceType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__192 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__192)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__192);
  __Pyx_GIVEREF(__pyx_tuple__192);
  __pyx_codeobj__193 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyDeviceType, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__193)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__194 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyLidarState, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__194)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__195 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyLidarMode, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__195)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__196 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyLidarFeature, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__196)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__197 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyLidarIpMode, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__197)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__198 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyLidarScanPatter, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__198)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__199 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyLivoxStatus, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__199)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__200 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyDeviceEvent, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__200)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__201 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyTimestampType, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__201)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__202 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyPointDataType, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__202)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__203 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyPointCloudRetur, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__203)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_codeobj__204 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_PyImuFreq, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__204)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_32 = PyInt_FromLong(32); if (unlikely(!__pyx_int_32)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_222419149 = PyInt_FromLong(222419149L); if (unlikely(!__pyx_int_222419149)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_228825662 = PyInt_FromLong(228825662L); if (unlikely(!__pyx_int_228825662)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_238750788 = PyInt_FromLong(238750788L); if (unlikely(!__pyx_int_238750788)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __pyx_7genexpr__pyx_v_7pylivox__ = Py_None; Py_INCREF(Py_None);
  __pyx_8genexpr1__pyx_v_7pylivox__ = Py_None; Py_INCREF(Py_None);
  __pyx_8genexpr2__pyx_v_7pylivox__ = Py_None; Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyDeviceType = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyDeviceType_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyDeviceType)) __PYX_ERR(0, 432, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyDeviceType_spec, __pyx_ptype_7pylivox_PyDeviceType) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyDeviceType = &__pyx_type_7pylivox_PyDeviceType;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyDeviceType) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyDeviceType->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyDeviceType->tp_dictoffset && __pyx_ptype_7pylivox_PyDeviceType->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyDeviceType->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyDeviceType, (PyObject *) __pyx_ptype_7pylivox_PyDeviceType) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyDeviceType) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarState = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarState_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarState)) __PYX_ERR(0, 460, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarState_spec, __pyx_ptype_7pylivox_PyLidarState) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarState = &__pyx_type_7pylivox_PyLidarState;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarState) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarState->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarState->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarState->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarState->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarState, (PyObject *) __pyx_ptype_7pylivox_PyLidarState) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarState) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarMode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarMode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarMode)) __PYX_ERR(0, 489, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarMode_spec, __pyx_ptype_7pylivox_PyLidarMode) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarMode = &__pyx_type_7pylivox_PyLidarMode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarMode) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarMode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarMode->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarMode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarMode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarMode, (PyObject *) __pyx_ptype_7pylivox_PyLidarMode) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarMode) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarFeature = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarFeature_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarFeature)) __PYX_ERR(0, 505, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarFeature_spec, __pyx_ptype_7pylivox_PyLidarFeature) < 0) __PYX_ERR(0, 505, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarFeature = &__pyx_type_7pylivox_PyLidarFeature;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarFeature) < 0) __PYX_ERR(0, 505, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarFeature->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarFeature->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarFeature->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarFeature->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarFeature, (PyObject *) __pyx_ptype_7pylivox_PyLidarFeature) < 0) __PYX_ERR(0, 505, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarFeature) < 0) __PYX_ERR(0, 505, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarIpMode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarIpMode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarIpMode)) __PYX_ERR(0, 517, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarIpMode_spec, __pyx_ptype_7pylivox_PyLidarIpMode) < 0) __PYX_ERR(0, 517, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarIpMode = &__pyx_type_7pylivox_PyLidarIpMode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarIpMode) < 0) __PYX_ERR(0, 517, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarIpMode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarIpMode->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarIpMode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarIpMode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarIpMode, (PyObject *) __pyx_ptype_7pylivox_PyLidarIpMode) < 0) __PYX_ERR(0, 517, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarIpMode) < 0) __PYX_ERR(0, 517, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarScanPattern = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarScanPattern_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarScanPattern)) __PYX_ERR(0, 529, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarScanPattern_spec, __pyx_ptype_7pylivox_PyLidarScanPattern) < 0) __PYX_ERR(0, 529, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarScanPattern = &__pyx_type_7pylivox_PyLidarScanPattern;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarScanPattern) < 0) __PYX_ERR(0, 529, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarScanPattern->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarScanPattern->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarScanPattern->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarScanPattern->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarScanPattern, (PyObject *) __pyx_ptype_7pylivox_PyLidarScanPattern) < 0) __PYX_ERR(0, 529, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarScanPattern) < 0) __PYX_ERR(0, 529, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxStatus = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxStatus_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxStatus)) __PYX_ERR(0, 541, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxStatus_spec, __pyx_ptype_7pylivox_PyLivoxStatus) < 0) __PYX_ERR(0, 541, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxStatus = &__pyx_type_7pylivox_PyLivoxStatus;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxStatus) < 0) __PYX_ERR(0, 541, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxStatus->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxStatus->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxStatus->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxStatus->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxStatus, (PyObject *) __pyx_ptype_7pylivox_PyLivoxStatus) < 0) __PYX_ERR(0, 541, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxStatus) < 0) __PYX_ERR(0, 541, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyDeviceEvent = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyDeviceEvent_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyDeviceEvent)) __PYX_ERR(0, 585, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyDeviceEvent_spec, __pyx_ptype_7pylivox_PyDeviceEvent) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyDeviceEvent = &__pyx_type_7pylivox_PyDeviceEvent;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyDeviceEvent) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyDeviceEvent->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyDeviceEvent->tp_dictoffset && __pyx_ptype_7pylivox_PyDeviceEvent->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyDeviceEvent->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyDeviceEvent, (PyObject *) __pyx_ptype_7pylivox_PyDeviceEvent) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyDeviceEvent) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyTimestampType = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyTimestampType_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyTimestampType)) __PYX_ERR(0, 605, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyTimestampType_spec, __pyx_ptype_7pylivox_PyTimestampType) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyTimestampType = &__pyx_type_7pylivox_PyTimestampType;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyTimestampType) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyTimestampType->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyTimestampType->tp_dictoffset && __pyx_ptype_7pylivox_PyTimestampType->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyTimestampType->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyTimestampType, (PyObject *) __pyx_ptype_7pylivox_PyTimestampType) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyTimestampType) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyPointDataType = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyPointDataType_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyPointDataType)) __PYX_ERR(0, 633, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyPointDataType_spec, __pyx_ptype_7pylivox_PyPointDataType) < 0) __PYX_ERR(0, 633, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyPointDataType = &__pyx_type_7pylivox_PyPointDataType;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyPointDataType) < 0) __PYX_ERR(0, 633, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyPointDataType->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyPointDataType->tp_dictoffset && __pyx_ptype_7pylivox_PyPointDataType->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyPointDataType->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyPointDataType, (PyObject *) __pyx_ptype_7pylivox_PyPointDataType) < 0) __PYX_ERR(0, 633, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyPointDataType) < 0) __PYX_ERR(0, 633, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyPointCloudReturnMode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyPointCloudReturnMode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyPointCloudReturnMode)) __PYX_ERR(0, 677, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyPointCloudReturnMode_spec, __pyx_ptype_7pylivox_PyPointCloudReturnMode) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyPointCloudReturnMode = &__pyx_type_7pylivox_PyPointCloudReturnMode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyPointCloudReturnMode) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyPointCloudReturnMode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyPointCloudReturnMode->tp_dictoffset && __pyx_ptype_7pylivox_PyPointCloudReturnMode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyPointCloudReturnMode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyPointCloudReturnMode, (PyObject *) __pyx_ptype_7pylivox_PyPointCloudReturnMode) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyPointCloudReturnMode) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyImuFreq = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyImuFreq_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyImuFreq)) __PYX_ERR(0, 697, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyImuFreq_spec, __pyx_ptype_7pylivox_PyImuFreq) < 0) __PYX_ERR(0, 697, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyImuFreq = &__pyx_type_7pylivox_PyImuFreq;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyImuFreq) < 0) __PYX_ERR(0, 697, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyImuFreq->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyImuFreq->tp_dictoffset && __pyx_ptype_7pylivox_PyImuFreq->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyImuFreq->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyImuFreq, (PyObject *) __pyx_ptype_7pylivox_PyImuFreq) < 0) __PYX_ERR(0, 697, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyImuFreq) < 0) __PYX_ERR(0, 697, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxSdkVersion = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxSdkVersion_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxSdkVersion)) __PYX_ERR(0, 709, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxSdkVersion_spec, __pyx_ptype_7pylivox_PyLivoxSdkVersion) < 0) __PYX_ERR(0, 709, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxSdkVersion = &__pyx_type_7pylivox_PyLivoxSdkVersion;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxSdkVersion) < 0) __PYX_ERR(0, 709, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxSdkVersion->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxSdkVersion->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxSdkVersion->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxSdkVersion->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxSdkVersion, (PyObject *) __pyx_ptype_7pylivox_PyLivoxSdkVersion) < 0) __PYX_ERR(0, 709, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxSdkVersion) < 0) __PYX_ERR(0, 709, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxRawPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxRawPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxRawPoint)) __PYX_ERR(0, 742, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxRawPoint_spec, __pyx_ptype_7pylivox_PyLivoxRawPoint) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxRawPoint = &__pyx_type_7pylivox_PyLivoxRawPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxRawPoint) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxRawPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxRawPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxRawPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxRawPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxRawPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxRawPoint) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxRawPoint) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxSpherPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxSpherPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxSpherPoint)) __PYX_ERR(0, 783, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxSpherPoint_spec, __pyx_ptype_7pylivox_PyLivoxSpherPoint) < 0) __PYX_ERR(0, 783, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxSpherPoint = &__pyx_type_7pylivox_PyLivoxSpherPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxSpherPoint) < 0) __PYX_ERR(0, 783, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxSpherPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxSpherPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxSpherPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxSpherPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxSpherPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxSpherPoint) < 0) __PYX_ERR(0, 783, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxSpherPoint) < 0) __PYX_ERR(0, 783, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxPoint)) __PYX_ERR(0, 824, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxPoint_spec, __pyx_ptype_7pylivox_PyLivoxPoint) < 0) __PYX_ERR(0, 824, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxPoint = &__pyx_type_7pylivox_PyLivoxPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxPoint) < 0) __PYX_ERR(0, 824, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxPoint) < 0) __PYX_ERR(0, 824, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxPoint) < 0) __PYX_ERR(0, 824, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxExtendRawPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxExtendRawPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxExtendRawPoint)) __PYX_ERR(0, 866, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxExtendRawPoint_spec, __pyx_ptype_7pylivox_PyLivoxExtendRawPoint) < 0) __PYX_ERR(0, 866, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxExtendRawPoint = &__pyx_type_7pylivox_PyLivoxExtendRawPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxExtendRawPoint) < 0) __PYX_ERR(0, 866, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxExtendRawPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxExtendRawPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxExtendRawPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxExtendRawPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxExtendRawPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxExtendRawPoint) < 0) __PYX_ERR(0, 866, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxExtendRawPoint) < 0) __PYX_ERR(0, 866, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxExtendSpherPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint)) __PYX_ERR(0, 916, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxExtendSpherPoint_spec, __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint) < 0) __PYX_ERR(0, 916, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint = &__pyx_type_7pylivox_PyLivoxExtendSpherPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint) < 0) __PYX_ERR(0, 916, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxExtendSpherPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxExtendSpherPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint) < 0) __PYX_ERR(0, 916, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxExtendSpherPoint) < 0) __PYX_ERR(0, 916, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxDualExtendRawPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint)) __PYX_ERR(0, 966, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxDualExtendRawPoint_spec, __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint) < 0) __PYX_ERR(0, 966, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint = &__pyx_type_7pylivox_PyLivoxDualExtendRawPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint) < 0) __PYX_ERR(0, 966, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxDualExtendRawPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint) < 0) __PYX_ERR(0, 966, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxDualExtendRawPoint) < 0) __PYX_ERR(0, 966, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint)) __PYX_ERR(0, 1057, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint_spec, __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint) < 0) __PYX_ERR(0, 1057, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint = &__pyx_type_7pylivox_PyLivoxDualExtendSpherPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint) < 0) __PYX_ERR(0, 1057, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxDualExtendSpherPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint) < 0) __PYX_ERR(0, 1057, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxDualExtendSpherPoint) < 0) __PYX_ERR(0, 1057, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint)) __PYX_ERR(0, 1132, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint_spec, __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint) < 0) __PYX_ERR(0, 1132, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint = &__pyx_type_7pylivox_PyLivoxTripleExtendRawPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint) < 0) __PYX_ERR(0, 1132, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxTripleExtendRawPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint) < 0) __PYX_ERR(0, 1132, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxTripleExtendRawPoint) < 0) __PYX_ERR(0, 1132, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint)) __PYX_ERR(0, 1266, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint_spec, __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint = &__pyx_type_7pylivox_PyLivoxTripleExtendSpherPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxTripleExtendSpherPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxTripleExtendSpherPoint) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxImuPoint = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxImuPoint_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxImuPoint)) __PYX_ERR(0, 1367, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxImuPoint_spec, __pyx_ptype_7pylivox_PyLivoxImuPoint) < 0) __PYX_ERR(0, 1367, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxImuPoint = &__pyx_type_7pylivox_PyLivoxImuPoint;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxImuPoint) < 0) __PYX_ERR(0, 1367, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxImuPoint->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxImuPoint->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxImuPoint->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxImuPoint->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxImuPoint, (PyObject *) __pyx_ptype_7pylivox_PyLivoxImuPoint) < 0) __PYX_ERR(0, 1367, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxImuPoint) < 0) __PYX_ERR(0, 1367, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarErrorCode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarErrorCode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarErrorCode)) __PYX_ERR(0, 1426, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarErrorCode_spec, __pyx_ptype_7pylivox_PyLidarErrorCode) < 0) __PYX_ERR(0, 1426, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarErrorCode = &__pyx_type_7pylivox_PyLidarErrorCode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarErrorCode) < 0) __PYX_ERR(0, 1426, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarErrorCode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarErrorCode->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarErrorCode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarErrorCode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarErrorCode, (PyObject *) __pyx_ptype_7pylivox_PyLidarErrorCode) < 0) __PYX_ERR(0, 1426, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarErrorCode) < 0) __PYX_ERR(0, 1426, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyHubErrorCode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyHubErrorCode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyHubErrorCode)) __PYX_ERR(0, 1547, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyHubErrorCode_spec, __pyx_ptype_7pylivox_PyHubErrorCode) < 0) __PYX_ERR(0, 1547, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyHubErrorCode = &__pyx_type_7pylivox_PyHubErrorCode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyHubErrorCode) < 0) __PYX_ERR(0, 1547, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyHubErrorCode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyHubErrorCode->tp_dictoffset && __pyx_ptype_7pylivox_PyHubErrorCode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyHubErrorCode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyHubErrorCode, (PyObject *) __pyx_ptype_7pylivox_PyHubErrorCode) < 0) __PYX_ERR(0, 1547, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyHubErrorCode) < 0) __PYX_ERR(0, 1547, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyErrorMessage = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyErrorMessage_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyErrorMessage)) __PYX_ERR(0, 1616, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyErrorMessage_spec, __pyx_ptype_7pylivox_PyErrorMessage) < 0) __PYX_ERR(0, 1616, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyErrorMessage = &__pyx_type_7pylivox_PyErrorMessage;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyErrorMessage) < 0) __PYX_ERR(0, 1616, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyErrorMessage->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyErrorMessage->tp_dictoffset && __pyx_ptype_7pylivox_PyErrorMessage->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyErrorMessage->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyErrorMessage, (PyObject *) __pyx_ptype_7pylivox_PyErrorMessage) < 0) __PYX_ERR(0, 1616, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyErrorMessage) < 0) __PYX_ERR(0, 1616, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLivoxEthPacket = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLivoxEthPacket_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLivoxEthPacket)) __PYX_ERR(0, 1656, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLivoxEthPacket_spec, __pyx_ptype_7pylivox_PyLivoxEthPacket) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLivoxEthPacket = &__pyx_type_7pylivox_PyLivoxEthPacket;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLivoxEthPacket) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLivoxEthPacket->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLivoxEthPacket->tp_dictoffset && __pyx_ptype_7pylivox_PyLivoxEthPacket->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLivoxEthPacket->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLivoxEthPacket, (PyObject *) __pyx_ptype_7pylivox_PyLivoxEthPacket) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLivoxEthPacket) < 0) __PYX_ERR(0, 1656, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyStatusUnion = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyStatusUnion_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyStatusUnion)) __PYX_ERR(0, 1739, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyStatusUnion_spec, __pyx_ptype_7pylivox_PyStatusUnion) < 0) __PYX_ERR(0, 1739, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyStatusUnion = &__pyx_type_7pylivox_PyStatusUnion;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyStatusUnion) < 0) __PYX_ERR(0, 1739, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyStatusUnion->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyStatusUnion->tp_dictoffset && __pyx_ptype_7pylivox_PyStatusUnion->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyStatusUnion->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyStatusUnion, (PyObject *) __pyx_ptype_7pylivox_PyStatusUnion) < 0) __PYX_ERR(0, 1739, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyStatusUnion) < 0) __PYX_ERR(0, 1739, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyDeviceInfo = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyDeviceInfo_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyDeviceInfo)) __PYX_ERR(0, 1766, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyDeviceInfo_spec, __pyx_ptype_7pylivox_PyDeviceInfo) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyDeviceInfo = &__pyx_type_7pylivox_PyDeviceInfo;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyDeviceInfo) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyDeviceInfo->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyDeviceInfo->tp_dictoffset && __pyx_ptype_7pylivox_PyDeviceInfo->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyDeviceInfo->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyDeviceInfo, (PyObject *) __pyx_ptype_7pylivox_PyDeviceInfo) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyDeviceInfo) < 0) __PYX_ERR(0, 1766, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyBroadcastDeviceInfo = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyBroadcastDeviceInfo_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyBroadcastDeviceInfo)) __PYX_ERR(0, 1897, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyBroadcastDeviceInfo_spec, __pyx_ptype_7pylivox_PyBroadcastDeviceInfo) < 0) __PYX_ERR(0, 1897, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyBroadcastDeviceInfo = &__pyx_type_7pylivox_PyBroadcastDeviceInfo;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyBroadcastDeviceInfo) < 0) __PYX_ERR(0, 1897, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyBroadcastDeviceInfo->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyBroadcastDeviceInfo->tp_dictoffset && __pyx_ptype_7pylivox_PyBroadcastDeviceInfo->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyBroadcastDeviceInfo->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyBroadcastDeviceInfo, (PyObject *) __pyx_ptype_7pylivox_PyBroadcastDeviceInfo) < 0) __PYX_ERR(0, 1897, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyBroadcastDeviceInfo) < 0) __PYX_ERR(0, 1897, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyConnectedLidarInfo = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyConnectedLidarInfo_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyConnectedLidarInfo)) __PYX_ERR(0, 1942, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyConnectedLidarInfo_spec, __pyx_ptype_7pylivox_PyConnectedLidarInfo) < 0) __PYX_ERR(0, 1942, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyConnectedLidarInfo = &__pyx_type_7pylivox_PyConnectedLidarInfo;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyConnectedLidarInfo) < 0) __PYX_ERR(0, 1942, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyConnectedLidarInfo->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyConnectedLidarInfo->tp_dictoffset && __pyx_ptype_7pylivox_PyConnectedLidarInfo->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyConnectedLidarInfo->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyConnectedLidarInfo, (PyObject *) __pyx_ptype_7pylivox_PyConnectedLidarInfo) < 0) __PYX_ERR(0, 1942, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyConnectedLidarInfo) < 0) __PYX_ERR(0, 1942, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyLidarModeRequestItem = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyLidarModeRequestItem_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyLidarModeRequestItem)) __PYX_ERR(0, 1996, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyLidarModeRequestItem_spec, __pyx_ptype_7pylivox_PyLidarModeRequestItem) < 0) __PYX_ERR(0, 1996, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyLidarModeRequestItem = &__pyx_type_7pylivox_PyLidarModeRequestItem;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyLidarModeRequestItem) < 0) __PYX_ERR(0, 1996, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyLidarModeRequestItem->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyLidarModeRequestItem->tp_dictoffset && __pyx_ptype_7pylivox_PyLidarModeRequestItem->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyLidarModeRequestItem->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyLidarModeRequestItem, (PyObject *) __pyx_ptype_7pylivox_PyLidarModeRequestItem) < 0) __PYX_ERR(0, 1996, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyLidarModeRequestItem) < 0) __PYX_ERR(0, 1996, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyReturnCode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyReturnCode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyReturnCode)) __PYX_ERR(0, 2022, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyReturnCode_spec, __pyx_ptype_7pylivox_PyReturnCode) < 0) __PYX_ERR(0, 2022, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyReturnCode = &__pyx_type_7pylivox_PyReturnCode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyReturnCode) < 0) __PYX_ERR(0, 2022, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyReturnCode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyReturnCode->tp_dictoffset && __pyx_ptype_7pylivox_PyReturnCode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyReturnCode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyReturnCode, (PyObject *) __pyx_ptype_7pylivox_PyReturnCode) < 0) __PYX_ERR(0, 2022, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyReturnCode) < 0) __PYX_ERR(0, 2022, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyDeviceBroadcastCode = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyDeviceBroadcastCode_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyDeviceBroadcastCode)) __PYX_ERR(0, 2047, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyDeviceBroadcastCode_spec, __pyx_ptype_7pylivox_PyDeviceBroadcastCode) < 0) __PYX_ERR(0, 2047, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyDeviceBroadcastCode = &__pyx_type_7pylivox_PyDeviceBroadcastCode;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyDeviceBroadcastCode) < 0) __PYX_ERR(0, 2047, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyDeviceBroadcastCode->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyDeviceBroadcastCode->tp_dictoffset && __pyx_ptype_7pylivox_PyDeviceBroadcastCode->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyDeviceBroadcastCode->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyDeviceBroadcastCode, (PyObject *) __pyx_ptype_7pylivox_PyDeviceBroadcastCode) < 0) __PYX_ERR(0, 2047, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyDeviceBroadcastCode) < 0) __PYX_ERR(0, 2047, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7pylivox_PyRainFogSuppressRequestItem_spec, NULL); if (unlikely(!__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem)) __PYX_ERR(0, 2063, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7pylivox_PyRainFogSuppressRequestItem_spec, __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem) < 0) __PYX_ERR(0, 2063, __pyx_L1_error)
  #else
  __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem = &__pyx_type_7pylivox_PyRainFogSuppressRequestItem;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem) < 0) __PYX_ERR(0, 2063, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7pylivox_PyRainFogSuppressRequestItem->tp_dictoffset && __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PyRainFogSuppressRequestItem, (PyObject *) __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem) < 0) __PYX_ERR(0, 2063, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7pylivox_PyRainFogSuppressRequestItem) < 0) __PYX_ERR(0, 2063, __pyx_L1_error)
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType_3_0_11(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyTypeObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(4, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType_3_0_11(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyBoolObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_7cpython_4bool_bool) __PYX_ERR(5, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType_3_0_11(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(PyComplexObject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_7cpython_7complex_complex) __PYX_ERR(6, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("array"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_5array_array = __Pyx_ImportType_3_0_11(__pyx_t_1, "array", "array", sizeof(arrayobject), __PYX_GET_STRUCT_ALIGNMENT_3_0_11(arrayobject),__Pyx_ImportType_CheckSize_Warn_3_0_11); if (!__pyx_ptype_7cpython_5array_array) __PYX_ERR(3, 69, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_pylivox(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_pylivox},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "pylivox",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initpylivox(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initpylivox(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_pylivox(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_pylivox(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_pylivox(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  long __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'pylivox' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("pylivox", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "pylivox" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = __Pyx_PyImport_AddModuleRef((const char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_pylivox(void)", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_pylivox) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "pylivox")) {
      if (unlikely((PyDict_SetItemString(modules, "pylivox", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "pylivox.pyx":5
 * from libc.stdint cimport int32_t, int16_t, int8_t, int64_t, uint8_t, uint16_t, uint64_t, uint32_t
 * from cython.cimports.cpython import array
 * import array             # <<<<<<<<<<<<<<
 * 
 * kMaxLidarCount = 32
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_array, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_array, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":7
 * import array
 * 
 * kMaxLidarCount = 32             # <<<<<<<<<<<<<<
 * 
 * LIVOX_SDK_MAJOR_VERSION = 2
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_kMaxLidarCount, __pyx_int_32) < 0) __PYX_ERR(0, 7, __pyx_L1_error)

  /* "pylivox.pyx":9
 * kMaxLidarCount = 32
 * 
 * LIVOX_SDK_MAJOR_VERSION = 2             # <<<<<<<<<<<<<<
 * LIVOX_SDK_MINOR_VERSION = 3
 * LIVOX_SDK_PATCH_VERSION = 0
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LIVOX_SDK_MAJOR_VERSION, __pyx_int_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)

  /* "pylivox.pyx":10
 * 
 * LIVOX_SDK_MAJOR_VERSION = 2
 * LIVOX_SDK_MINOR_VERSION = 3             # <<<<<<<<<<<<<<
 * LIVOX_SDK_PATCH_VERSION = 0
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LIVOX_SDK_MINOR_VERSION, __pyx_int_3) < 0) __PYX_ERR(0, 10, __pyx_L1_error)

  /* "pylivox.pyx":11
 * LIVOX_SDK_MAJOR_VERSION = 2
 * LIVOX_SDK_MINOR_VERSION = 3
 * LIVOX_SDK_PATCH_VERSION = 0             # <<<<<<<<<<<<<<
 * 
 * kBroadcastCodeSize = 16
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LIVOX_SDK_PATCH_VERSION, __pyx_int_0) < 0) __PYX_ERR(0, 11, __pyx_L1_error)

  /* "pylivox.pyx":13
 * LIVOX_SDK_PATCH_VERSION = 0
 * 
 * kBroadcastCodeSize = 16             # <<<<<<<<<<<<<<
 * 
 * ctypedef int32_t livox_status
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_kBroadcastCodeSize, __pyx_int_16) < 0) __PYX_ERR(0, 13, __pyx_L1_error)

  /* "pylivox.pyx":35
 *     livox_status GetConnectedDevices(DeviceInfo *devices, uint8_t *size)
 * 
 * def PyInit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Initialize the SDK.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_1PyInit, 0, __pyx_n_s_PyInit, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__41)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyInit, __pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":42
 *     return Init()
 * 
 * def PyUninit():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_3PyUninit, 0, __pyx_n_s_PyUninit, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__42)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyUninit, __pyx_t_2) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":48
 *     Uninit()
 * 
 * def PyStart():             # <<<<<<<<<<<<<<
 *     '''
 *     * Start the device scanning routine which runs on a separate thread.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_5PyStart, 0, __pyx_n_s_PyStart, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__43)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyStart, __pyx_t_2) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":55
 *     return Start()
 * 
 * def PyDisableConsoleLogger():             # <<<<<<<<<<<<<<
 *     '''
 *     * Disable console log output.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_7PyDisableConsoleLogger, 0, __pyx_n_s_PyDisableConsoleLogger, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__44)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyDisableConsoleLogger, __pyx_t_2) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":61
 *     return DisableConsoleLogger()
 * 
 * def PySaveLoggerFile():             # <<<<<<<<<<<<<<
 *     '''
 *     * Save the log file.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_9PySaveLoggerFile, 0, __pyx_n_s_PySaveLoggerFile, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PySaveLoggerFile, __pyx_t_2) < 0) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":67
 *     return SaveLoggerFile()
 * 
 * def PyGetLivoxSdkVersion(version: PyLivoxSdkVersion):             # <<<<<<<<<<<<<<
 *     '''
 *     * Return SDK's version information in a numeric form.
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_version, __pyx_n_s_PyLivoxSdkVersion) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_11PyGetLivoxSdkVersion, 0, __pyx_n_s_PyGetLivoxSdkVersion, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__47)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyGetLivoxSdkVersion, __pyx_t_3) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":77
 *     (<object>f)(status, handle, response)
 * 
 * def PyHubStartSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Start hub sampling.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyHubStartSampling, 0, __pyx_n_s_PyHubStartSampling, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__49)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyHubStartSampling, __pyx_t_3) < 0) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":86
 *     return HubStartSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubStopSampling(cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Stop the Livox Hub's sampling.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyHubStopSampling, 0, __pyx_n_s_PyHubStopSampling, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__50)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyHubStopSampling, __pyx_t_3) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":95
 *     return HubStopSampling(callCommonCommandCallback, <void*> cb)
 * 
 * def PyHubGetLidarHandle(slot, id):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get the LiDAR unit handle used in the Livox Hub data callback function from slot and id.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_17PyHubGetLidarHandle, 0, __pyx_n_s_PyHubGetLidarHandle, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__52)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyHubGetLidarHandle, __pyx_t_3) < 0) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":104
 *     return HubGetLidarHandle(slot, id)
 * 
 * def PyDisconnectDevice(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Disconnect divice.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_19PyDisconnectDevice, 0, __pyx_n_s_PyDisconnectDevice, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__54)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyDisconnectDevice, __pyx_t_3) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":114
 *     return DisconnectDevice(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetCartesianCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to cartesian coordinate.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PySetCartesianCoordinate, 0, __pyx_n_s_PySetCartesianCoordinate, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PySetCartesianCoordinate, __pyx_t_3) < 0) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":124
 *     return SetCartesianCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PySetSphericalCoordinate(handle, cb):             # <<<<<<<<<<<<<<
 *     '''
 *     * Change point cloud coordinate system to spherical coordinate.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_23PySetSphericalCoordinate, 0, __pyx_n_s_PySetSphericalCoordinate, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__56)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PySetSphericalCoordinate, __pyx_t_3) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":134
 *     return SetSphericalCoordinate(handle, callCommonCommandCallback, <void*> cb)
 * 
 * def PyAddHubToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Add a broadcast code to the connecting list and only devices with broadcast code in this list will be connected. The
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_25PyAddHubToConnect, 0, __pyx_n_s_PyAddHubToConnect, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__58)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyAddHubToConnect, __pyx_t_3) < 0) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":145
 *     return AddHubToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyAddLidarToConnect(broadcast_code, handle):             # <<<<<<<<<<<<<<
 *     '''
 *     * Get all connected devices' information.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_27PyAddLidarToConnect, 0, __pyx_n_s_PyAddLidarToConnect, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__59)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyAddLidarToConnect, __pyx_t_3) < 0) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":154
 *     return AddLidarToConnect(<char*> broadcast_code, <uint8_t*> handle)
 * 
 * def PyGetConnectedDevices(devices, size):             # <<<<<<<<<<<<<<
 *     '''
 *     * Function type of callback that queries device's information.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_29PyGetConnectedDevices, 0, __pyx_n_s_PyGetConnectedDevices, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PyGetConnectedDevices, __pyx_t_3) < 0) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":436
 *     Device type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeHub():
 *         return DeviceType.kDeviceTypeHub
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_1DeviceTypeHub, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType_DeviceTypeHub, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__62)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeHub, __pyx_t_3) < 0) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeHub); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeHub, __pyx_t_2) < 0) __PYX_ERR(0, 436, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "pylivox.pyx":440
 *         return DeviceType.kDeviceTypeHub
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid40():
 *         return DeviceType.kDeviceTypeLidarMid40
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_3DeviceTypeLidarMid40, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType_DeviceTypeLidarMid4, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__63)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarMid40, __pyx_t_2) < 0) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarMid40); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarMid40, __pyx_t_3) < 0) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "pylivox.pyx":444
 *         return DeviceType.kDeviceTypeLidarMid40
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarTele():
 *         return DeviceType.kDeviceTypeLidarTele
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_5DeviceTypeLidarTele, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType_DeviceTypeLidarTele, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarTele, __pyx_t_3) < 0) __PYX_ERR(0, 444, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarTele); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarTele, __pyx_t_2) < 0) __PYX_ERR(0, 444, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "pylivox.pyx":448
 *         return DeviceType.kDeviceTypeLidarTele
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarHorizon():
 *         return DeviceType.kDeviceTypeLidarHorizon
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_7DeviceTypeLidarHorizon, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType_DeviceTypeLidarHori, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__65)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarHorizon, __pyx_t_2) < 0) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarHorizon); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarHorizon, __pyx_t_3) < 0) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "pylivox.pyx":452
 *         return DeviceType.kDeviceTypeLidarHorizon
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarMid70():
 *         return DeviceType.kDeviceTypeLidarMid70
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_9DeviceTypeLidarMid70, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType_DeviceTypeLidarMid7, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarMid70, __pyx_t_3) < 0) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarMid70); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarMid70, __pyx_t_2) < 0) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "pylivox.pyx":456
 *         return DeviceType.kDeviceTypeLidarMid70
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def DeviceTypeLidarAvia():
 *         return DeviceType.kDeviceTypeLidarAvia
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_11DeviceTypeLidarAvia, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType_DeviceTypeLidarAvia, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarAvia, __pyx_t_2) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarAvia); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_DeviceTypeLidarAvia, __pyx_t_3) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__69)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceType__set_state(self, __pyx_state)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceType_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceType___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__71)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceType, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceType);

  /* "pylivox.pyx":464
 *     Lidar state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateInit():
 *         return LidarState.kLidarStateInit
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_1LidarStateInit, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState_LidarStateInit, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__72)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateInit, __pyx_t_3) < 0) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateInit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateInit, __pyx_t_2) < 0) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "pylivox.pyx":468
 *         return LidarState.kLidarStateInit
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateNormal():
 *         return LidarState.kLidarStateNormal
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_3LidarStateNormal, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState_LidarStateNormal, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__73)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateNormal, __pyx_t_2) < 0) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateNormal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateNormal, __pyx_t_3) < 0) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "pylivox.pyx":472
 *         return LidarState.kLidarStateNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStatePowerSaving():
 *         return LidarState.kLidarStatePowerSaving
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_5LidarStatePowerSaving, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState_LidarStatePowerSavi, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__74)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStatePowerSaving, __pyx_t_3) < 0) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStatePowerSaving); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStatePowerSaving, __pyx_t_2) < 0) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "pylivox.pyx":476
 *         return LidarState.kLidarStatePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateStandBy():
 *         return LidarState.kLidarStateStandBy
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_7LidarStateStandBy, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState_LidarStateStandBy, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__75)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateStandBy, __pyx_t_2) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateStandBy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateStandBy, __pyx_t_3) < 0) __PYX_ERR(0, 476, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "pylivox.pyx":480
 *         return LidarState.kLidarStateStandBy
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateError():
 *         return LidarState.kLidarStateError
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_9LidarStateError, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState_LidarStateError, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__76)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateError, __pyx_t_3) < 0) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateError); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateError, __pyx_t_2) < 0) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "pylivox.pyx":484
 *         return LidarState.kLidarStateError
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStateUnknown():
 *         return LidarState.kLidarStateUnknown
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_11LidarStateUnknown, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState_LidarStateUnknown, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__77)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateUnknown, __pyx_t_2) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateUnknown); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_LidarStateUnknown, __pyx_t_3) < 0) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__78)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarState, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarState__set_state(self, __pyx_state)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLidarState_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarState___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__79)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarState, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarState);

  /* "pylivox.pyx":493
 *     Lidar mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeNormal():
 *         return LidarMode.kLidarModeNormal
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_11PyLidarMode_1LidarModeNormal, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarMode_LidarModeNormal, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__80)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModeNormal, __pyx_t_3) < 0) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModeNormal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModeNormal, __pyx_t_2) < 0) __PYX_ERR(0, 493, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);

  /* "pylivox.pyx":497
 *         return LidarMode.kLidarModeNormal
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModePowerSaving():
 *         return LidarMode.kLidarModePowerSaving
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_11PyLidarMode_3LidarModePowerSaving, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarMode_LidarModePowerSaving, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__81)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModePowerSaving, __pyx_t_2) < 0) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModePowerSaving); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModePowerSaving, __pyx_t_3) < 0) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);

  /* "pylivox.pyx":501
 *         return LidarMode.kLidarModePowerSaving
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarModeStandby():
 *         return LidarMode.kLidarModeStandby
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_11PyLidarMode_5LidarModeStandby, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarMode_LidarModeStandby, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__82)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModeStandby, __pyx_t_3) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModeStandby); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_LidarModeStandby, __pyx_t_2) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_11PyLidarMode_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarMode___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__83)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarMode__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_11PyLidarMode_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarMode___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__84)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarMode, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarMode);

  /* "pylivox.pyx":509
 *     Lidar feature.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureNone():
 *         return LidarFeature.kLidarFeatureNone
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyLidarFeature_1LidarFeatureNone, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarFeature_LidarFeatureNone, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__85)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_LidarFeatureNone, __pyx_t_2) < 0) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarFeature);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_LidarFeatureNone); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_LidarFeatureNone, __pyx_t_3) < 0) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarFeature);

  /* "pylivox.pyx":513
 *         return LidarFeature.kLidarFeatureNone
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarFeatureRainFog():
 *         return LidarFeature.kLidarFeatureRainFog
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyLidarFeature_3LidarFeatureRainFog, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarFeature_LidarFeatureRainF, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__86)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_LidarFeatureRainFog, __pyx_t_3) < 0) __PYX_ERR(0, 513, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarFeature);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_LidarFeatureRainFog); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_LidarFeatureRainFog, __pyx_t_2) < 0) __PYX_ERR(0, 513, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarFeature);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyLidarFeature_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarFeature___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__87)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarFeature);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarFeature, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarFeature__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyLidarFeature_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarFeature___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__88)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarFeature);

  /* "pylivox.pyx":521
 *     Lidar IP mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarDynamicIpMode():
 *         return LidarIpMode.kLidarDynamicIpMode
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLidarIpMode_1LidarDynamicIpMode, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarIpMode_LidarDynamicIpMode, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__89)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_LidarDynamicIpMode, __pyx_t_2) < 0) __PYX_ERR(0, 521, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarIpMode);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_LidarDynamicIpMode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_LidarDynamicIpMode, __pyx_t_3) < 0) __PYX_ERR(0, 521, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarIpMode);

  /* "pylivox.pyx":525
 *         return LidarIpMode.kLidarDynamicIpMode
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def LidarStaticIpMode():
 *         return LidarIpMode.kLidarStaticIpMode
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLidarIpMode_3LidarStaticIpMode, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarIpMode_LidarStaticIpMode, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__90)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_LidarStaticIpMode, __pyx_t_3) < 0) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarIpMode);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_LidarStaticIpMode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_LidarStaticIpMode, __pyx_t_2) < 0) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarIpMode);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLidarIpMode_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarIpMode___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__91)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarIpMode);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarIpMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarIpMode__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLidarIpMode_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarIpMode___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__92)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarIpMode, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarIpMode);

  /* "pylivox.pyx":533
 *     Lidar Scan Pattern.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def NoneRepetitiveScanPattern():
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_18PyLidarScanPattern_1NoneRepetitiveScanPattern, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarScanPattern_NoneRepetitiv, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__93)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_NoneRepetitiveScanPattern, __pyx_t_2) < 0) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarScanPattern);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_NoneRepetitiveScanPattern); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_NoneRepetitiveScanPattern, __pyx_t_3) < 0) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarScanPattern);

  /* "pylivox.pyx":537
 *         return LidarScanPattern.kNoneRepetitiveScanPattern
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def RepetitiveScanPattern():
 *         return LidarScanPattern.kRepetitiveScanPattern
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_18PyLidarScanPattern_3RepetitiveScanPattern, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarScanPattern_RepetitiveSca, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__94)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_RepetitiveScanPattern, __pyx_t_3) < 0) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarScanPattern);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_RepetitiveScanPattern); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_RepetitiveScanPattern, __pyx_t_2) < 0) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarScanPattern);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_18PyLidarScanPattern_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarScanPattern___reduce_cyth, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarScanPattern);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLidarScanPattern, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLidarScanPattern__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_18PyLidarScanPattern_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarScanPattern___setstate_cy, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__96)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLidarScanPattern, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLidarScanPattern);

  /* "pylivox.pyx":545
 *     Function return value definition.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSendFailed():
 *         return LivoxStatus.kStatusSendFailed
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_1StatusSendFailed, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusSendFailed, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__97)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusSendFailed, __pyx_t_2) < 0) __PYX_ERR(0, 545, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusSendFailed); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusSendFailed, __pyx_t_3) < 0) __PYX_ERR(0, 545, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":549
 *         return LivoxStatus.kStatusSendFailed
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusHandlerImplNotExist():
 *         return LivoxStatus.kStatusHandlerImplNotExist
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_3StatusHandlerImplNotExist, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusHandlerImplN, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__98)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusHandlerImplNotExist, __pyx_t_3) < 0) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusHandlerImplNotExist); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusHandlerImplNotExist, __pyx_t_2) < 0) __PYX_ERR(0, 549, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":553
 *         return LivoxStatus.kStatusHandlerImplNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusInvalidHandle():
 *         return LivoxStatus.kStatusInvalidHandle
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_5StatusInvalidHandle, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusInvalidHandl, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusInvalidHandle, __pyx_t_2) < 0) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusInvalidHandle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusInvalidHandle, __pyx_t_3) < 0) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":557
 *         return LivoxStatus.kStatusInvalidHandle
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusChannelNotExist():
 *         return LivoxStatus.kStatusChannelNotExist
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_7StatusChannelNotExist, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusChannelNotEx, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__100)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusChannelNotExist, __pyx_t_3) < 0) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusChannelNotExist); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusChannelNotExist, __pyx_t_2) < 0) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":561
 *         return LivoxStatus.kStatusChannelNotExist
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotEnoughMemory():
 *         return LivoxStatus.kStatusNotEnoughMemory
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_9StatusNotEnoughMemory, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusNotEnoughMem, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__101)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotEnoughMemory, __pyx_t_2) < 0) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotEnoughMemory); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotEnoughMemory, __pyx_t_3) < 0) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":565
 *         return LivoxStatus.kStatusNotEnoughMemory
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusTimeout():
 *         return LivoxStatus.kStatusTimeout
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_11StatusTimeout, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusTimeout, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__102)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusTimeout, __pyx_t_3) < 0) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusTimeout); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusTimeout, __pyx_t_2) < 0) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":569
 *         return LivoxStatus.kStatusTimeout
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotSupported():
 *         return LivoxStatus.kStatusNotSupported
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_13StatusNotSupported, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusNotSupported, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotSupported, __pyx_t_2) < 0) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotSupported); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotSupported, __pyx_t_3) < 0) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":573
 *         return LivoxStatus.kStatusNotSupported
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusNotConnected():
 *         return LivoxStatus.kStatusNotConnected
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_15StatusNotConnected, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusNotConnected, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__104)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotConnected, __pyx_t_3) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotConnected); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusNotConnected, __pyx_t_2) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":577
 *         return LivoxStatus.kStatusNotConnected
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusFailure():
 *         return LivoxStatus.kStatusFailure
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_17StatusFailure, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusFailure, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__105)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusFailure, __pyx_t_2) < 0) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusFailure); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusFailure, __pyx_t_3) < 0) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":581
 *         return LivoxStatus.kStatusFailure
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def StatusSuccess():
 *         return LivoxStatus.kStatusSuccess
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_19StatusSuccess, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus_StatusSuccess, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__106)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusSuccess, __pyx_t_3) < 0) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusSuccess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_StatusSuccess, __pyx_t_2) < 0) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_21__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__107)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyLivoxStatus, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyLivoxStatus__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyLivoxStatus_23__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxStatus___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__108)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyLivoxStatus, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyLivoxStatus);

  /* "pylivox.pyx":589
 *     Device update type, indicating the change of device connection or working state.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventConnect():
 *         return DeviceEvent.kEventConnect
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyDeviceEvent_1EventConnect, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceEvent_EventConnect, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventConnect, __pyx_t_2) < 0) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventConnect); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventConnect, __pyx_t_3) < 0) __PYX_ERR(0, 589, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);

  /* "pylivox.pyx":593
 *         return DeviceEvent.kEventConnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventDisconnect():
 *         return DeviceEvent.kEventDisconnect
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyDeviceEvent_3EventDisconnect, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceEvent_EventDisconnect, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__110)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventDisconnect, __pyx_t_3) < 0) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventDisconnect); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventDisconnect, __pyx_t_2) < 0) __PYX_ERR(0, 593, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);

  /* "pylivox.pyx":597
 *         return DeviceEvent.kEventDisconnect
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventStateChange():
 *         return DeviceEvent.kEventStateChange
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyDeviceEvent_5EventStateChange, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceEvent_EventStateChange, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__111)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventStateChange, __pyx_t_2) < 0) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventStateChange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventStateChange, __pyx_t_3) < 0) __PYX_ERR(0, 597, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);

  /* "pylivox.pyx":601
 *         return DeviceEvent.kEventStateChange
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def EventHubConnectionChange():
 *         return DeviceEvent.kEventHubConnectionChange
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyDeviceEvent_7EventHubConnectionChange, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceEvent_EventHubConnection, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__112)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventHubConnectionChange, __pyx_t_3) < 0) __PYX_ERR(0, 601, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventHubConnectionChange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_EventHubConnectionChange, __pyx_t_2) < 0) __PYX_ERR(0, 601, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyDeviceEvent_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceEvent___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__113)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyDeviceEvent, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyDeviceEvent__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyDeviceEvent_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceEvent___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__114)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyDeviceEvent, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyDeviceEvent);

  /* "pylivox.pyx":609
 *     Timestamp sync mode define.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeNoSync():
 *         return TimestampType.kTimestampTypeNoSync
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_1TimestampTypeNoSync, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType_TimestampTypeNoS, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__115)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeNoSync, __pyx_t_2) < 0) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeNoSync); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeNoSync, __pyx_t_3) < 0) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "pylivox.pyx":613
 *         return TimestampType.kTimestampTypeNoSync
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePtp():
 *         return TimestampType.kTimestampTypePtp
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_3TimestampTypePtp, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType_TimestampTypePtp, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__116)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePtp, __pyx_t_3) < 0) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePtp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePtp, __pyx_t_2) < 0) __PYX_ERR(0, 613, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "pylivox.pyx":617
 *         return TimestampType.kTimestampTypePtp
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeRsvd():
 *         return TimestampType.kTimestampTypeRsvd
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_5TimestampTypeRsvd, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType_TimestampTypeRsv, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__117)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeRsvd, __pyx_t_2) < 0) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeRsvd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeRsvd, __pyx_t_3) < 0) __PYX_ERR(0, 617, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "pylivox.pyx":621
 *         return TimestampType.kTimestampTypeRsvd
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePpsGps():
 *         return TimestampType.kTimestampTypePpsGps
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_7TimestampTypePpsGps, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType_TimestampTypePps, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__118)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePpsGps, __pyx_t_3) < 0) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePpsGps); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePpsGps, __pyx_t_2) < 0) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "pylivox.pyx":625
 *         return TimestampType.kTimestampTypePpsGps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypePps():
 *         return TimestampType.kTimestampTypePps
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_9TimestampTypePps, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType_TimestampTypePps_2, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__119)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePps, __pyx_t_2) < 0) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePps); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypePps, __pyx_t_3) < 0) __PYX_ERR(0, 625, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "pylivox.pyx":629
 *         return TimestampType.kTimestampTypePps
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def TimestampTypeUnknown():
 *         return TimestampType.kTimestampTypeUnknown
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_11TimestampTypeUnknown, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType_TimestampTypeUnk, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__120)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeUnknown, __pyx_t_3) < 0) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeUnknown); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_TimestampTypeUnknown, __pyx_t_2) < 0) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__121)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyTimestampType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyTimestampType__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyTimestampType_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyTimestampType___setstate_cytho, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__122)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyTimestampType, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyTimestampType);

  /* "pylivox.pyx":637
 *     Point data type.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeCartesian():
 *         return PointDataType.kCartesian
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_1PointDataTypeCartesian, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeCar, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__123)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeCartesian, __pyx_t_2) < 0) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeCartesian); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeCartesian, __pyx_t_3) < 0) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":641
 *         return PointDataType.kCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeSpherical():
 *         return PointDataType.kSpherical
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_3PointDataTypeSpherical, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeSph, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__124)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeSpherical, __pyx_t_3) < 0) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeSpherical); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeSpherical, __pyx_t_2) < 0) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":645
 *         return PointDataType.kSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendCartesian():
 *         return PointDataType.kExtendCartesian
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_5PointDataTypeExtendCartesian, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeExt, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__125)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeExtendCartesian, __pyx_t_2) < 0) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeExtendCartesian); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeExtendCartesian, __pyx_t_3) < 0) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":649
 *         return PointDataType.kExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeExtendSpherical():
 *         return PointDataType.kExtendSpherical
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_7PointDataTypeExtendSpherical, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeExt_2, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__126)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeExtendSpherical, __pyx_t_3) < 0) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeExtendSpherical); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeExtendSpherical, __pyx_t_2) < 0) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":653
 *         return PointDataType.kExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendCartesian():
 *         return PointDataType.kDualExtendCartesian
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_9PointDataTypeDualExtendCartesian, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeDua, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__127)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeDualExtendCartesian, __pyx_t_2) < 0) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeDualExtendCartesian); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeDualExtendCartesian, __pyx_t_3) < 0) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":657
 *         return PointDataType.kDualExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeDualExtendSpherical():
 *         return PointDataType.kDualExtendSpherical
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_11PointDataTypeDualExtendSpherical, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeDua_2, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__128)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeDualExtendSpherical, __pyx_t_3) < 0) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeDualExtendSpherical); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeDualExtendSpherical, __pyx_t_2) < 0) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":661
 *         return PointDataType.kDualExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeImu():
 *         return PointDataType.kImu
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_13PointDataTypeImu, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeImu, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__129)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeImu, __pyx_t_2) < 0) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeImu); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeImu, __pyx_t_3) < 0) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":665
 *         return PointDataType.kImu
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendCartesian():
 *         return PointDataType.kTripleExtendCartesian
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_15PointDataTypeTripleExtendCartesian, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeTri, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__130)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeTripleExtendCartesi, __pyx_t_3) < 0) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeTripleExtendCartesi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeTripleExtendCartesi, __pyx_t_2) < 0) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":669
 *         return PointDataType.kTripleExtendCartesian
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeTripleExtendSpherical():
 *         return PointDataType.kTripleExtendSpherical
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_17PointDataTypeTripleExtendSpherical, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeTri_2, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__131)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeTripleExtendSpheric, __pyx_t_2) < 0) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeTripleExtendSpheric); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeTripleExtendSpheric, __pyx_t_3) < 0) __PYX_ERR(0, 669, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":673
 *         return PointDataType.kTripleExtendSpherical
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointDataTypeMax():
 *         return PointDataType.kMaxPointDataType
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_19PointDataTypeMax, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType_PointDataTypeMax, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__132)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 673, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeMax, __pyx_t_3) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeMax); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 673, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_PointDataTypeMax, __pyx_t_2) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_21__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__133)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointDataType, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointDataType__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyPointDataType_23__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointDataType___setstate_cytho, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__134)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointDataType, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointDataType);

  /* "pylivox.pyx":681
 *     Point cloud return mode.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnFirst():
 *         return PointCloudReturnMode.kFirstReturn
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyPointCloudReturnMode_1PointCloudReturnFirst, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointCloudReturnMode_PointClou, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__135)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnFirst, __pyx_t_2) < 0) __PYX_ERR(0, 681, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnFirst); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnFirst, __pyx_t_3) < 0) __PYX_ERR(0, 681, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);

  /* "pylivox.pyx":685
 *         return PointCloudReturnMode.kFirstReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnStrongest():
 *         return PointCloudReturnMode.kStrongestReturn
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyPointCloudReturnMode_3PointCloudReturnStrongest, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointCloudReturnMode_PointClou_2, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__136)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnStrongest, __pyx_t_3) < 0) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnStrongest); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnStrongest, __pyx_t_2) < 0) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);

  /* "pylivox.pyx":689
 *         return PointCloudReturnMode.kStrongestReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnDual():
 *         return PointCloudReturnMode.kDualReturn
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyPointCloudReturnMode_5PointCloudReturnDual, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointCloudReturnMode_PointClou_3, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__137)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnDual, __pyx_t_2) < 0) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnDual); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnDual, __pyx_t_3) < 0) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);

  /* "pylivox.pyx":693
 *         return PointCloudReturnMode.kDualReturn
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def PointCloudReturnTriple():
 *         return PointCloudReturnMode.kTripleReturn
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyPointCloudReturnMode_7PointCloudReturnTriple, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointCloudReturnMode_PointClou_4, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__138)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnTriple, __pyx_t_3) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnTriple); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_PointCloudReturnTriple, __pyx_t_2) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyPointCloudReturnMode_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointCloudReturnMode___reduce, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__139)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyPointCloudReturnMode, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyPointCloudReturnMode__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyPointCloudReturnMode_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyPointCloudReturnMode___setstat, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__140)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyPointCloudReturnMode, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyPointCloudReturnMode);

  /* "pylivox.pyx":701
 *     IMU push frequency.
 *     '''
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq0Hz():
 *         return ImuFreq.kImuFreq0Hz
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_9PyImuFreq_1ImuFreq0Hz, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyImuFreq_ImuFreq0Hz, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__141)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_ImuFreq0Hz, __pyx_t_2) < 0) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyImuFreq);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_ImuFreq0Hz); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_ImuFreq0Hz, __pyx_t_3) < 0) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyImuFreq);

  /* "pylivox.pyx":705
 *         return ImuFreq.kImuFreq0Hz
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def ImuFreq200Hz():
 *         return ImuFreq.kImuFreq200Hz
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_9PyImuFreq_3ImuFreq200Hz, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyImuFreq_ImuFreq200Hz, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__142)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_ImuFreq200Hz, __pyx_t_3) < 0) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyImuFreq);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_ImuFreq200Hz); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_ImuFreq200Hz, __pyx_t_2) < 0) __PYX_ERR(0, 705, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyImuFreq);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_9PyImuFreq_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyImuFreq___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__143)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyImuFreq);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_PyImuFreq, (type(self), 0xe3b0c44, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_PyImuFreq__set_state(self, __pyx_state)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_9PyImuFreq_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyImuFreq___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__144)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_7pylivox_PyImuFreq, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7pylivox_PyImuFreq);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_17PyLivoxSdkVersion_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxSdkVersion___reduce_cytho, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__146)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_17PyLivoxSdkVersion_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxSdkVersion___setstate_cyt, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__147)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyLivoxRawPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxRawPoint___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__148)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyLivoxRawPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxRawPoint___setstate_cytho, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__149)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_17PyLivoxSpherPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxSpherPoint___reduce_cytho, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__150)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_17PyLivoxSpherPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxSpherPoint___setstate_cyt, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__151)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLivoxPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxPoint___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__152)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyLivoxPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxPoint___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__153)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PyLivoxExtendRawPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxExtendRawPoint___reduce_c, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__154)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PyLivoxExtendRawPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxExtendRawPoint___setstate, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__155)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_23PyLivoxExtendSpherPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxExtendSpherPoint___reduce, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__156)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_23PyLivoxExtendSpherPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxExtendSpherPoint___setsta, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__157)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_25PyLivoxDualExtendRawPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxDualExtendRawPoint___redu, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__158)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_25PyLivoxDualExtendRawPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxDualExtendRawPoint___sets, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__159)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_27PyLivoxDualExtendSpherPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxDualExtendSpherPoint___re, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__160)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_27PyLivoxDualExtendSpherPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxDualExtendSpherPoint___se, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__161)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_27PyLivoxTripleExtendRawPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxTripleExtendRawPoint___re, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__162)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_27PyLivoxTripleExtendRawPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxTripleExtendRawPoint___se, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__163)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_29PyLivoxTripleExtendSpherPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxTripleExtendSpherPoint_2, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__164)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_29PyLivoxTripleExtendSpherPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxTripleExtendSpherPoint_3, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__165)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyLivoxImuPoint_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxImuPoint___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__166)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_15PyLivoxImuPoint_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxImuPoint___setstate_cytho, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__167)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_16PyLidarErrorCode_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarErrorCode___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__168)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_16PyLidarErrorCode_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarErrorCode___setstate_cyth, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__169)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyHubErrorCode_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyHubErrorCode___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__170)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyHubErrorCode_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyHubErrorCode___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__171)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1622
 *     cdef ErrorMessage core  # Correctly define core as a C union
 * 
 *     def __init__(self, uint32_t error_code=0, PyLidarErrorCode lidar_error_code=PyLidarErrorCode(),             # <<<<<<<<<<<<<<
 *                  PyHubErrorCode hub_error_code=PyHubErrorCode()):
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7pylivox_PyLidarErrorCode)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k__17 = ((struct __pyx_obj_7pylivox_PyLidarErrorCode *)__pyx_t_2);
  __Pyx_GIVEREF((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pylivox.pyx":1623
 * 
 *     def __init__(self, uint32_t error_code=0, PyLidarErrorCode lidar_error_code=PyLidarErrorCode(),
 *                  PyHubErrorCode hub_error_code=PyHubErrorCode()):             # <<<<<<<<<<<<<<
 *         self.core.lidar_error_code = lidar_error_code.core  # Assigning the LidarErrorCode
 *         self.core.hub_error_code = hub_error_code.core  # Assigning the HubErrorCode
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7pylivox_PyHubErrorCode)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k__18 = ((struct __pyx_obj_7pylivox_PyHubErrorCode *)__pyx_t_2);
  __Pyx_GIVEREF((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyErrorMessage_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyErrorMessage___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__172)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_14PyErrorMessage_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyErrorMessage___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__173)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1662
 *     cdef LivoxEthPacket core
 * 
 *     def __init__(self, uint8_t version=0, uint8_t slot=0, uint8_t id=0, uint32_t err_code=0,             # <<<<<<<<<<<<<<
 *             uint8_t timestamp_type=0, uint8_t data_type=0, timestamp=[0 for _ in range(8)],
 *                   data=[0]):
 */
  { /* enter inner scope */

    /* "pylivox.pyx":1663
 * 
 *     def __init__(self, uint8_t version=0, uint8_t slot=0, uint8_t id=0, uint32_t err_code=0,
 *             uint8_t timestamp_type=0, uint8_t data_type=0, timestamp=[0 for _ in range(8)],             # <<<<<<<<<<<<<<
 *                   data=[0]):
 *         self.core.version = version
 */
    __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1663, __pyx_L4_error)
    __Pyx_GOTREF(__pyx_t_2);
    for (__pyx_t_4 = 0; __pyx_t_4 < 8; __pyx_t_4+=1) {
      __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1663, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_7genexpr__pyx_v_7pylivox__);
      __Pyx_DECREF_SET(__pyx_7genexpr__pyx_v_7pylivox__, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __pyx_t_3 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_int_0))) __PYX_ERR(0, 1663, __pyx_L4_error)
    }
    __Pyx_GOTREF(__pyx_7genexpr__pyx_v_7pylivox__);
    __Pyx_DECREF_SET(__pyx_7genexpr__pyx_v_7pylivox__, Py_None);
    goto __pyx_L7_exit_scope;
    __pyx_L4_error:;
    __Pyx_GOTREF(__pyx_7genexpr__pyx_v_7pylivox__);
    __Pyx_DECREF_SET(__pyx_7genexpr__pyx_v_7pylivox__, Py_None);
    goto __pyx_L1_error;
    __pyx_L7_exit_scope:;
  } /* exit inner scope */
  __pyx_k__19 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pylivox.pyx":1664
 *     def __init__(self, uint8_t version=0, uint8_t slot=0, uint8_t id=0, uint32_t err_code=0,
 *             uint8_t timestamp_type=0, uint8_t data_type=0, timestamp=[0 for _ in range(8)],
 *                   data=[0]):             # <<<<<<<<<<<<<<
 *         self.core.version = version
 *         self.core.slot = slot
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_int_0)) __PYX_ERR(0, 1664, __pyx_L1_error);
  __pyx_k__20 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_16PyLivoxEthPacket_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxEthPacket___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__174)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_16PyLivoxEthPacket_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLivoxEthPacket___setstate_cyth, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__175)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1745
 *     cdef StatusUnion core
 * 
 *     def __init__(self, uint32_t progress=0, PyErrorMessage status_code=PyErrorMessage()):             # <<<<<<<<<<<<<<
 *         self.core.progress = progress
 *         self.core.status_code = status_code.core
 */
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7pylivox_PyErrorMessage)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k__23 = ((struct __pyx_obj_7pylivox_PyErrorMessage *)__pyx_t_2);
  __Pyx_GIVEREF((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyStatusUnion_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyStatusUnion___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__176)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_13PyStatusUnion_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyStatusUnion___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__177)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1772
 *     cdef DeviceInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t handle=0,             # <<<<<<<<<<<<<<
 *                  uint8_t slot=0, uint8_t id=0,
 *                  uint8_t type=0, uint16_t data_port=0, uint16_t cmd_port=0, uint16_t sensor_port=0,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__24 = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pylivox.pyx":1776
 *                  uint8_t type=0, uint16_t data_port=0, uint16_t cmd_port=0, uint16_t sensor_port=0,
 *                   ip='0'*16,
 *                  PyLidarState state=PyLidarState(), PyLidarFeature feature=PyLidarFeature(),             # <<<<<<<<<<<<<<
 *                  PyStatusUnion status=PyStatusUnion(), firmware_version=[0 for _ in range(4)]):
 *         self.core.broadcast_code = broadcast_code.encode['utf-8'][:kBroadcastCodeSize-1]  # Ensure null-termination
 */
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7pylivox_PyLidarState)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_k__25 = ((struct __pyx_obj_7pylivox_PyLidarState *)__pyx_t_3);
  __Pyx_GIVEREF((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7pylivox_PyLidarFeature)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_k__26 = ((struct __pyx_obj_7pylivox_PyLidarFeature *)__pyx_t_3);
  __Pyx_GIVEREF((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pylivox.pyx":1777
 *                   ip='0'*16,
 *                  PyLidarState state=PyLidarState(), PyLidarFeature feature=PyLidarFeature(),
 *                  PyStatusUnion status=PyStatusUnion(), firmware_version=[0 for _ in range(4)]):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode['utf-8'][:kBroadcastCodeSize-1]  # Ensure null-termination
 *         self.core.handle = handle
 */
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7pylivox_PyStatusUnion)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_k__27 = ((struct __pyx_obj_7pylivox_PyStatusUnion *)__pyx_t_3);
  __Pyx_GIVEREF((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  { /* enter inner scope */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1777, __pyx_L10_error)
    __Pyx_GOTREF(__pyx_t_3);
    for (__pyx_t_4 = 0; __pyx_t_4 < 4; __pyx_t_4+=1) {
      __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1777, __pyx_L10_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_8genexpr1__pyx_v_7pylivox__);
      __Pyx_DECREF_SET(__pyx_8genexpr1__pyx_v_7pylivox__, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_int_0))) __PYX_ERR(0, 1777, __pyx_L10_error)
    }
    __Pyx_GOTREF(__pyx_8genexpr1__pyx_v_7pylivox__);
    __Pyx_DECREF_SET(__pyx_8genexpr1__pyx_v_7pylivox__, Py_None);
    goto __pyx_L13_exit_scope;
    __pyx_L10_error:;
    __Pyx_GOTREF(__pyx_8genexpr1__pyx_v_7pylivox__);
    __Pyx_DECREF_SET(__pyx_8genexpr1__pyx_v_7pylivox__, Py_None);
    goto __pyx_L1_error;
    __pyx_L13_exit_scope:;
  } /* exit inner scope */
  __pyx_k__28 = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceInfo_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceInfo___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__178)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyDeviceInfo_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceInfo___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__179)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":1903
 *     cdef BroadcastDeviceInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize,             # <<<<<<<<<<<<<<
 *                  uint8_t dev_type=0, uint16_t reserved=0, ip='0'*16):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]  # Ensure null-termination
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1903, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1903, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_k__31 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PyBroadcastDeviceInfo_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyBroadcastDeviceInfo___reduce_c, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__180)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PyBroadcastDeviceInfo_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyBroadcastDeviceInfo___setstate, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__181)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":1948
 *     cdef ConnectedLidarInfo core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t dev_type=0, version=[0 for _ in range(4)],             # <<<<<<<<<<<<<<
 *             uint8_t slot=0, uint8_t id=0):
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1948, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1948, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__32 = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;
  { /* enter inner scope */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1948, __pyx_L16_error)
    __Pyx_GOTREF(__pyx_t_3);
    for (__pyx_t_4 = 0; __pyx_t_4 < 4; __pyx_t_4+=1) {
      __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1948, __pyx_L16_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_8genexpr2__pyx_v_7pylivox__);
      __Pyx_DECREF_SET(__pyx_8genexpr2__pyx_v_7pylivox__, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_int_0))) __PYX_ERR(0, 1948, __pyx_L16_error)
    }
    __Pyx_GOTREF(__pyx_8genexpr2__pyx_v_7pylivox__);
    __Pyx_DECREF_SET(__pyx_8genexpr2__pyx_v_7pylivox__, Py_None);
    goto __pyx_L19_exit_scope;
    __pyx_L16_error:;
    __Pyx_GOTREF(__pyx_8genexpr2__pyx_v_7pylivox__);
    __Pyx_DECREF_SET(__pyx_8genexpr2__pyx_v_7pylivox__, Py_None);
    goto __pyx_L1_error;
    __pyx_L19_exit_scope:;
  } /* exit inner scope */
  __pyx_k__33 = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_20PyConnectedLidarInfo_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyConnectedLidarInfo___reduce_cy, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__182)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_20PyConnectedLidarInfo_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyConnectedLidarInfo___setstate, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__183)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":2002
 *     cdef LidarModeRequestItem core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t state=0):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.state = state
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_k__34 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyLidarModeRequestItem_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarModeRequestItem___reduce, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__184)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_22PyLidarModeRequestItem_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyLidarModeRequestItem___setstat, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__185)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2027
 *     cdef ReturnCode core
 * 
 *     def __init__(self, uint8_t ret_code=0, broadcast_code='0'*kBroadcastCodeSize):             # <<<<<<<<<<<<<<
 *         self.core.ret_code = ret_code
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__35 = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyReturnCode_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyReturnCode___reduce_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__186)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_12PyReturnCode_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyReturnCode___setstate_cython, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__187)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":2052
 *     cdef DeviceBroadcastCode core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_k__36 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PyDeviceBroadcastCode_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceBroadcastCode___reduce_c, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__188)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_21PyDeviceBroadcastCode_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyDeviceBroadcastCode___setstate, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__189)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pylivox.pyx":2068
 *     cdef RainFogSuppressRequestItem core
 * 
 *     def __init__(self, broadcast_code='0'*kBroadcastCodeSize, uint8_t feature=0):             # <<<<<<<<<<<<<<
 *         self.core.broadcast_code = broadcast_code.encode('utf-8')[:kBroadcastCodeSize-1]
 *         self.core.feature = feature
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_kBroadcastCodeSize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2068, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_kp_u_0, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2068, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__37 = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_28PyRainFogSuppressRequestItem_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyRainFogSuppressRequestItem___r, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__190)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "Pickling of struct members such as self.core must be explicitly requested with @auto_pickle(True)"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_28PyRainFogSuppressRequestItem_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PyRainFogSuppressRequestItem___s, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__191)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyDeviceType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_31__pyx_unpickle_PyDeviceType, 0, __pyx_n_s_pyx_unpickle_PyDeviceType, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__193)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyDeviceType, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyDeviceType__set_state(<PyDeviceType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyDeviceType__set_state(PyDeviceType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_33__pyx_unpickle_PyLidarState, 0, __pyx_n_s_pyx_unpickle_PyLidarState, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__194)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyLidarState, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_35__pyx_unpickle_PyLidarMode, 0, __pyx_n_s_pyx_unpickle_PyLidarMode, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__195)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyLidarMode, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarMode__set_state(<PyLidarMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarMode__set_state(PyLidarMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_37__pyx_unpickle_PyLidarFeature, 0, __pyx_n_s_pyx_unpickle_PyLidarFeature, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__196)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyLidarFeature, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLidarIpMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_39__pyx_unpickle_PyLidarIpMode, 0, __pyx_n_s_pyx_unpickle_PyLidarIpMode, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__197)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyLidarIpMode, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLidarIpMode__set_state(<PyLidarIpMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLidarIpMode__set_state(PyLidarIpMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_41__pyx_unpickle_PyLidarScanPattern, 0, __pyx_n_s_pyx_unpickle_PyLidarScanPatter, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__198)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyLidarScanPatter, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyLivoxStatus(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_43__pyx_unpickle_PyLivoxStatus, 0, __pyx_n_s_pyx_unpickle_PyLivoxStatus, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__199)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyLivoxStatus, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyLivoxStatus__set_state(<PyLivoxStatus> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyLivoxStatus__set_state(PyLivoxStatus __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_45__pyx_unpickle_PyDeviceEvent, 0, __pyx_n_s_pyx_unpickle_PyDeviceEvent, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__200)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyDeviceEvent, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyTimestampType(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_47__pyx_unpickle_PyTimestampType, 0, __pyx_n_s_pyx_unpickle_PyTimestampType, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__201)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyTimestampType, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyTimestampType__set_state(<PyTimestampType> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyTimestampType__set_state(PyTimestampType __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_49__pyx_unpickle_PyPointDataType, 0, __pyx_n_s_pyx_unpickle_PyPointDataType, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__202)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyPointDataType, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_PyPointCloudReturnMode(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_51__pyx_unpickle_PyPointCloudReturnMode, 0, __pyx_n_s_pyx_unpickle_PyPointCloudRetur, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__203)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyPointCloudRetur, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_PyPointCloudReturnMode__set_state(<PyPointCloudReturnMode> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_PyPointCloudReturnMode__set_state(PyPointCloudReturnMode __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7pylivox_53__pyx_unpickle_PyImuFreq, 0, __pyx_n_s_pyx_unpickle_PyImuFreq, NULL, __pyx_n_s_pylivox, __pyx_d, ((PyObject *)__pyx_codeobj__204)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_PyImuFreq, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pylivox.pyx":1
 * import cython             # <<<<<<<<<<<<<<
 * from libcpp cimport bool
 * from libc.stdint cimport int32_t, int16_t, int8_t, int64_t, uint8_t, uint16_t, uint64_t, uint32_t
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init pylivox", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pylivox");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    #endif
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) < 0) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL
        #if PY_VERSION_HEX < 0x03090000
        vectorcallfunc f = _PyVectorcall_Function(func);
        #else
        vectorcallfunc f = PyVectorcall_Function(func);
        #endif
        if (f) {
            return f(func, args, (size_t)nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, (size_t)nargs, NULL);
        }
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs = PyTuple_GET_SIZE(kwnames);
    PyObject *dict;
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        Py_XDECREF(key); key = NULL;
        Py_XDECREF(value); value = NULL;
        if (kwds_is_tuple) {
            Py_ssize_t size;
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(kwds);
#else
            size = PyTuple_Size(kwds);
            if (size < 0) goto bad;
#endif
            if (pos >= size) break;
#if CYTHON_AVOID_BORROWED_REFS
            key = __Pyx_PySequence_ITEM(kwds, pos);
            if (!key) goto bad;
#elif CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kwds, pos);
#else
            key = PyTuple_GetItem(kwds, pos);
            if (!key) goto bad;
#endif
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
#endif
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(value);
            Py_DECREF(key);
#endif
            key = NULL;
            value = NULL;
            continue;
        }
#if !CYTHON_AVOID_BORROWED_REFS
        Py_INCREF(key);
#endif
        Py_INCREF(value);
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    Py_XDECREF(key);
    Py_XDECREF(value);
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    Py_XDECREF(key);
    Py_XDECREF(value);
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    __Pyx_TypeName type_name;
    __Pyx_TypeName obj_type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    type_name = __Pyx_PyType_GetName(type);
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected " __Pyx_FMT_TYPENAME
        ", got " __Pyx_FMT_TYPENAME ")", name, type_name, obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
    else state = (PyGILState_STATE)0;
#endif
    CYTHON_UNUSED_VAR(clineno);
    CYTHON_UNUSED_VAR(lineno);
    CYTHON_UNUSED_VAR(filename);
    CYTHON_MAYBE_UNUSED_VAR(nogil);
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(0);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kw,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kw, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kw))) {
        Py_ssize_t kwsize;
#if CYTHON_ASSUME_SAFE_MACROS
        kwsize = PyTuple_GET_SIZE(kw);
#else
        kwsize = PyTuple_Size(kw);
        if (kwsize < 0) return 0;
#endif
        if (unlikely(kwsize == 0))
            return 1;
        if (!kw_allowed) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, 0);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            goto invalid_keyword;
        }
#if PY_VERSION_HEX < 0x03090000
        for (pos = 0; pos < kwsize; pos++) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, pos);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
        }
#endif
        return 1;
    }
    while (PyDict_Next(kw, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if (!kw_allowed && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* GetAttr3 */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
#endif
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    int res = PyObject_GetOptionalAttr(o, n, &r);
    return (res != 0) ? r : __Pyx_NewRef(d);
#else
  #if CYTHON_USE_TYPE_SLOTS
    if (likely(PyString_Check(n))) {
        r = __Pyx_PyObject_GetAttrStrNoError(o, n);
        if (unlikely(!r) && likely(!PyErr_Occurred())) {
            r = __Pyx_NewRef(d);
        }
        return r;
    }
  #endif
    r = PyObject_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
#endif
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* RaiseUnexpectedTypeError */
static int
__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)
{
    __Pyx_TypeName obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError, "Expected %s, got " __Pyx_FMT_TYPENAME,
                 expected, obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* SliceObject */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, int wraparound) {
    __Pyx_TypeName obj_type_name;
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#else
    CYTHON_UNUSED_VAR(wraparound);
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#else
    CYTHON_UNUSED_VAR(wraparound);
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is unsliceable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
bad:
    return NULL;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a - (unsigned long)b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return PyLong_FromLong(-intval);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* decode_c_string */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        size_t slen = strlen(cstring);
        if (unlikely(slen > (size_t) PY_SSIZE_T_MAX)) {
            PyErr_SetString(PyExc_OverflowError,
                            "c-string too long to convert to Python");
            return NULL;
        }
        length = (Py_ssize_t) slen;
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.') != NULL) {
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__39);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (!r) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg[2] = {NULL, NULL};
    return __Pyx_PyObject_FastCall(func, arg + 1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n;
#if CYTHON_ASSUME_SAFE_MACROS
    n = PyTuple_GET_SIZE(bases);
#else
    n = PyTuple_Size(bases);
    if (n < 0) return -1;
#endif
    for (i = 1; i < n; i++)
    {
#if CYTHON_AVOID_BORROWED_REFS
        PyObject *b0 = PySequence_GetItem(bases, i);
        if (!b0) return -1;
#elif CYTHON_ASSUME_SAFE_MACROS
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *b0 = PyTuple_GetItem(bases, i);
        if (!b0) return -1;
#endif
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
        if (dictoffset == 0)
        {
            Py_ssize_t b_dictoffset = 0;
#if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
            b_dictoffset = b->tp_dictoffset;
#else
            PyObject *py_b_dictoffset = PyObject_GetAttrString((PyObject*)b, "__dictoffset__");
            if (!py_b_dictoffset) goto dictoffset_return;
            b_dictoffset = PyLong_AsSsize_t(py_b_dictoffset);
            Py_DECREF(py_b_dictoffset);
            if (b_dictoffset == -1 && PyErr_Occurred()) goto dictoffset_return;
#endif
            if (b_dictoffset) {
                {
                    __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
                    PyErr_Format(PyExc_TypeError,
                        "extension type '%.200s' has no __dict__ slot, "
                        "but base type '" __Pyx_FMT_TYPENAME "' has: "
                        "either add 'cdef dict __dict__' to the extension type "
                        "or add '__slots__ = [...]' to the base type",
                        type_name, b_name);
                    __Pyx_DECREF_TypeName(b_name);
                }
#if !(CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY)
              dictoffset_return:
#endif
#if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(b0);
#endif
                return -1;
            }
        }
#if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(b0);
#endif
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetupReduce */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}
#endif

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType_3_0_11
#define __PYX_HAVE_RT_ImportType_3_0_11
static PyTypeObject *__Pyx_ImportType_3_0_11(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_11 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_0_11 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_0_11 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* ImportDottedModule */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__40;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef((char*) __PYX_ABI_MODULE_NAME);
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#elif PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyObject *py_name = NULL;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
    if (!py_name) return NULL;
    PyErr_Format(PyExc_TypeError, "%.200S() takes no keyword arguments",
                 py_name);
    Py_DECREF(py_name);
#else
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
#endif
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_MACROS
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(!argc) < 0) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if PY_VERSION_HEX >= 0x030d00A4
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* GetNameInClass */
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    PyObject *dict;
    assert(PyType_Check(nmspace));
#if CYTHON_USE_TYPE_SLOTS
    dict = ((PyTypeObject*)nmspace)->tp_dict;
    Py_XINCREF(dict);
#else
    dict = PyObject_GetAttr(nmspace, __pyx_n_s_dict);
#endif
    if (likely(dict)) {
        result = PyObject_GetItem(dict, name);
        Py_DECREF(dict);
        if (result) {
            return result;
        }
    }
    PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result;
        result = PyObject_Call(replace, __pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    #if __PYX_LIMITED_VERSION_HEX < 0x030780000
    {
        PyObject *compiled = NULL, *result = NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "code", code))) return NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "type", (PyObject*)(&PyType_Type)))) return NULL;
        compiled = Py_CompileString(
            "out = type(code)(\n"
            "  code.co_argcount, code.co_kwonlyargcount, code.co_nlocals, code.co_stacksize,\n"
            "  code.co_flags, code.co_code, code.co_consts, code.co_names,\n"
            "  code.co_varnames, code.co_filename, co_name, co_firstlineno,\n"
            "  code.co_lnotab)\n", "<dummy>", Py_file_input);
        if (!compiled) return NULL;
        result = PyEval_EvalCode(compiled, scratch_dict, scratch_dict);
        Py_DECREF(compiled);
        if (!result) PyErr_Print();
        Py_DECREF(result);
        result = PyDict_GetItemString(scratch_dict, "out");
        if (result) Py_INCREF(result);
        return result;
    }
    #else
    return NULL;
    #endif
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
    if (unlikely(!code_object)) goto bad;
    py_py_line = PyLong_FromLong(py_line);
    if (unlikely(!py_py_line)) goto bad;
    py_funcname = PyUnicode_FromString(funcname);
    if (unlikely(!py_funcname)) goto bad;
    dict = PyDict_New();
    if (unlikely(!dict)) goto bad;
    {
        PyObject *old_code_object = code_object;
        code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
        Py_DECREF(old_code_object);
    }
    if (unlikely(!code_object)) goto bad;
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

static PyObject* __pyx_convert__to_py_LidarErrorCode(LidarErrorCode s) {
  PyObject* res;
  PyObject* member;
  res = __Pyx_PyDict_NewPresized(13); if (unlikely(!res)) return NULL;
  member = __Pyx_PyInt_From_uint32_t(s.temp_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_temp_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.volt_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_volt_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.motor_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_motor_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.dirty_warn); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_dirty_warn, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.firmware_err); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_firmware_err, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.pps_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_pps_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.device_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_device_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.fan_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_fan_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.self_heating); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_self_heating, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.ptp_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_ptp_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.time_sync_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_time_sync_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.rsvd); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_rsvd, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.system_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_system_status, member) < 0)) goto bad;
  Py_DECREF(member);
  return res;
  bad:
  Py_XDECREF(member);
  Py_DECREF(res);
  return NULL;
}
static PyObject* __pyx_convert__to_py_HubErrorCode(HubErrorCode s) {
  PyObject* res;
  PyObject* member;
  res = __Pyx_PyDict_NewPresized(7); if (unlikely(!res)) return NULL;
  member = __Pyx_PyInt_From_uint32_t(s.sync_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_sync_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.temp_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_temp_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.lidar_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_lidar_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.lidar_link_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_lidar_link_status, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.firmware_err); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_firmware_err, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.rsvd); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_rsvd, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __Pyx_PyInt_From_uint32_t(s.system_status); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_system_status, member) < 0)) goto bad;
  Py_DECREF(member);
  return res;
  bad:
  Py_XDECREF(member);
  Py_DECREF(res);
  return NULL;
}
static PyObject* __pyx_convert__to_py_ErrorMessage(ErrorMessage s) {
  PyObject* res;
  PyObject* member;
  res = __Pyx_PyDict_NewPresized(3); if (unlikely(!res)) return NULL;
  member = __Pyx_PyInt_From_uint32_t(s.error_code); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_error_code, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __pyx_convert__to_py_LidarErrorCode(s.lidar_error_code); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_lidar_error_code, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __pyx_convert__to_py_HubErrorCode(s.hub_error_code); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_hub_error_code, member) < 0)) goto bad;
  Py_DECREF(member);
  return res;
  bad:
  Py_XDECREF(member);
  Py_DECREF(res);
  return NULL;
}
static PyObject* __pyx_convert__to_py_StatusUnion(StatusUnion s) {
  PyObject* res;
  PyObject* member;
  res = __Pyx_PyDict_NewPresized(2); if (unlikely(!res)) return NULL;
  member = __Pyx_PyInt_From_uint32_t(s.progress); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_progress, member) < 0)) goto bad;
  Py_DECREF(member);
  member = __pyx_convert__to_py_ErrorMessage(s.status_code); if (unlikely(!member)) goto bad;
  if (unlikely(PyDict_SetItem(res, __pyx_n_s_status_code, member) < 0)) goto bad;
  Py_DECREF(member);
  return res;
  bad:
  Py_XDECREF(member);
  Py_DECREF(res);
  return NULL;
}
/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (int) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(int) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(int) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        int val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (int) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (int) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (int) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (int) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((int) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((int) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (int) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE uint32_t __Pyx_PyInt_As_uint32_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint32_t neg_one = (uint32_t) -1, const_zero = (uint32_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(uint32_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(uint32_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint32_t) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        uint32_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (uint32_t) -1;
        val = __Pyx_PyInt_As_uint32_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(uint32_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(uint32_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) >= 2 * PyLong_SHIFT)) {
                            return (uint32_t) (((((uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(uint32_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) >= 3 * PyLong_SHIFT)) {
                            return (uint32_t) (((((((uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(uint32_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) >= 4 * PyLong_SHIFT)) {
                            return (uint32_t) (((((((((uint32_t)digits[3]) << PyLong_SHIFT) | (uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (uint32_t) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(uint32_t) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint32_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(uint32_t) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint32_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(uint32_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(uint32_t) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (uint32_t) (((uint32_t)-1)*(((((uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(uint32_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (uint32_t) ((((((uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(uint32_t) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (uint32_t) (((uint32_t)-1)*(((((((uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(uint32_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (uint32_t) ((((((((uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(uint32_t) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (uint32_t) (((uint32_t)-1)*(((((((((uint32_t)digits[3]) << PyLong_SHIFT) | (uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(uint32_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint32_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (uint32_t) ((((((((((uint32_t)digits[3]) << PyLong_SHIFT) | (uint32_t)digits[2]) << PyLong_SHIFT) | (uint32_t)digits[1]) << PyLong_SHIFT) | (uint32_t)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(uint32_t) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint32_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(uint32_t) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint32_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        uint32_t val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (uint32_t) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (uint32_t) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (uint32_t) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (uint32_t) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(uint32_t) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((uint32_t) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(uint32_t) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((uint32_t) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((uint32_t) 1) << (sizeof(uint32_t) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (uint32_t) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint32_t");
    return (uint32_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint32_t");
    return (uint32_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE uint16_t __Pyx_PyInt_As_uint16_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint16_t neg_one = (uint16_t) -1, const_zero = (uint16_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(uint16_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(uint16_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint16_t) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        uint16_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (uint16_t) -1;
        val = __Pyx_PyInt_As_uint16_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(uint16_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(uint16_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) >= 2 * PyLong_SHIFT)) {
                            return (uint16_t) (((((uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(uint16_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) >= 3 * PyLong_SHIFT)) {
                            return (uint16_t) (((((((uint16_t)digits[2]) << PyLong_SHIFT) | (uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(uint16_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) >= 4 * PyLong_SHIFT)) {
                            return (uint16_t) (((((((((uint16_t)digits[3]) << PyLong_SHIFT) | (uint16_t)digits[2]) << PyLong_SHIFT) | (uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (uint16_t) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(uint16_t) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint16_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(uint16_t) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint16_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(uint16_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(uint16_t) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (uint16_t) (((uint16_t)-1)*(((((uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(uint16_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (uint16_t) ((((((uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(uint16_t) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (uint16_t) (((uint16_t)-1)*(((((((uint16_t)digits[2]) << PyLong_SHIFT) | (uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(uint16_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (uint16_t) ((((((((uint16_t)digits[2]) << PyLong_SHIFT) | (uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(uint16_t) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (uint16_t) (((uint16_t)-1)*(((((((((uint16_t)digits[3]) << PyLong_SHIFT) | (uint16_t)digits[2]) << PyLong_SHIFT) | (uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(uint16_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint16_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint16_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (uint16_t) ((((((((((uint16_t)digits[3]) << PyLong_SHIFT) | (uint16_t)digits[2]) << PyLong_SHIFT) | (uint16_t)digits[1]) << PyLong_SHIFT) | (uint16_t)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(uint16_t) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint16_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(uint16_t) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint16_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        uint16_t val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (uint16_t) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (uint16_t) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (uint16_t) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (uint16_t) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(uint16_t) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((uint16_t) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(uint16_t) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((uint16_t) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((uint16_t) 1) << (sizeof(uint16_t) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (uint16_t) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint16_t");
    return (uint16_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint16_t");
    return (uint16_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE uint8_t __Pyx_PyInt_As_uint8_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint8_t neg_one = (uint8_t) -1, const_zero = (uint8_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(uint8_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(uint8_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint8_t) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        uint8_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (uint8_t) -1;
        val = __Pyx_PyInt_As_uint8_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(uint8_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(uint8_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) >= 2 * PyLong_SHIFT)) {
                            return (uint8_t) (((((uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(uint8_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) >= 3 * PyLong_SHIFT)) {
                            return (uint8_t) (((((((uint8_t)digits[2]) << PyLong_SHIFT) | (uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(uint8_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) >= 4 * PyLong_SHIFT)) {
                            return (uint8_t) (((((((((uint8_t)digits[3]) << PyLong_SHIFT) | (uint8_t)digits[2]) << PyLong_SHIFT) | (uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (uint8_t) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(uint8_t) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint8_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(uint8_t) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint8_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(uint8_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(uint8_t) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (uint8_t) (((uint8_t)-1)*(((((uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(uint8_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (uint8_t) ((((((uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(uint8_t) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (uint8_t) (((uint8_t)-1)*(((((((uint8_t)digits[2]) << PyLong_SHIFT) | (uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(uint8_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (uint8_t) ((((((((uint8_t)digits[2]) << PyLong_SHIFT) | (uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(uint8_t) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (uint8_t) (((uint8_t)-1)*(((((((((uint8_t)digits[3]) << PyLong_SHIFT) | (uint8_t)digits[2]) << PyLong_SHIFT) | (uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(uint8_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(uint8_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(uint8_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (uint8_t) ((((((((((uint8_t)digits[3]) << PyLong_SHIFT) | (uint8_t)digits[2]) << PyLong_SHIFT) | (uint8_t)digits[1]) << PyLong_SHIFT) | (uint8_t)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(uint8_t) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint8_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(uint8_t) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(uint8_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        uint8_t val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (uint8_t) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (uint8_t) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (uint8_t) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (uint8_t) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(uint8_t) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((uint8_t) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(uint8_t) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((uint8_t) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((uint8_t) 1) << (sizeof(uint8_t) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (uint8_t) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint8_t");
    return (uint8_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint8_t");
    return (uint8_t) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (long) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(long) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(long) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        long val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (long) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (long) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (long) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (long) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((long) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((long) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (long) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int32_t(int32_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int32_t neg_one = (int32_t) -1, const_zero = (int32_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int32_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int32_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int32_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int32_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int32_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(int32_t),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(int32_t));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint8_t(uint8_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint8_t neg_one = (uint8_t) -1, const_zero = (uint8_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(uint8_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(uint8_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint8_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(uint8_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint8_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(uint8_t),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(uint8_t));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_DeviceType(DeviceType value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const DeviceType neg_one = (DeviceType) -1, const_zero = (DeviceType) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(DeviceType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(DeviceType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(DeviceType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(DeviceType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(DeviceType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(DeviceType),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(DeviceType));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarState(LidarState value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarState neg_one = (LidarState) -1, const_zero = (LidarState) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(LidarState) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(LidarState) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarState) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(LidarState) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarState) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(LidarState),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(LidarState));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarMode(LidarMode value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarMode neg_one = (LidarMode) -1, const_zero = (LidarMode) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(LidarMode) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(LidarMode) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarMode) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(LidarMode) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarMode) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(LidarMode),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(LidarMode));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarFeature(LidarFeature value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarFeature neg_one = (LidarFeature) -1, const_zero = (LidarFeature) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(LidarFeature) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(LidarFeature) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarFeature) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(LidarFeature) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarFeature) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(LidarFeature),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(LidarFeature));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarIpMode(LidarIpMode value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarIpMode neg_one = (LidarIpMode) -1, const_zero = (LidarIpMode) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(LidarIpMode) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(LidarIpMode) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarIpMode) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(LidarIpMode) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarIpMode) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(LidarIpMode),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(LidarIpMode));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LidarScanPattern(LidarScanPattern value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarScanPattern neg_one = (LidarScanPattern) -1, const_zero = (LidarScanPattern) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(LidarScanPattern) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(LidarScanPattern) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarScanPattern) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(LidarScanPattern) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LidarScanPattern) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(LidarScanPattern),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(LidarScanPattern));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_LivoxStatus(LivoxStatus value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LivoxStatus neg_one = (LivoxStatus) -1, const_zero = (LivoxStatus) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(LivoxStatus) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(LivoxStatus) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LivoxStatus) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(LivoxStatus) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(LivoxStatus) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(LivoxStatus),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(LivoxStatus));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_DeviceEvent(DeviceEvent value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const DeviceEvent neg_one = (DeviceEvent) -1, const_zero = (DeviceEvent) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(DeviceEvent) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(DeviceEvent) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(DeviceEvent) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(DeviceEvent) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(DeviceEvent) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(DeviceEvent),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(DeviceEvent));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_TimestampType(TimestampType value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const TimestampType neg_one = (TimestampType) -1, const_zero = (TimestampType) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(TimestampType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(TimestampType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(TimestampType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(TimestampType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(TimestampType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(TimestampType),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(TimestampType));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_PointDataType(PointDataType value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const PointDataType neg_one = (PointDataType) -1, const_zero = (PointDataType) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(PointDataType) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(PointDataType) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(PointDataType) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(PointDataType) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(PointDataType) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(PointDataType),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(PointDataType));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_PointCloudReturnMode(PointCloudReturnMode value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const PointCloudReturnMode neg_one = (PointCloudReturnMode) -1, const_zero = (PointCloudReturnMode) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(PointCloudReturnMode) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(PointCloudReturnMode) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(PointCloudReturnMode) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(PointCloudReturnMode) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(PointCloudReturnMode) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(PointCloudReturnMode),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(PointCloudReturnMode));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_ImuFreq(ImuFreq value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const ImuFreq neg_one = (ImuFreq) -1, const_zero = (ImuFreq) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(ImuFreq) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(ImuFreq) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(ImuFreq) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(ImuFreq) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(ImuFreq) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(ImuFreq),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(ImuFreq));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(int));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPy */
static CYTHON_INLINE int32_t __Pyx_PyInt_As_int32_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int32_t neg_one = (int32_t) -1, const_zero = (int32_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int32_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int32_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int32_t) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        int32_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int32_t) -1;
        val = __Pyx_PyInt_As_int32_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int32_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(int32_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) >= 2 * PyLong_SHIFT)) {
                            return (int32_t) (((((int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int32_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) >= 3 * PyLong_SHIFT)) {
                            return (int32_t) (((((((int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int32_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) >= 4 * PyLong_SHIFT)) {
                            return (int32_t) (((((((((int32_t)digits[3]) << PyLong_SHIFT) | (int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (int32_t) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(int32_t) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int32_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int32_t) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int32_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(int32_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(int32_t) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (int32_t) (((int32_t)-1)*(((((int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int32_t) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) - 1 > 2 * PyLong_SHIFT)) {
                            return (int32_t) ((((((int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int32_t) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (int32_t) (((int32_t)-1)*(((((((int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int32_t) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) - 1 > 3 * PyLong_SHIFT)) {
                            return (int32_t) ((((((((int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int32_t) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (int32_t) (((int32_t)-1)*(((((((((int32_t)digits[3]) << PyLong_SHIFT) | (int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int32_t) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int32_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int32_t) - 1 > 4 * PyLong_SHIFT)) {
                            return (int32_t) ((((((((((int32_t)digits[3]) << PyLong_SHIFT) | (int32_t)digits[2]) << PyLong_SHIFT) | (int32_t)digits[1]) << PyLong_SHIFT) | (int32_t)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(int32_t) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(int32_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(int32_t) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(int32_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        int32_t val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (int32_t) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (int32_t) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (int32_t) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (int32_t) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(int32_t) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((int32_t) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(int32_t) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((int32_t) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((int32_t) 1) << (sizeof(int32_t) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (int32_t) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int32_t");
    return (int32_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int32_t");
    return (int32_t) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint32_t(uint32_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint32_t neg_one = (uint32_t) -1, const_zero = (uint32_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(uint32_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(uint32_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint32_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(uint32_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint32_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(uint32_t),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(uint32_t));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint16_t(uint16_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint16_t neg_one = (uint16_t) -1, const_zero = (uint16_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(uint16_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(uint16_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint16_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(uint16_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint16_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(uint16_t),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(uint16_t));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPy */
static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const char neg_one = (char) -1, const_zero = (char) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(char) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(char, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (char) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        char val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (char) -1;
        val = __Pyx_PyInt_As_char(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(char, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(char) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) >= 2 * PyLong_SHIFT)) {
                            return (char) (((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(char) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) >= 3 * PyLong_SHIFT)) {
                            return (char) (((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(char) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) >= 4 * PyLong_SHIFT)) {
                            return (char) (((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (char) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(char) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(char, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(char) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(char, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(char, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(char) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) - 1 > 2 * PyLong_SHIFT)) {
                            return (char) (((char)-1)*(((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(char) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) - 1 > 2 * PyLong_SHIFT)) {
                            return (char) ((((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(char) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) - 1 > 3 * PyLong_SHIFT)) {
                            return (char) (((char)-1)*(((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(char) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) - 1 > 3 * PyLong_SHIFT)) {
                            return (char) ((((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(char) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) - 1 > 4 * PyLong_SHIFT)) {
                            return (char) (((char)-1)*(((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(char) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(char) - 1 > 4 * PyLong_SHIFT)) {
                            return (char) ((((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(char) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(char, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(char) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(char, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        char val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyObject *v;
        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
        int bits, remaining_bits, is_negative = 0;
        int chunk_size = (sizeof(long) < 8) ? 30 : 62;
        if (likely(PyLong_CheckExact(x))) {
            v = __Pyx_NewRef(x);
        } else {
            v = PyNumber_Long(x);
            if (unlikely(!v)) return (char) -1;
            assert(PyLong_CheckExact(v));
        }
        {
            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);
            if (unlikely(result < 0)) {
                Py_DECREF(v);
                return (char) -1;
            }
            is_negative = result == 1;
        }
        if (is_unsigned && unlikely(is_negative)) {
            Py_DECREF(v);
            goto raise_neg_overflow;
        } else if (is_negative) {
            stepval = PyNumber_Invert(v);
            Py_DECREF(v);
            if (unlikely(!stepval))
                return (char) -1;
        } else {
            stepval = v;
        }
        v = NULL;
        val = (char) 0;
        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
        for (bits = 0; bits < (int) sizeof(char) * 8 - chunk_size; bits += chunk_size) {
            PyObject *tmp, *digit;
            long idigit;
            digit = PyNumber_And(stepval, mask);
            if (unlikely(!digit)) goto done;
            idigit = PyLong_AsLong(digit);
            Py_DECREF(digit);
            if (unlikely(idigit < 0)) goto done;
            val |= ((char) idigit) << bits;
            tmp = PyNumber_Rshift(stepval, shift);
            if (unlikely(!tmp)) goto done;
            Py_DECREF(stepval); stepval = tmp;
        }
        Py_DECREF(shift); shift = NULL;
        Py_DECREF(mask); mask = NULL;
        {
            long idigit = PyLong_AsLong(stepval);
            if (unlikely(idigit < 0)) goto done;
            remaining_bits = ((int) sizeof(char) * 8) - bits - (is_unsigned ? 0 : 1);
            if (unlikely(idigit >= (1L << remaining_bits)))
                goto raise_overflow;
            val |= ((char) idigit) << bits;
        }
        if (!is_unsigned) {
            if (unlikely(val & (((char) 1) << (sizeof(char) * 8 - 1))))
                goto raise_overflow;
            if (is_negative)
                val = ~val;
        }
        ret = 0;
    done:
        Py_XDECREF(shift);
        Py_XDECREF(mask);
        Py_XDECREF(stepval);
#endif
        if (unlikely(ret))
            return (char) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to char");
    return (char) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to char");
    return (char) -1;
}

/* CIntFromPy */
static CYTHON_INLINE LidarState __Pyx_PyInt_As_LidarState(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarState neg_one = (LidarState) -1, const_zero = (LidarState) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(LidarState) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(LidarState, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (LidarState) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        LidarState val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (LidarState) -1;
        val = __Pyx_PyInt_As_LidarState(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(LidarState, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(LidarState) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) >= 2 * PyLong_SHIFT)) {
                            return (LidarState) (((((LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(LidarState) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) >= 3 * PyLong_SHIFT)) {
                            return (LidarState) (((((((LidarState)digits[2]) << PyLong_SHIFT) | (LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(LidarState) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) >= 4 * PyLong_SHIFT)) {
                            return (LidarState) (((((((((LidarState)digits[3]) << PyLong_SHIFT) | (LidarState)digits[2]) << PyLong_SHIFT) | (LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (LidarState) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(LidarState) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarState, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(LidarState) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarState, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(LidarState, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(LidarState) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) - 1 > 2 * PyLong_SHIFT)) {
                            return (LidarState) (((LidarState)-1)*(((((LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(LidarState) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) - 1 > 2 * PyLong_SHIFT)) {
                            return (LidarState) ((((((LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(LidarState) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) - 1 > 3 * PyLong_SHIFT)) {
                            return (LidarState) (((LidarState)-1)*(((((((LidarState)digits[2]) << PyLong_SHIFT) | (LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(LidarState) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) - 1 > 3 * PyLong_SHIFT)) {
                            return (LidarState) ((((((((LidarState)digits[2]) << PyLong_SHIFT) | (LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(LidarState) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) - 1 > 4 * PyLong_SHIFT)) {
                            return (LidarState) (((LidarState)-1)*(((((((((LidarState)digits[3]) << PyLong_SHIFT) | (LidarState)digits[2]) << PyLong_SHIFT) | (LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(LidarState) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarState, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarState) - 1 > 4 * PyLong_SHIFT)) {
                            return (LidarState) ((((((((((LidarState)digits[3]) << PyLong_SHIFT) | (LidarState)digits[2]) << PyLong_SHIFT) | (LidarState)digits[1]) << PyLong_SHIFT) | (LidarState)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(LidarState) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarState, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(LidarState) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarState, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        LidarState val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyErr_SetString(PyExc_RuntimeError,
                        "_PyLong_AsByteArray() or PyLong_AsNativeBytes() not available, cannot convert large enums");
        val = (LidarState) -1;
#endif
        if (unlikely(ret))
            return (LidarState) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to LidarState");
    return (LidarState) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to LidarState");
    return (LidarState) -1;
}

/* CIntFromPy */
static CYTHON_INLINE LidarFeature __Pyx_PyInt_As_LidarFeature(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const LidarFeature neg_one = (LidarFeature) -1, const_zero = (LidarFeature) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(LidarFeature) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(LidarFeature, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (LidarFeature) val;
        }
    }
#endif
    if (unlikely(!PyLong_Check(x))) {
        LidarFeature val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (LidarFeature) -1;
        val = __Pyx_PyInt_As_LidarFeature(tmp);
        Py_DECREF(tmp);
        return val;
    }
    if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
        if (unlikely(__Pyx_PyLong_IsNeg(x))) {
            goto raise_neg_overflow;
        } else if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(LidarFeature, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_DigitCount(x)) {
                case 2:
                    if ((8 * sizeof(LidarFeature) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) >= 2 * PyLong_SHIFT)) {
                            return (LidarFeature) (((((LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(LidarFeature) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) >= 3 * PyLong_SHIFT)) {
                            return (LidarFeature) (((((((LidarFeature)digits[2]) << PyLong_SHIFT) | (LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(LidarFeature) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) >= 4 * PyLong_SHIFT)) {
                            return (LidarFeature) (((((((((LidarFeature)digits[3]) << PyLong_SHIFT) | (LidarFeature)digits[2]) << PyLong_SHIFT) | (LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0]));
                        }
                    }
                    break;
            }
        }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
        if (unlikely(Py_SIZE(x) < 0)) {
            goto raise_neg_overflow;
        }
#else
        {
            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
            if (unlikely(result < 0))
                return (LidarFeature) -1;
            if (unlikely(result == 1))
                goto raise_neg_overflow;
        }
#endif
        if ((sizeof(LidarFeature) <= sizeof(unsigned long))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarFeature, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(LidarFeature) <= sizeof(unsigned PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarFeature, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
        }
    } else {
#if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsCompact(x)) {
            __PYX_VERIFY_RETURN_INT(LidarFeature, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
        } else {
            const digit* digits = __Pyx_PyLong_Digits(x);
            assert(__Pyx_PyLong_DigitCount(x) > 1);
            switch (__Pyx_PyLong_SignedDigitCount(x)) {
                case -2:
                    if ((8 * sizeof(LidarFeature) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) - 1 > 2 * PyLong_SHIFT)) {
                            return (LidarFeature) (((LidarFeature)-1)*(((((LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(LidarFeature) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) - 1 > 2 * PyLong_SHIFT)) {
                            return (LidarFeature) ((((((LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(LidarFeature) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) - 1 > 3 * PyLong_SHIFT)) {
                            return (LidarFeature) (((LidarFeature)-1)*(((((((LidarFeature)digits[2]) << PyLong_SHIFT) | (LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(LidarFeature) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) - 1 > 3 * PyLong_SHIFT)) {
                            return (LidarFeature) ((((((((LidarFeature)digits[2]) << PyLong_SHIFT) | (LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(LidarFeature) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) - 1 > 4 * PyLong_SHIFT)) {
                            return (LidarFeature) (((LidarFeature)-1)*(((((((((LidarFeature)digits[3]) << PyLong_SHIFT) | (LidarFeature)digits[2]) << PyLong_SHIFT) | (LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(LidarFeature) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(LidarFeature, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(LidarFeature) - 1 > 4 * PyLong_SHIFT)) {
                            return (LidarFeature) ((((((((((LidarFeature)digits[3]) << PyLong_SHIFT) | (LidarFeature)digits[2]) << PyLong_SHIFT) | (LidarFeature)digits[1]) << PyLong_SHIFT) | (LidarFeature)digits[0])));
                        }
                    }
                    break;
            }
        }
#endif
        if ((sizeof(LidarFeature) <= sizeof(long))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarFeature, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
        } else if ((sizeof(LidarFeature) <= sizeof(PY_LONG_LONG))) {
            __PYX_VERIFY_RETURN_INT_EXC(LidarFeature, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
        }
    }
    {
        LidarFeature val;
        int ret = -1;
#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API
        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(
            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));
        if (unlikely(bytes_copied == -1)) {
        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {
            goto raise_overflow;
        } else {
            ret = 0;
        }
#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
        int one = 1; int is_little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        ret = _PyLong_AsByteArray((PyLongObject *)x,
                                    bytes, sizeof(val),
                                    is_little, !is_unsigned);
#else
        PyErr_SetString(PyExc_RuntimeError,
                        "_PyLong_AsByteArray() or PyLong_AsNativeBytes() not available, cannot convert large enums");
        val = (LidarFeature) -1;
#endif
        if (unlikely(ret))
            return (LidarFeature) -1;
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to LidarFeature");
    return (LidarFeature) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to LidarFeature");
    return (LidarFeature) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4
        if (is_unsigned) {
            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);
        } else {
            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);
        }
#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        int one = 1; int little = (int)*(unsigned char *)&one;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        int one = 1; int little = (int)*(unsigned char *)&one;
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XDECREF(name);
        name = __Pyx_NewRef(__pyx_n_s__205);
    }
    return name;
}
#endif

/* CheckBinaryVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030B00A4
    return Py_Version & ~0xFFUL;
#else
    const char* rt_version = Py_GetVersion();
    unsigned long version = 0;
    unsigned long factor = 0x01000000UL;
    unsigned int digit = 0;
    int i = 0;
    while (factor) {
        while ('0' <= rt_version[i] && rt_version[i] <= '9') {
            digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
            ++i;
        }
        version += factor * digit;
        if (rt_version[i] != '.')
            break;
        digit = 0;
        factor >>= 8;
        ++i;
    }
    return version;
#endif
}
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
